{"ast":null,"code":"var _jsxFileName = \"/home/shahid/hyperledger_EHR2/front-end/src/components/create/Create.js\",\n    _s = $RefreshSig$();\n\nimport { makeStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { openSnackBar } from \"../snackBar/SnackBar\"; // import sessionStorage from '/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/login/LoginAdmin.js';\n// import UserProfile from '../login/SessionDetails';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(4)\n  }\n}));\nexport default function CreatePage(props) {\n  _s();\n\n  const [selectedFile, setSelectedFile] = useState();\n  const [isSelected, setIsSelected] = useState(false);\n\n  const changeHandler = event => {\n    setSelectedFile(event.target.files[0]);\n    setIsSelected(true);\n  };\n\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [copiesCount, setCopiesCount] = useState(\"\");\n  const [royalties, setRoyalties] = useState(\"\");\n  const [tokenImage, settokenImage] = useState(\"\"); // var userName = UserProfile.getName();\n\n  var date = Date().toLocaleString();\n  console.log(date);\n\n  const validateForm = () => {\n    let errors = [];\n\n    if (title == \"\" || description == \"\" || price == \"\" || copiesCount == \"\" || royalties == \"\") {\n      errors.push(\"Please fill all the fields\");\n      console.log(\"Please fill all the fields\");\n    }\n\n    return errors;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const errors = validateForm();\n\n    if (errors.length) {\n      errors.forEach(error => {\n        openSnackBar({\n          message: error,\n          type: \"error\"\n        });\n      });\n    } else {\n      axios.post(`http://localhost:3001/api/createTokenImage${sessionStorage.getItem(\"UserId\")}`, {\n        title,\n        description,\n        price,\n        copiesCount,\n        royalties,\n        tokenImage,\n        date\n      }).then(res => {\n        console.log(res);\n\n        if (res.status === 200) {\n          openSnackBar({\n            message: res.data.message,\n            type: \"success\"\n          });\n          props.history.push(\"/login\");\n          return;\n        } else {\n          openSnackBar({\n            message: \"Authentication Error\",\n            type: \"error\"\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n        openSnackBar({\n          message: \"errorss\",\n          type: \"error\"\n        });\n      });\n    }\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    component: \"main\",\n    className: \"MuiContainer--01\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"h1\",\n              variant: \"h3\",\n              align: \"center\",\n              color: \"textPrimary\",\n              gutterBottom: true,\n              children: \"Create and Mint NFT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"title-input\",\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"title-input\",\n                value: title,\n                onChange: e => setTitle(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"description-input\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"description-input\",\n                value: description,\n                onChange: e => setDescription(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"price-input\",\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"price-input\",\n                value: price,\n                onChange: e => setPrice(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"copies-count-input\",\n                children: \"Number of Copies\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"copies-count-input\",\n                value: copiesCount,\n                type: \"text\",\n                onChange: e => setCopiesCount(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"royalties-input\",\n                children: \"Royalties\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"royalties-input\",\n                value: royalties,\n                type: \"password\",\n                onChange: e => setRoyalties(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"imgInp\",\n              name: \"file\",\n              onChange: (e => settokenImage(e.target.value), changeHandler)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), isSelected ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Filename: \", selectedFile.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Filetype: \", selectedFile.type]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Size in bytes: \", selectedFile.size]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Select a file to show details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"MuiButton-Full\",\n              variant: \"contained\",\n              size: \"large\",\n              color: \"primary\",\n              children: \"Create Token\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreatePage, \"PMIt+GH22CcF3vD6bJ92tItyedM=\", false, function () {\n  return [useStyles];\n});\n\n_c = CreatePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePage\");","map":{"version":3,"sources":["/home/shahid/hyperledger_EHR2/front-end/src/components/create/Create.js"],"names":["makeStyles","Button","Container","FormControl","Grid","Input","InputLabel","Paper","Typography","axios","React","useState","useEffect","openSnackBar","useStyles","theme","paper","padding","spacing","CreatePage","props","selectedFile","setSelectedFile","isSelected","setIsSelected","changeHandler","event","target","files","title","setTitle","description","setDescription","price","setPrice","copiesCount","setCopiesCount","royalties","setRoyalties","tokenImage","settokenImage","date","Date","toLocaleString","console","log","validateForm","errors","push","handleSubmit","e","preventDefault","length","forEach","error","message","type","post","sessionStorage","getItem","then","res","status","data","history","catch","classes","value","name","size"],"mappings":"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","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { openSnackBar } from \"../snackBar/SnackBar\";\n// import sessionStorage from '/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/login/LoginAdmin.js';\n// import UserProfile from '../login/SessionDetails';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(4),\n  },\n}));\n\nexport default function CreatePage(props) {\n  const [selectedFile, setSelectedFile] = useState();\n  const [isSelected, setIsSelected] = useState(false);\n\n  const changeHandler = (event) => {\n    setSelectedFile(event.target.files[0]);\n    setIsSelected(true);\n  };\n\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [copiesCount, setCopiesCount] = useState(\"\");\n  const [royalties, setRoyalties] = useState(\"\");\n  const [tokenImage, settokenImage] = useState(\"\")\n\n  // var userName = UserProfile.getName();\n  var date = Date().toLocaleString()\n  console.log(date);\n  const validateForm = () => {\n    let errors = [];\n    if (title == \"\" || description == \"\" || price == \"\" || copiesCount == \"\" || royalties == \"\") {\n      errors.push(\"Please fill all the fields\");\n      console.log(\"Please fill all the fields\");\n    }\n    return errors;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const errors = validateForm();\n    if (errors.length) {\n      errors.forEach((error) => {\n        openSnackBar({ message: error, type: \"error\" });\n      });\n    } else {\n      axios\n        .post(`http://localhost:3001/api/createTokenImage${sessionStorage.getItem(\"UserId\")}`, {\n          title,\n          description,\n          price,\n          copiesCount,\n          royalties,\n          tokenImage,\n          date\n        })\n        .then((res) => {\n          console.log(res);\n          if (res.status === 200) {\n            openSnackBar({ message: res.data.message, type: \"success\" });\n            props.history.push(\"/login\");\n            return;\n          } else {\n            openSnackBar({ message: \"Authentication Error\", type: \"error\" });\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n          openSnackBar({ message: \"errorss\", type: \"error\" });\n        });\n    }\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"sm\" component=\"main\" className={\"MuiContainer--01\"}>\n      <Paper className={classes.paper}>\n        <form onSubmit={handleSubmit}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography\n                component=\"h1\"\n                variant=\"h3\"\n                align=\"center\"\n                color=\"textPrimary\"\n                gutterBottom\n              >\n                Create and Mint NFT\n                        </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth required>\n                <InputLabel htmlFor=\"title-input\">Title</InputLabel>\n                <Input\n                  id=\"title-input\"\n                  value={title}\n                  onChange={(e) => setTitle(e.target.value)}\n                  required\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth required>\n                <InputLabel htmlFor=\"description-input\">Description</InputLabel>\n                <Input\n                  id=\"description-input\"\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                  required\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth required>\n                <InputLabel htmlFor=\"price-input\">Price</InputLabel>\n                <Input\n                  id=\"price-input\"\n                  value={price}\n                  onChange={(e) => setPrice(e.target.value)}\n                  required\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth required>\n                <InputLabel htmlFor=\"copies-count-input\">Number of Copies</InputLabel>\n                <Input\n                  id=\"copies-count-input\"\n                  value={copiesCount}\n                  type=\"text\"\n                  onChange={(e) => setCopiesCount(e.target.value)}\n                  required\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth required>\n                <InputLabel htmlFor=\"royalties-input\">\n                  Royalties\n                          </InputLabel>\n                <Input\n                  id=\"royalties-input\"\n                  value={royalties}\n                  type=\"password\"\n                  onChange={(e) => setRoyalties(e.target.value)}\n                  required\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              {/* <form runat=\"server\"> */}\n              <input type=\"file\" id=\"imgInp\" name=\"file\" onChange={(e) =>\n                settokenImage(e.target.value),\n                changeHandler\n              } />\n              {isSelected ? (\n                <div>\n                  <p>Filename: {selectedFile.name}</p>\n                  <p>Filetype: {selectedFile.type}</p>\n                  <p>Size in bytes: {selectedFile.size}</p>\n                </div>\n              ) : (\n                <p>Select a file to show details</p>\n              )}\n              {/* </form> */}\n            </Grid>\n            <Grid item xs={12}>\n              <Button\n                type=\"submit\"\n                className={\"MuiButton-Full\"}\n                variant=\"contained\"\n                size=\"large\"\n                color=\"primary\"\n              >\n                Create Token\n                        </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </Container>\n  );\n}"]},"metadata":{},"sourceType":"module"}