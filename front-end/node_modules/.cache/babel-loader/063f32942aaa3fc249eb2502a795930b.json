{"ast":null,"code":"var _jsxFileName = \"/home/shahid/hyperledger_EHR/front-end/src/components/addDoctor/AddDoctorForm.js\",\n    _s = $RefreshSig$();\n\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { openSnackBar } from \"../snackBar/SnackBar\"; // const cryptoRandomString = require(\"crypto-random-string\");\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  card: {\n    minWidth: 275,\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  }\n}));\nexport default function AddDoctorForm(props) {\n  _s();\n\n  const [did, setDid] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [specialization, setSpecialization] = useState(\"\");\n  const cancel = props.cancel;\n  const password = \"password\";\n  const addDoctor = props.addDoctor;\n  const classes = useStyles();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post(`http://localhost:3001/doctor/add`, {\n      did,\n      firstName,\n      lastName,\n      address,\n      specialization,\n      password\n    }, {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"jwtToken\")\n      }\n    }).then(res => {\n      openSnackBar({\n        message: \"Doctor data added successfully\",\n        type: \"success\"\n      });\n      addDoctor(res.data.newDoctor);\n    }).catch(error => {\n      openSnackBar({\n        message: error.response.data.message,\n        type: \"error\"\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.card,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h2\",\n            children: \"New Doctor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            m: 1,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    htmlFor: \"pid-input\",\n                    children: \"DID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    id: \"pid-input\",\n                    value: did,\n                    onChange: e => setDid(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                sm: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    htmlFor: \"firstname-input\",\n                    children: \"First Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    id: \"firstname-input\",\n                    value: firstName,\n                    onChange: e => setFirstName(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                sm: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    htmlFor: \"lastname-input\",\n                    children: \"Last Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    id: \"lastname-input\",\n                    value: lastName,\n                    onChange: e => setLastName(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                sm: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    htmlFor: \"address-input\",\n                    children: \"Address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    id: \"address-input\",\n                    value: address,\n                    onChange: e => setAddress(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                sm: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    htmlFor: \"age-input\",\n                    children: \"Specialization\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    id: \"age-input\",\n                    type: \"number\",\n                    value: specialization,\n                    onChange: e => setSpecialization(e.target.value),\n                    required: true,\n                    inputProps: {\n                      min: 0\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: \"MuiBox-RightAlign\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              onClick: cancel,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              color: \"primary\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddDoctorForm, \"oyB3COyFZcbvK7UM1LMSwDEJTqw=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddDoctorForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddDoctorForm\");","map":{"version":3,"sources":["/home/shahid/hyperledger_EHR/front-end/src/components/addDoctor/AddDoctorForm.js"],"names":["Box","Button","Card","CardActions","CardContent","FormControl","Grid","Input","InputLabel","Typography","makeStyles","axios","React","useState","openSnackBar","useStyles","theme","card","minWidth","margin","spacing","padding","AddDoctorForm","props","did","setDid","firstName","setFirstName","lastName","setLastName","address","setAddress","specialization","setSpecialization","cancel","password","addDoctor","classes","handleSubmit","e","preventDefault","post","headers","localStorage","getItem","then","res","message","type","data","newDoctor","catch","error","response","target","value","min"],"mappings":"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","sourcesContent":["import Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { openSnackBar } from \"../snackBar/SnackBar\";\n\n// const cryptoRandomString = require(\"crypto-random-string\");\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    minWidth: 275,\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n  },\n}));\n\nexport default function AddDoctorForm(props) {\n  const [did, setDid] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [specialization, setSpecialization] = useState(\"\");\n  const cancel = props.cancel;\n  const password = \"password\";\n\n  const addDoctor = props.addDoctor;\n\n  const classes = useStyles();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    axios\n      .post(\n        `http://localhost:3001/doctor/add`,\n        {\n          did,\n          firstName,\n          lastName,\n          address,\n          specialization,\n          password,\n        },\n        {\n          headers: {\n            \"x-access-token\": localStorage.getItem(\"jwtToken\"),\n          },\n        }\n      )\n      .then((res) => {\n        openSnackBar({\n          message: \"Doctor data added successfully\",\n          type: \"success\",\n        });\n        addDoctor(res.data.newDoctor);\n      })\n      .catch((error) => {\n        openSnackBar({ message: error.response.data.message, type: \"error\" });\n      });\n  };\n\n  return (\n    <React.Fragment>\n      <Card className={classes.card}>\n        <form onSubmit={handleSubmit}>\n          <CardContent>\n            <Typography variant=\"h6\" component=\"h2\">\n              New Doctor\n            </Typography>\n            <Box m={1}>\n              <Grid container spacing={2}>\n                <Grid item sm={12}>\n                  <FormControl fullWidth required>\n                    <InputLabel htmlFor=\"pid-input\">DID</InputLabel>\n                    <Input\n                      id=\"pid-input\"\n                      value={did}\n                      onChange={(e) => setDid(e.target.value)}\n                      required\n                    />\n                  </FormControl>\n                </Grid>\n                <Grid item sm={6} xs={12}>\n                  <FormControl fullWidth required>\n                    <InputLabel htmlFor=\"firstname-input\">\n                      First Name\n                    </InputLabel>\n                    <Input\n                      id=\"firstname-input\"\n                      value={firstName}\n                      onChange={(e) => setFirstName(e.target.value)}\n                      required\n                    />\n                  </FormControl>\n                </Grid>\n                <Grid item sm={6} xs={12}>\n                  <FormControl fullWidth required>\n                    <InputLabel htmlFor=\"lastname-input\">Last Name</InputLabel>\n                    <Input\n                      id=\"lastname-input\"\n                      value={lastName}\n                      onChange={(e) => setLastName(e.target.value)}\n                      required\n                    />\n                  </FormControl>\n                </Grid>\n                <Grid item sm={6} xs={12}>\n                  <FormControl fullWidth required>\n                    <InputLabel htmlFor=\"address-input\">Address</InputLabel>\n                    <Input\n                      id=\"address-input\"\n                      value={address}\n                      onChange={(e) => setAddress(e.target.value)}\n                      required\n                    />\n                  </FormControl>\n                </Grid>\n                <Grid item sm={6} xs={12}>\n                  <FormControl fullWidth required>\n                    <InputLabel htmlFor=\"age-input\">Specialization</InputLabel>\n                    <Input\n                      id=\"age-input\"\n                      type=\"number\"\n                      value={specialization}\n                      onChange={(e) => setSpecialization(e.target.value)}\n                      required\n                      inputProps={{ min: 0 }}\n                    />\n                  </FormControl>\n                </Grid>\n              </Grid>\n            </Box>\n          </CardContent>\n          <CardActions>\n            <Box className={\"MuiBox-RightAlign\"}>\n              <Button color=\"secondary\" onClick={cancel}>\n                Cancel\n              </Button>\n              <Button type=\"submit\" color=\"primary\">\n                Save\n              </Button>\n            </Box>\n          </CardActions>\n        </form>\n      </Card>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}