{"ast":null,"code":"var _jsxFileName = \"/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/transfer/Transfer.js\",\n    _s = $RefreshSig$();\n\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { openSnackBar } from \"../snackBar/SnackBar\";\n\nconst TransferPage = () => {\n  _s();\n\n  const [userid, setUserid] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const classes = useStyles();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post(`http://localhost:3001/loginAdmin/`, {\n      userid,\n      password\n    }).then(res => {\n      if (res.status === 200 && res.data.message !== \"Wrong UserID/Password\") {\n        const token = res.data.token;\n        props.setLogin(token);\n        props.history.push(\"/patients\");\n        return;\n      } else {\n        openSnackBar({\n          message: \"Authentication Error\",\n          type: \"error\"\n        });\n      }\n    }).catch(error => {\n      let errorMessage;\n\n      if (error.response) {\n        errorMessage = error.response.data.message;\n      } else if (error.message) {\n        errorMessage = error.message;\n      } else {\n        errorMessage = \"Authentication Error\";\n      }\n\n      openSnackBar({\n        message: errorMessage,\n        type: \"error\"\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    component: \"main\",\n    className: \"MuiContainer--01\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"h1\",\n              variant: \"h5\",\n              align: \"center\",\n              color: \"textPrimary\",\n              gutterBottom: true,\n              children: \"Please provide userID and password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"username-input\",\n                children: \"User ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"userid-input\",\n                value: userid,\n                onChange: e => setUserid(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"password-input\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"firstname-input\",\n                value: password,\n                type: \"password\",\n                onChange: e => setPassword(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"MuiButton-Full\",\n              variant: \"contained\",\n              size: \"large\",\n              color: \"primary\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"MuiButton-Full\",\n              href: \"/enroll/\",\n              size: \"large\",\n              color: \"primary\",\n              children: \"Not Registered? Register now!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TransferPage, \"uB2WQMi0YU+T24NMV0n0tp3mqlQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = TransferPage;\nexport default TransferPage;\nimport { makeStyles } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(4)\n  }\n}));\n\nvar _c;\n\n$RefreshReg$(_c, \"TransferPage\");","map":{"version":3,"sources":["/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/transfer/Transfer.js"],"names":["Button","Container","FormControl","Grid","Input","InputLabel","Paper","Typography","axios","React","useState","openSnackBar","TransferPage","userid","setUserid","password","setPassword","classes","useStyles","handleSubmit","e","preventDefault","post","then","res","status","data","message","token","props","setLogin","history","push","type","catch","error","errorMessage","response","paper","target","value","makeStyles","theme","padding","spacing"],"mappings":"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","sourcesContent":["import Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { openSnackBar } from \"../snackBar/SnackBar\";\n\n\nconst TransferPage = () => {\n    const [userid, setUserid] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const classes = useStyles();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        axios\n            .post(`http://localhost:3001/loginAdmin/`, {\n                userid,\n                password,\n            })\n            .then((res) => {\n                if (\n                    res.status === 200 &&\n                    res.data.message !== \"Wrong UserID/Password\"\n                ) {\n                    const token = res.data.token;\n                    props.setLogin(token);\n                    props.history.push(\"/patients\");\n                    return;\n                } else {\n                    openSnackBar({ message: \"Authentication Error\", type: \"error\" });\n                }\n            })\n            .catch((error) => {\n                let errorMessage;\n                if (error.response) {\n                    errorMessage = error.response.data.message;\n                } else if (error.message) {\n                    errorMessage = error.message;\n                } else {\n                    errorMessage = \"Authentication Error\";\n                }\n                openSnackBar({ message: errorMessage, type: \"error\" });\n            });\n    };\n\n    return (\n        <Container maxWidth=\"sm\" component=\"main\" className={\"MuiContainer--01\"}>\n            <Paper className={classes.paper}>\n                <form onSubmit={handleSubmit}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <Typography\n                                component=\"h1\"\n                                variant=\"h5\"\n                                align=\"center\"\n                                color=\"textPrimary\"\n                                gutterBottom\n                            >\n                                Please provide userID and password\n                </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormControl fullWidth required>\n                                <InputLabel htmlFor=\"username-input\">User ID</InputLabel>\n                                <Input\n                                    id=\"userid-input\"\n                                    value={userid}\n                                    onChange={(e) => setUserid(e.target.value)}\n                                    required\n                                />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormControl fullWidth required>\n                                <InputLabel htmlFor=\"password-input\">Password</InputLabel>\n                                <Input\n                                    id=\"firstname-input\"\n                                    value={password}\n                                    type=\"password\"\n                                    onChange={(e) => setPassword(e.target.value)}\n                                    required\n                                />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button\n                                type=\"submit\"\n                                className={\"MuiButton-Full\"}\n                                variant=\"contained\"\n                                size=\"large\"\n                                color=\"primary\"\n                            >\n                                Login\n                </Button>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button\n                                className={\"MuiButton-Full\"}\n                                href=\"/enroll/\"\n                                size=\"large\"\n                                color=\"primary\"\n                            >\n                                Not Registered? Register now!\n                </Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </Paper>\n        </Container>\n    );\n\n};\n\nexport default TransferPage;\n\nimport { makeStyles } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(4),\n    },\n}));\n\n\n"]},"metadata":{},"sourceType":"module"}