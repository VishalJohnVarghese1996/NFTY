{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaustubh\\\\EHR\\\\front-end\\\\src\\\\components\\\\patient\\\\PatientData.js\",\n    _s = $RefreshSig$();\n\nimport { withStyles } from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  card: {\n    minWidth: 275,\n    margin: theme.spacing(1)\n  }\n});\n\nfunction PatientCard(props) {\n  _s();\n\n  const path = props.location.pathname;\n  const PID = path.slice(path.lastIndexOf(\"/\")).slice(1);\n  const [patientData, setPatientData] = useState({});\n  const [isExpanded, setisExpanded] = useState(false);\n  const [doctors, setDoctors] = useState([]);\n  useEffect(() => {\n    axios.get(`http://localhost:3001/patient/${PID}`, {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"jwtToken\")\n      }\n    }).then(result => {\n      setPatientData(result.data[0]);\n    });\n    axios.get(`http://localhost:3001/patientRelatedToDoctor/${PID}`, {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"jwtToken\")\n      }\n    }).then(result => {\n      setDoctors(result.data);\n    });\n  }, [PID]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mb: 1,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            gutterBottom: true,\n            children: [\"PID \", patientData.PID]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h2\",\n            children: [patientData.FirstName, \" \", patientData.LastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            children: [\"Age: \", patientData.Age]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            children: [\"Address: \", patientData.Address]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), isExpanded ? /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          children: [\"EHR: \", patientData.EHR]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: isExpanded ? /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          onClick: () => setisExpanded(false),\n          children: \"Shrink\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          onClick: () => setisExpanded(true),\n          children: \"Expand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      children: \"Doctors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), doctors.map(doctorData => /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mb: 1,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            gutterBottom: true,\n            children: [\"DID \", doctorData.DID]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h2\",\n            children: [doctorData.FirstName, \" \", doctorData.LastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            children: [\"Specialization: \", doctorData.Specialization]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            children: [\"Address: \", doctorData.Address]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PatientCard, \"imgxwhaVKs80tmdAkoltIAAUfRA=\");\n\n_c = PatientCard;\nexport default withStyles(styles, {\n  withTheme: true\n})(PatientCard);\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientCard\");","map":{"version":3,"sources":["C:/Users/Kaustubh/EHR/front-end/src/components/patient/PatientData.js"],"names":["withStyles","Box","Button","Card","CardActions","CardContent","Typography","axios","React","useEffect","useState","styles","theme","card","minWidth","margin","spacing","PatientCard","props","path","location","pathname","PID","slice","lastIndexOf","patientData","setPatientData","isExpanded","setisExpanded","doctors","setDoctors","get","headers","localStorage","getItem","then","result","data","FirstName","LastName","Age","Address","EHR","map","doctorData","DID","Specialization","withTheme"],"mappings":"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","sourcesContent":["import { withStyles } from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst styles = (theme) => ({\r\n  card: {\r\n    minWidth: 275,\r\n    margin: theme.spacing(1),\r\n  },\r\n});\r\n\r\nfunction PatientCard(props) {\r\n  const path = props.location.pathname;\r\n  const PID = path.slice(path.lastIndexOf(\"/\")).slice(1);\r\n  const [patientData, setPatientData] = useState({});\r\n  const [isExpanded, setisExpanded] = useState(false);\r\n  const [doctors, setDoctors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:3001/patient/${PID}`, {\r\n        headers: {\r\n          \"x-access-token\": localStorage.getItem(\"jwtToken\"),\r\n        },\r\n      })\r\n      .then((result) => {\r\n        setPatientData(result.data[0]);\r\n      });\r\n    axios\r\n      .get(`http://localhost:3001/patientRelatedToDoctor/${PID}`, {\r\n        headers: {\r\n          \"x-access-token\": localStorage.getItem(\"jwtToken\"),\r\n        },\r\n      })\r\n      .then((result) => {\r\n        setDoctors(result.data);\r\n      });\r\n  }, [PID]);\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent>\r\n          <Box mb={1}>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              PID {patientData.PID}\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              {patientData.FirstName} {patientData.LastName}\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              Age: {patientData.Age}\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              Address: {patientData.Address}\r\n            </Typography>\r\n          </Box>\r\n          {isExpanded ? (\r\n            <Typography color=\"textSecondary\">\r\n              EHR: {patientData.EHR}\r\n            </Typography>\r\n          ) : null}\r\n        </CardContent>\r\n        <CardActions>\r\n          {isExpanded ? (\r\n            <Button size=\"small\" onClick={() => setisExpanded(false)}>\r\n              Shrink\r\n            </Button>\r\n          ) : (\r\n            <Button size=\"small\" onClick={() => setisExpanded(true)}>\r\n              Expand\r\n            </Button>\r\n          )}\r\n        </CardActions>\r\n      </Card>\r\n      <Typography variant=\"h3\">Doctors</Typography>\r\n      {doctors.map((doctorData) => (\r\n        <Card>\r\n          <CardContent>\r\n            <Box mb={1}>\r\n              <Typography color=\"textSecondary\" gutterBottom>\r\n                DID {doctorData.DID}\r\n              </Typography>\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n                {doctorData.FirstName} {doctorData.LastName}\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">\r\n                Specialization: {doctorData.Specialization}\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">\r\n                Address: {doctorData.Address}\r\n              </Typography>\r\n            </Box>\r\n            <Button size=\"small\">Remove</Button>\r\n          </CardContent>\r\n        </Card>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(PatientCard);\r\n"]},"metadata":{},"sourceType":"module"}