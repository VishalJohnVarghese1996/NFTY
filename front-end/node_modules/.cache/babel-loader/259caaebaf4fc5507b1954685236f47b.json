{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaustubh\\\\EHR\\\\front-end\\\\src\\\\components\\\\doctor\\\\DoctorData.js\",\n    _s = $RefreshSig$();\n\nimport { withStyles } from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport PatientListEHR from \"../patientList/PatientListEHR\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  card: {\n    minWidth: 275,\n    margin: theme.spacing(1)\n  }\n});\n\nfunction DoctorCard(props) {\n  _s();\n\n  const path = props.location.pathname;\n  const DID = path.slice(path.lastIndexOf(\"/\")).slice(1);\n  const [doctorData, setDoctorData] = useState({});\n  const [patientData, setPatientData] = useState([]);\n  useEffect(() => {\n    let patId = [];\n    let tempPatientData = [];\n    axios.get(`http://localhost:3001/doctor/${DID}`, {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"jwtToken\")\n      }\n    }).then(result => {\n      setDoctorData(result.data[0]);\n    });\n    axios.get(`http://localhost:3001/doctorRelatedToPatient/${DID}`, {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"jwtToken\")\n      }\n    }).then(result => {\n      for (let i = 0; i < result.data.length; i++) {\n        patId.push(result.data[i].PID);\n      }\n\n      console.log(patId);\n      axios.get(`http://localhost:3001/patients/`, {\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"jwtToken\")\n        }\n      }).then(result => {\n        tempPatientData = result.data.filter(result => {\n          return patId.includes(result.PID);\n        });\n        console.log(tempPatientData);\n\n        for (let i = 0; i < tempPatientData.length; i++) {\n          axios.get(`http://localhost:3001/getEHRRelated/${DID}/${tempPatientData[i].PID}`, {\n            headers: {\n              \"x-access-token\": localStorage.getItem(\"jwtToken\")\n            }\n          }).then(result => {\n            tempPatientData[i].EHR = result.data[0].EncryptedEHR;\n          });\n        }\n\n        setPatientData(tempPatientData);\n      });\n    });\n  }, [DID]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mb: 1,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            gutterBottom: true,\n            children: [\"DID \", doctorData.DID]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h2\",\n            children: [doctorData.FirstName, \" \", doctorData.LastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            children: [\"Specialization: \", doctorData.Specialization]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            children: [\"Address: \", doctorData.Address]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Patients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PatientListEHR, {\n      patients: patientData ? patientData : []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DoctorCard, \"qQP/sSoO7IZqBlLOnh+EbRsO2O8=\");\n\n_c = DoctorCard;\nexport default withStyles(styles, {\n  withTheme: true\n})(DoctorCard);\n\nvar _c;\n\n$RefreshReg$(_c, \"DoctorCard\");","map":{"version":3,"sources":["C:/Users/Kaustubh/EHR/front-end/src/components/doctor/DoctorData.js"],"names":["withStyles","Box","Card","CardContent","Typography","axios","React","useEffect","useState","PatientListEHR","styles","theme","card","minWidth","margin","spacing","DoctorCard","props","path","location","pathname","DID","slice","lastIndexOf","doctorData","setDoctorData","patientData","setPatientData","patId","tempPatientData","get","headers","localStorage","getItem","then","result","data","i","length","push","PID","console","log","filter","includes","EHR","EncryptedEHR","FirstName","LastName","Specialization","Address","withTheme"],"mappings":"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","sourcesContent":["import { withStyles } from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PatientListEHR from \"../patientList/PatientListEHR\";\r\n\r\nconst styles = (theme) => ({\r\n  card: {\r\n    minWidth: 275,\r\n    margin: theme.spacing(1),\r\n  },\r\n});\r\n\r\nfunction DoctorCard(props) {\r\n  const path = props.location.pathname;\r\n  const DID = path.slice(path.lastIndexOf(\"/\")).slice(1);\r\n  const [doctorData, setDoctorData] = useState({});\r\n  const [patientData, setPatientData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let patId = [];\r\n    let tempPatientData = [];\r\n    axios\r\n      .get(`http://localhost:3001/doctor/${DID}`, {\r\n        headers: {\r\n          \"x-access-token\": localStorage.getItem(\"jwtToken\"),\r\n        },\r\n      })\r\n      .then((result) => {\r\n        setDoctorData(result.data[0]);\r\n      });\r\n    axios\r\n      .get(`http://localhost:3001/doctorRelatedToPatient/${DID}`, {\r\n        headers: {\r\n          \"x-access-token\": localStorage.getItem(\"jwtToken\"),\r\n        },\r\n      })\r\n      .then((result) => {\r\n        for (let i = 0; i < result.data.length; i++) {\r\n          patId.push(result.data[i].PID);\r\n        }\r\n        console.log(patId);\r\n        axios\r\n          .get(`http://localhost:3001/patients/`, {\r\n            headers: {\r\n              \"x-access-token\": localStorage.getItem(\"jwtToken\"),\r\n            },\r\n          })\r\n          .then((result) => {\r\n            tempPatientData = result.data.filter((result) => {\r\n              return patId.includes(result.PID);\r\n            });\r\n            console.log(tempPatientData);\r\n            for (let i = 0; i < tempPatientData.length; i++) {\r\n              axios\r\n                .get(\r\n                  `http://localhost:3001/getEHRRelated/${DID}/${tempPatientData[i].PID}`,\r\n                  {\r\n                    headers: {\r\n                      \"x-access-token\": localStorage.getItem(\"jwtToken\"),\r\n                    },\r\n                  }\r\n                )\r\n                .then((result) => {\r\n                  tempPatientData[i].EHR = result.data[0].EncryptedEHR;\r\n                });\r\n            }\r\n            setPatientData(tempPatientData);\r\n          });\r\n      });\r\n  }, [DID]);\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent>\r\n          <Box mb={1}>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              DID {doctorData.DID}\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              {doctorData.FirstName} {doctorData.LastName}\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              Specialization: {doctorData.Specialization}\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              Address: {doctorData.Address}\r\n            </Typography>\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n      <h1>Patients</h1>\r\n      <PatientListEHR patients={patientData ? patientData : []} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(DoctorCard);\r\n"]},"metadata":{},"sourceType":"module"}