{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaustubh\\\\EHR\\\\front-end\\\\src\\\\components\\\\login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport { makeStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { openSnackBar } from \"../snackBar/SnackBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(4)\n  }\n}));\nexport default function Login(props) {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const classes = useStyles();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(e);\n    console.log(process.env.REACT_APP_API_URL);\n    axios.post(`${process.env.REACT_APP_API_URL}/api/user/login/`, {\n      username,\n      password\n    }).then(res => {\n      if (res.status === 200) {\n        const token = res.data.token;\n        props.setLogin(token);\n        props.history.push(\"/patients\");\n        return;\n      } else {\n        openSnackBar({\n          message: \"Authentication Error\",\n          type: \"error\"\n        });\n      }\n    }).catch(error => {\n      let errorMessage;\n\n      if (error.response) {\n        errorMessage = error.response.data.message;\n      } else if (error.message) {\n        errorMessage = error.message;\n      } else {\n        errorMessage = \"Authentication Error\";\n      }\n\n      openSnackBar({\n        message: errorMessage,\n        type: \"error\"\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    component: \"main\",\n    className: \"MuiContainer--01\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"h1\",\n              variant: \"h5\",\n              align: \"center\",\n              color: \"textPrimary\",\n              gutterBottom: true,\n              children: \"Please provide username and password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"username-input\",\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"username-input\",\n                value: username,\n                onChange: e => setUsername(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"password-input\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"firstname-input\",\n                value: password,\n                type: \"password\",\n                onChange: e => setPassword(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"MuiButton-Full\",\n              variant: \"contained\",\n              size: \"large\",\n              color: \"primary\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"MuiButton-Full\",\n              href: \"/enroll/\",\n              size: \"large\",\n              color: \"primary\",\n              children: \"Not Registered? Register now!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"V+Yc8xnOxBlimrfcO/ZMYDkqiiU=\", false, function () {\n  return [useStyles];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Kaustubh/EHR/front-end/src/components/login/Login.js"],"names":["makeStyles","Button","Container","FormControl","Grid","Input","InputLabel","Paper","Typography","axios","React","useState","openSnackBar","useStyles","theme","paper","padding","spacing","Login","props","username","setUsername","password","setPassword","classes","handleSubmit","e","preventDefault","console","log","process","env","REACT_APP_API_URL","post","then","res","status","token","data","setLogin","history","push","message","type","catch","error","errorMessage","response","target","value"],"mappings":"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","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { openSnackBar } from \"../snackBar/SnackBar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nexport default function Login(props) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(e);\r\n    console.log(process.env.REACT_APP_API_URL);\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_URL}/api/user/login/`, {\r\n        username,\r\n        password,\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          const token = res.data.token;\r\n          props.setLogin(token);\r\n          props.history.push(\"/patients\");\r\n          return;\r\n        } else {\r\n          openSnackBar({ message: \"Authentication Error\", type: \"error\" });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        let errorMessage;\r\n        if (error.response) {\r\n          errorMessage = error.response.data.message;\r\n        } else if (error.message) {\r\n          errorMessage = error.message;\r\n        } else {\r\n          errorMessage = \"Authentication Error\";\r\n        }\r\n        openSnackBar({ message: errorMessage, type: \"error\" });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" component=\"main\" className={\"MuiContainer--01\"}>\r\n      <Paper className={classes.paper}>\r\n        <form onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Typography\r\n                component=\"h1\"\r\n                variant=\"h5\"\r\n                align=\"center\"\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n              >\r\n                Please provide username and password\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl fullWidth required>\r\n                <InputLabel htmlFor=\"username-input\">Username</InputLabel>\r\n                <Input\r\n                  id=\"username-input\"\r\n                  value={username}\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                  required\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl fullWidth required>\r\n                <InputLabel htmlFor=\"password-input\">Password</InputLabel>\r\n                <Input\r\n                  id=\"firstname-input\"\r\n                  value={password}\r\n                  type=\"password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  required\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button\r\n                type=\"submit\"\r\n                className={\"MuiButton-Full\"}\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                color=\"primary\"\r\n              >\r\n                Login\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button\r\n                className={\"MuiButton-Full\"}\r\n                href=\"/enroll/\"\r\n                size=\"large\"\r\n                color=\"primary\"\r\n              >\r\n                Not Registered? Register now!\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}