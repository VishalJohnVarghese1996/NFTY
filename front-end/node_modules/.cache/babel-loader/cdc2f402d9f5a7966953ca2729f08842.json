{"ast":null,"code":"var _jsxFileName = \"/home/shahid/hyperledger_EHR (copy)/front-end/src/components/create/Create.js\",\n    _s = $RefreshSig$();\n\nimport { makeStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { openSnackBar } from \"../snackBar/SnackBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(4)\n  }\n}));\n\nconst CreatePage = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [newPasswordConfirmation, setNewPasswordConfirmation] = useState(\"\");\n  const [userid, setUserid] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const classes = useStyles();\n\n  const validateForm = () => {\n    let errors = [];\n\n    if (newPassword !== newPasswordConfirmation) {\n      errors.push(\"The passwords do not match\");\n    }\n\n    return errors;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const errors = validateForm();\n\n    if (errors.length) {\n      errors.forEach(error => {\n        openSnackBar({\n          message: error,\n          type: \"error\"\n        });\n      });\n    } else {\n      console.log(\"44\", newPassword);\n      axios.post(`http://localhost:3001/register`, {\n        userid,\n        username,\n        newPassword\n      }).then(res => {\n        console.log(res);\n\n        if (res.status === 200) {\n          openSnackBar({\n            message: res.data.message,\n            type: \"success\"\n          });\n          props.history.push(\"/login\");\n          return;\n        } else {\n          openSnackBar({\n            message: \"Authentication Error\",\n            type: \"error\"\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n        openSnackBar({\n          message: error.response.data.message,\n          type: \"error\"\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xs\",\n    component: \"main\",\n    className: \"MuiContainer--01\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"h1\",\n              variant: \"h5\",\n              align: \"center\",\n              color: \"textPrimary\",\n              gutterBottom: true,\n              children: \"Registration of New User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"username-input\",\n                children: \"Full Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"username-input\",\n                value: name,\n                onChange: e => setName(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"username-input\",\n                children: \"Select a User Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"username-input\",\n                value: username,\n                onChange: e => setUsername(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"username-input\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"userid-input\",\n                value: userid,\n                onChange: e => setUserid(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"newpassword-input\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"newpassword-input\",\n                value: newPassword,\n                type: \"password\",\n                onChange: e => setNewPassword(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"newpassword-confirmation-input\",\n                children: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"newpassword-confirmation-input\",\n                value: newPasswordConfirmation,\n                type: \"password\",\n                onChange: e => setNewPasswordConfirmation(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"MuiButton-Full\",\n              variant: \"contained\",\n              size: \"large\",\n              color: \"primary\",\n              children: \"Create Token\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"MuiButton-Full\",\n              href: \"/login/\",\n              size: \"large\",\n              color: \"primary\",\n              children: \"Go back to login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreatePage, \"nVL2qyaMqsxEt5F7iYguhnvGJGg=\", false, function () {\n  return [useStyles];\n});\n\n_c = CreatePage;\nexport default CreatePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePage\");","map":{"version":3,"sources":["/home/shahid/hyperledger_EHR (copy)/front-end/src/components/create/Create.js"],"names":["makeStyles","Button","Container","FormControl","Grid","Input","InputLabel","Paper","Typography","axios","React","useState","openSnackBar","useStyles","theme","paper","padding","spacing","CreatePage","username","setUsername","newPassword","setNewPassword","newPasswordConfirmation","setNewPasswordConfirmation","userid","setUserid","name","setName","classes","validateForm","errors","push","handleSubmit","e","preventDefault","length","forEach","error","message","type","console","log","post","then","res","status","data","props","history","catch","response","target","value"],"mappings":"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","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { openSnackBar } from \"../snackBar/SnackBar\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      padding: theme.spacing(4),\n    },\n  }));\n\n\nconst CreatePage = () => {\n    const [username, setUsername] = useState(\"\");\n    const [newPassword, setNewPassword] = useState(\"\");\n    const [newPasswordConfirmation, setNewPasswordConfirmation] = useState(\"\");\n    const [userid, setUserid] = useState(\"\");\n    const [name, setName] = useState(\"\");\n  \n    const classes = useStyles();\n  \n    const validateForm = () => {\n      let errors = [];\n      if (newPassword !== newPasswordConfirmation) {\n        errors.push(\"The passwords do not match\");\n      }\n      return errors;\n    };\n  \n    const handleSubmit = (e) => {\n      e.preventDefault();\n      const errors = validateForm();\n      if (errors.length) {\n        errors.forEach((error) => {\n          openSnackBar({ message: error, type: \"error\" });\n        });\n      } else {\n        console.log(\"44\", newPassword);\n        axios\n          .post(`http://localhost:3001/register`, {\n            userid,\n            username,\n            newPassword,\n          })\n          .then((res) => {\n            console.log(res);\n            if (res.status === 200) {\n              openSnackBar({ message: res.data.message, type: \"success\" });\n              props.history.push(\"/login\");\n              return;\n            } else {\n              openSnackBar({ message: \"Authentication Error\", type: \"error\" });\n            }\n          })\n          .catch((error) => {\n            console.log(error);\n            openSnackBar({ message: error.response.data.message, type: \"error\" });\n          });\n      }\n    };\n\n    return (\n        <Container maxWidth=\"xs\" component=\"main\" className={\"MuiContainer--01\"}>\n            <Paper className={classes.paper}>\n                <form onSubmit={handleSubmit}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <Typography\n                                component=\"h1\"\n                                variant=\"h5\"\n                                align=\"center\"\n                                color=\"textPrimary\"\n                                gutterBottom\n                            >\n                                Registration of New User\n                      </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormControl fullWidth required>\n                                <InputLabel htmlFor=\"username-input\">Full Name</InputLabel>\n                                <Input\n                                    id=\"username-input\"\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                    required\n                                />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormControl fullWidth required>\n                                <InputLabel htmlFor=\"username-input\">Select a User Name</InputLabel>\n                                <Input\n                                    id=\"username-input\"\n                                    value={username}\n                                    onChange={(e) => setUsername(e.target.value)}\n                                    required\n                                />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormControl fullWidth required>\n                                <InputLabel htmlFor=\"username-input\">Email</InputLabel>\n                                <Input\n                                    id=\"userid-input\"\n                                    value={userid}\n                                    onChange={(e) => setUserid(e.target.value)}\n                                    required\n                                />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormControl fullWidth required>\n                                <InputLabel htmlFor=\"newpassword-input\">Password</InputLabel>\n                                <Input\n                                    id=\"newpassword-input\"\n                                    value={newPassword}\n                                    type=\"password\"\n                                    onChange={(e) => setNewPassword(e.target.value)}\n                                    required\n                                />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormControl fullWidth required>\n                                <InputLabel htmlFor=\"newpassword-confirmation-input\">\n                                    Confirm Password\n                        </InputLabel>\n                                <Input\n                                    id=\"newpassword-confirmation-input\"\n                                    value={newPasswordConfirmation}\n                                    type=\"password\"\n                                    onChange={(e) => setNewPasswordConfirmation(e.target.value)}\n                                    required\n                                />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button\n                                type=\"submit\"\n                                className={\"MuiButton-Full\"}\n                                variant=\"contained\"\n                                size=\"large\"\n                                color=\"primary\"\n                            >\n                                Create Token\n                      </Button>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button\n                                className={\"MuiButton-Full\"}\n                                href=\"/login/\"\n                                size=\"large\"\n                                color=\"primary\"\n                            >\n                                Go back to login\n                      </Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </Paper>\n        </Container>\n    );\n};\n\nexport default CreatePage;"]},"metadata":{},"sourceType":"module"}