{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaustubh\\\\EHR\\\\front-end\\\\src\\\\components\\\\patient\\\\PatientExpandedInfo.js\",\n    _s = $RefreshSig$();\n\nimport AddRecordForm from '../addRecord/AddRecordForm';\nimport axios from 'axios';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport React, { useState, useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PatientExpandedInfo(props) {\n  _s();\n\n  //Obtains user full data with props KEY of user\n  const [patientData, setPatientData] = useState({});\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_URL}/api/patients/${props.id}`, {\n      'headers': {\n        'x-access-token': localStorage.getItem('jwtToken')\n      }\n    }).then(result => {\n      setPatientData(result.data.patient);\n    });\n  }, [props.id]);\n\n  const handleExit = () => {\n    props.onExit();\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Registros\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddRecordForm, {\n      patientId: props.id,\n      handleExit: handleExit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: patientData.records ? patientData.records.map(record => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: record.information,\n          secondary: \"Editado por \" + record.doctorId + \" el \" + record.date.toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, record.date, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }, this)) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n}\n\n_s(PatientExpandedInfo, \"+Qny9BVQX6OgnzQLgYPtmVZ16uU=\");\n\n_c = PatientExpandedInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientExpandedInfo\");","map":{"version":3,"sources":["C:/Users/Kaustubh/EHR/front-end/src/components/patient/PatientExpandedInfo.js"],"names":["AddRecordForm","axios","List","ListItem","ListItemText","React","useState","useEffect","Typography","PatientExpandedInfo","props","patientData","setPatientData","get","process","env","REACT_APP_API_URL","id","localStorage","getItem","then","result","data","patient","handleExit","onExit","records","map","record","information","doctorId","date","toLocaleString"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,4BAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,eAAe,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AAC/C;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdN,IAAAA,KAAK,CAACY,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,iBAAgBN,KAAK,CAACO,EAAG,EAApE,EACE;AACE,iBAAW;AACT,0BAAkBC,YAAY,CAACC,OAAb,CAAqB,UAArB;AADT;AADb,KADF,EAMCC,IAND,CAOGC,MAAD,IAAY;AACVT,MAAAA,cAAc,CAACS,MAAM,CAACC,IAAP,CAAYC,OAAb,CAAd;AACD,KATH;AAWD,GAZQ,EAYN,CAACb,KAAK,CAACO,EAAP,CAZM,CAAT;;AAcA,QAAMO,UAAU,GAAG,MAAM;AACvBd,IAAAA,KAAK,CAACe,MAAN;AACD,GAFD;;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,aAAD;AAAe,MAAA,SAAS,EAAEf,KAAK,CAACO,EAAhC;AAAoC,MAAA,UAAU,EAAEO;AAAhD;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,IAAD;AAAA,gBAEIb,WAAW,CAACe,OAAZ,GAEIf,WAAW,CAACe,OAAZ,CAAoBC,GAApB,CAAyBC,MAAD,iBACtB,QAAC,QAAD;AAAA,+BACE,QAAC,YAAD;AACE,UAAA,OAAO,EAAEA,MAAM,CAACC,WADlB;AAEE,UAAA,SAAS,EAAE,iBAAeD,MAAM,CAACE,QAAtB,GAA+B,MAA/B,GAAsCF,MAAM,CAACG,IAAP,CAAYC,cAAZ;AAFnD;AAAA;AAAA;AAAA;AAAA;AADF,SAAeJ,MAAM,CAACG,IAAtB;AAAA;AAAA;AAAA;AAAA,cADF,CAFJ,GAYG;AAdP;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBH;;GA/CuBtB,mB;;KAAAA,mB","sourcesContent":["import AddRecordForm from '../addRecord/AddRecordForm';\r\nimport axios from 'axios';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function PatientExpandedInfo(props) {\r\n    //Obtains user full data with props KEY of user\r\n    const [patientData, setPatientData] = useState({});\r\n\r\n    useEffect(() => {\r\n      axios.get(`${process.env.REACT_APP_API_URL}/api/patients/${props.id}`,\r\n        {\r\n          'headers': { \r\n            'x-access-token': localStorage.getItem('jwtToken') \r\n          } \r\n        })\r\n      .then(\r\n        (result) => {\r\n          setPatientData(result.data.patient);\r\n        }\r\n      )\r\n    }, [props.id]);\r\n\r\n    const handleExit = () => {\r\n      props.onExit();\r\n    };\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Typography variant=\"h6\">\r\n          Registros\r\n        </Typography>\r\n        <AddRecordForm patientId={props.id} handleExit={handleExit}/>\r\n        <List>\r\n          {\r\n            patientData.records ?\r\n              (\r\n                patientData.records.map((record) =>\r\n                  <ListItem key={record.date}>\r\n                    <ListItemText\r\n                      primary={record.information}\r\n                      secondary={\"Editado por \"+record.doctorId+\" el \"+record.date.toLocaleString()}\r\n                    />\r\n                  </ListItem>\r\n                )\r\n              )\r\n              :\r\n              (null)\r\n          }       \r\n        </List>\r\n      </React.Fragment>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}