{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaustubh\\\\EHR\\\\front-end\\\\src\\\\components\\\\addPatient\\\\AddPatientForm.js\",\n    _s = $RefreshSig$();\n\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { openSnackBar } from \"../snackBar/SnackBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  card: {\n    minWidth: 275,\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  }\n}));\nexport default function AddPatientForm(props) {\n  _s();\n\n  const [pid, setPid] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const cancel = props.cancel;\n  const addPatient = props.addPatient;\n  const classes = useStyles();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post(`http://localhost:3001/patient/add`, {\n      pid,\n      firstName,\n      lastName,\n      address,\n      age\n    }, {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"jwtToken\")\n      }\n    }).then(res => {\n      openSnackBar({\n        message: \"Patient data added successfully\",\n        type: \"success\"\n      });\n      addPatient(res.data.newPatient);\n    }).catch(error => {\n      openSnackBar({\n        message: error.response.data.message,\n        type: \"error\"\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.card,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h2\",\n            children: \"New Patient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            m: 1,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    htmlFor: \"pid-input\",\n                    children: \"PID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    id: \"pid-input\",\n                    value: pid,\n                    onChange: e => setPid(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                sm: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    htmlFor: \"firstname-input\",\n                    children: \"First Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    id: \"firstname-input\",\n                    value: firstName,\n                    onChange: e => setFirstName(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                sm: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    htmlFor: \"lastname-input\",\n                    children: \"Last Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    id: \"lastname-input\",\n                    value: lastName,\n                    onChange: e => setLastName(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                sm: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    htmlFor: \"address-input\",\n                    children: \"Address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    id: \"address-input\",\n                    value: address,\n                    onChange: e => setAddress(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                sm: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    htmlFor: \"age-input\",\n                    children: \"Age\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    id: \"age-input\",\n                    type: \"number\",\n                    value: age,\n                    onChange: e => setAge(e.target.value),\n                    required: true,\n                    inputProps: {\n                      min: 0\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: \"MuiBox-RightAlign\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              onClick: cancel,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              color: \"primary\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddPatientForm, \"dyCiTso0zz7Zw25MbJDWE7tLRBc=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddPatientForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPatientForm\");","map":{"version":3,"sources":["C:/Users/Kaustubh/EHR/front-end/src/components/addPatient/AddPatientForm.js"],"names":["Box","Button","Card","CardActions","CardContent","FormControl","Grid","Input","InputLabel","Typography","makeStyles","axios","React","useState","openSnackBar","useStyles","theme","card","minWidth","margin","spacing","padding","AddPatientForm","props","pid","setPid","firstName","setFirstName","lastName","setLastName","address","setAddress","age","setAge","cancel","addPatient","classes","handleSubmit","e","preventDefault","post","headers","localStorage","getItem","then","res","message","type","data","newPatient","catch","error","response","target","value","min"],"mappings":"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","sourcesContent":["import Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { openSnackBar } from \"../snackBar/SnackBar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    minWidth: 275,\r\n    margin: theme.spacing(1),\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function AddPatientForm(props) {\r\n  const [pid, setPid] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [age, setAge] = useState(\"\");\r\n  const cancel = props.cancel;\r\n  const addPatient = props.addPatient;\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\r\n        `http://localhost:3001/patient/add`,\r\n        {\r\n          pid,\r\n          firstName,\r\n          lastName,\r\n          address,\r\n          age,\r\n        },\r\n        {\r\n          headers: {\r\n            \"x-access-token\": localStorage.getItem(\"jwtToken\"),\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        openSnackBar({\r\n          message: \"Patient data added successfully\",\r\n          type: \"success\",\r\n        });\r\n        addPatient(res.data.newPatient);\r\n      })\r\n      .catch((error) => {\r\n        openSnackBar({ message: error.response.data.message, type: \"error\" });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card className={classes.card}>\r\n        <form onSubmit={handleSubmit}>\r\n          <CardContent>\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              New Patient\r\n            </Typography>\r\n            <Box m={1}>\r\n              <Grid container spacing={2}>\r\n                <Grid item sm={12}>\r\n                  <FormControl fullWidth required>\r\n                    <InputLabel htmlFor=\"pid-input\">PID</InputLabel>\r\n                    <Input\r\n                      id=\"pid-input\"\r\n                      value={pid}\r\n                      onChange={(e) => setPid(e.target.value)}\r\n                      required\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item sm={6} xs={12}>\r\n                  <FormControl fullWidth required>\r\n                    <InputLabel htmlFor=\"firstname-input\">\r\n                      First Name\r\n                    </InputLabel>\r\n                    <Input\r\n                      id=\"firstname-input\"\r\n                      value={firstName}\r\n                      onChange={(e) => setFirstName(e.target.value)}\r\n                      required\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item sm={6} xs={12}>\r\n                  <FormControl fullWidth required>\r\n                    <InputLabel htmlFor=\"lastname-input\">Last Name</InputLabel>\r\n                    <Input\r\n                      id=\"lastname-input\"\r\n                      value={lastName}\r\n                      onChange={(e) => setLastName(e.target.value)}\r\n                      required\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item sm={6} xs={12}>\r\n                  <FormControl fullWidth required>\r\n                    <InputLabel htmlFor=\"address-input\">Address</InputLabel>\r\n                    <Input\r\n                      id=\"address-input\"\r\n                      value={address}\r\n                      onChange={(e) => setAddress(e.target.value)}\r\n                      required\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item sm={6} xs={12}>\r\n                  <FormControl fullWidth required>\r\n                    <InputLabel htmlFor=\"age-input\">Age</InputLabel>\r\n                    <Input\r\n                      id=\"age-input\"\r\n                      type=\"number\"\r\n                      value={age}\r\n                      onChange={(e) => setAge(e.target.value)}\r\n                      required\r\n                      inputProps={{ min: 0 }}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Box className={\"MuiBox-RightAlign\"}>\r\n              <Button color=\"secondary\" onClick={cancel}>\r\n                Cancel\r\n              </Button>\r\n              <Button type=\"submit\" color=\"primary\">\r\n                Save\r\n              </Button>\r\n            </Box>\r\n          </CardActions>\r\n        </form>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}