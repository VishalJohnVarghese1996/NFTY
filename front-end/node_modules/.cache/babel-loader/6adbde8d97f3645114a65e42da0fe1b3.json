{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaustubh\\\\EHR\\\\front-end\\\\src\\\\components\\\\enroll\\\\Enroll.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core';\nimport { openSnackBar } from '../snackBar/SnackBar';\nimport Paper from '@material-ui/core/Paper';\nimport React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(4)\n  }\n}));\nexport default function Enroll(props) {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [secret, setSecret] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [newPasswordConfirmation, setNewPasswordConfirmation] = useState('');\n  const classes = useStyles();\n\n  const validateForm = () => {\n    let errors = [];\n\n    if (newPassword !== newPasswordConfirmation) {\n      errors.push(\"Las contraseÃ±as no coinciden\");\n    }\n\n    return errors;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const errors = validateForm();\n\n    if (errors.length) {\n      errors.forEach(error => {\n        openSnackBar({\n          message: error,\n          type: \"error\"\n        });\n      });\n    } else {\n      axios.post(`${process.env.REACT_APP_API_URL}/api/user/enroll/`, {\n        username,\n        secret,\n        newPassword\n      }).then(res => {\n        if (res.status === 200) {\n          openSnackBar({\n            message: res.data.message,\n            type: \"success\"\n          });\n          props.history.push(\"/login\");\n          return;\n        } else {\n          openSnackBar({\n            message: \"Authentication Error\",\n            type: \"error\"\n          });\n        }\n      }).catch(error => {\n        openSnackBar({\n          message: error.response.data.message,\n          type: \"error\"\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    component: \"main\",\n    className: \"MuiContainer--01\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"h1\",\n              variant: \"h5\",\n              align: \"center\",\n              color: \"textPrimary\",\n              gutterBottom: true,\n              children: \"Enrollment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"username-input\",\n                children: \"Usuario\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"username-input\",\n                value: username,\n                onChange: e => setUsername(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"secret-input\",\n                children: \"Secreto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"firstname-input\",\n                value: secret,\n                type: \"password\",\n                onChange: e => setSecret(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"newpassword-input\",\n                children: \"Nueva Contrase\\xF1a\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"newpassword-input\",\n                value: newPassword,\n                type: \"password\",\n                onChange: e => setNewPassword(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"newpassword-confirmation-input\",\n                children: \"Confirmaci\\xF3n de la nueva contrase\\xF1a\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"newpassword-confirmation-input\",\n                value: newPasswordConfirmation,\n                type: \"password\",\n                onChange: e => setNewPasswordConfirmation(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"MuiButton-Full\",\n              variant: \"contained\",\n              size: \"large\",\n              color: \"primary\",\n              children: \"Enroll\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"MuiButton-Full\",\n              href: \"/login/\",\n              size: \"large\",\n              color: \"primary\",\n              children: \"Volver al login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Enroll, \"F5klPIKaHnp1zGkdF8d9LtKmHhk=\", false, function () {\n  return [useStyles];\n});\n\n_c = Enroll;\n\nvar _c;\n\n$RefreshReg$(_c, \"Enroll\");","map":{"version":3,"sources":["C:/Users/Kaustubh/EHR/front-end/src/components/enroll/Enroll.js"],"names":["axios","Button","Container","FormControl","Input","InputLabel","Grid","makeStyles","openSnackBar","Paper","React","useState","Typography","useStyles","theme","paper","padding","spacing","Enroll","props","username","setUsername","secret","setSecret","newPassword","setNewPassword","newPasswordConfirmation","setNewPasswordConfirmation","classes","validateForm","errors","push","handleSubmit","e","preventDefault","length","forEach","error","message","type","post","process","env","REACT_APP_API_URL","then","res","status","data","history","catch","response","target","value"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { openSnackBar } from '../snackBar/SnackBar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport React, { useState } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles( theme => ({\r\n    paper: {\r\n        padding: theme.spacing(4),\r\n    }\r\n}));\r\n\r\nexport default function Enroll(props) {\r\n    const [username, setUsername] = useState('');\r\n    const [secret, setSecret] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [newPasswordConfirmation, setNewPasswordConfirmation] = useState('');\r\n\r\n    const classes = useStyles();\r\n\r\n    const validateForm = () => {\r\n        let errors = [];\r\n        if (newPassword !== newPasswordConfirmation){\r\n            errors.push(\"Las contraseÃ±as no coinciden\");\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const errors = validateForm();\r\n        if (errors.length) {\r\n            errors.forEach(error => {\r\n                openSnackBar({message: error, type: \"error\"});\r\n            });\r\n        } else {\r\n            axios.post(`${process.env.REACT_APP_API_URL}/api/user/enroll/`, {\r\n                    username,\r\n                    secret,\r\n                    newPassword\r\n                })\r\n                .then(res => {\r\n                    if (res.status === 200) {\r\n                        openSnackBar({message: res.data.message, type: \"success\"})\r\n                        props.history.push(\"/login\");\r\n                        return;\r\n                    } else {\r\n                        openSnackBar({message: \"Authentication Error\", type: \"error\"});\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    openSnackBar({message: error.response.data.message, type: \"error\"});\r\n                });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\" component=\"main\" className={\"MuiContainer--01\"}>\r\n            <Paper className={classes.paper}>\r\n                <form onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <Typography component=\"h1\" variant=\"h5\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                                Enrollment\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth required>\r\n                                <InputLabel htmlFor=\"username-input\">Usuario</InputLabel>\r\n                                <Input \r\n                                    id=\"username-input\" \r\n                                    value={username}\r\n                                    onChange={e => setUsername(e.target.value)}\r\n                                    required/>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth required>\r\n                                <InputLabel htmlFor=\"secret-input\">Secreto</InputLabel>\r\n                                <Input \r\n                                    id=\"firstname-input\" \r\n                                    value={secret}\r\n                                    type=\"password\"\r\n                                    onChange={e => setSecret(e.target.value)}\r\n                                    required/>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth required>\r\n                                <InputLabel htmlFor=\"newpassword-input\">Nueva ContraseÃ±a</InputLabel>\r\n                                <Input \r\n                                    id=\"newpassword-input\" \r\n                                    value={newPassword}\r\n                                    type=\"password\"\r\n                                    onChange={e => setNewPassword(e.target.value)}\r\n                                    required/>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth required>\r\n                                <InputLabel htmlFor=\"newpassword-confirmation-input\">ConfirmaciÃ³n de la nueva contraseÃ±a</InputLabel>\r\n                                <Input \r\n                                    id=\"newpassword-confirmation-input\" \r\n                                    value={newPasswordConfirmation}\r\n                                    type=\"password\"\r\n                                    onChange={e => setNewPasswordConfirmation(e.target.value)}\r\n                                    required/>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Button type=\"submit\" className={\"MuiButton-Full\"} variant=\"contained\" size=\"large\" color=\"primary\">\r\n                                Enroll\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Button className={\"MuiButton-Full\"} href=\"/login/\" size=\"large\" color=\"primary\">\r\n                                Volver al login\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}