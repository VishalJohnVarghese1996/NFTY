{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaustubh\\\\EHR\\\\front-end\\\\src\\\\components\\\\patient\\\\PatientExpandedInfo.js\",\n    _s = $RefreshSig$();\n\nimport List from \"@material-ui/core/List\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PatientExpandedInfo(props) {\n  _s();\n\n  //Obtains user full data with props KEY of user\n  const [patientData, setPatientData] = useState({});\n  useEffect(() => {\n    axios.get(`http://localhost:3001/patient/${props.PID}`, {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"jwtToken\")\n      }\n    }).then(result => {\n      setPatientData(result.data.patient);\n    });\n  }, [props.id]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Health Records\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: patientData.records ? patientData.records.map(record => /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: record.information,\n        secondary: \"Edited By \" + record.doctorId + \" on \" + record.date.toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }, this)) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PatientExpandedInfo, \"+Qny9BVQX6OgnzQLgYPtmVZ16uU=\");\n\n_c = PatientExpandedInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientExpandedInfo\");","map":{"version":3,"sources":["C:/Users/Kaustubh/EHR/front-end/src/components/patient/PatientExpandedInfo.js"],"names":["List","ListItemText","Typography","axios","React","useEffect","useState","PatientExpandedInfo","props","patientData","setPatientData","get","PID","headers","localStorage","getItem","then","result","data","patient","id","records","map","record","information","doctorId","date","toLocaleString"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,wBAAjB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,eAAe,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AACjD;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdF,IAAAA,KAAK,CACFQ,GADH,CACQ,iCAAgCH,KAAK,CAACI,GAAI,EADlD,EACqD;AACjDC,MAAAA,OAAO,EAAE;AACP,0BAAkBC,YAAY,CAACC,OAAb,CAAqB,UAArB;AADX;AADwC,KADrD,EAMGC,IANH,CAMSC,MAAD,IAAY;AAChBP,MAAAA,cAAc,CAACO,MAAM,CAACC,IAAP,CAAYC,OAAb,CAAd;AACD,KARH;AASD,GAVQ,EAUN,CAACX,KAAK,CAACY,EAAP,CAVM,CAAT;AAYA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAA,gBACGX,WAAW,CAACY,OAAZ,GACGZ,WAAW,CAACY,OAAZ,CAAoBC,GAApB,CAAyBC,MAAD,iBACtB,QAAC,YAAD;AACE,QAAA,OAAO,EAAEA,MAAM,CAACC,WADlB;AAEE,QAAA,SAAS,EACP,eACAD,MAAM,CAACE,QADP,GAEA,MAFA,GAGAF,MAAM,CAACG,IAAP,CAAYC,cAAZ;AANJ;AAAA;AAAA;AAAA;AAAA,cADF,CADH,GAYG;AAbN;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GApCuBpB,mB;;KAAAA,mB","sourcesContent":["import List from \"@material-ui/core/List\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nexport default function PatientExpandedInfo(props) {\r\n  //Obtains user full data with props KEY of user\r\n  const [patientData, setPatientData] = useState({});\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:3001/patient/${props.PID}`, {\r\n        headers: {\r\n          \"x-access-token\": localStorage.getItem(\"jwtToken\"),\r\n        },\r\n      })\r\n      .then((result) => {\r\n        setPatientData(result.data.patient);\r\n      });\r\n  }, [props.id]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\">Health Records</Typography>\r\n      <List>\r\n        {patientData.records\r\n          ? patientData.records.map((record) => (\r\n              <ListItemText\r\n                primary={record.information}\r\n                secondary={\r\n                  \"Edited By \" +\r\n                  record.doctorId +\r\n                  \" on \" +\r\n                  record.date.toLocaleString()\r\n                }\r\n              />\r\n            ))\r\n          : null}\r\n      </List>\r\n    </React.Fragment>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}