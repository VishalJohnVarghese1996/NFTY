{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaustubh\\\\EHR\\\\front-end\\\\src\\\\components\\\\addPatient\\\\AddPatientForm.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport { makeStyles } from '@material-ui/styles';\nimport { openSnackBar } from '../snackBar/SnackBar';\nimport React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  card: {\n    minWidth: 275,\n    margin: theme.spacing(1),\n    padding: theme.spacing(1)\n  }\n}));\nexport default function AddPatientForm(props) {\n  _s();\n\n  const [dni, setDni] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [address, setAddress] = useState('');\n  const [age, setAge] = useState('');\n  const cancel = props.cancel;\n  const addPatient = props.addPatient;\n  const classes = useStyles();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post(`${process.env.REACT_APP_API_URL}/api/patients/`, {\n      key: dni,\n      firstName,\n      lastName,\n      age,\n      address\n    }, {\n      'headers': {\n        'x-access-token': localStorage.getItem('jwtToken')\n      }\n    }).then(res => {\n      openSnackBar({\n        message: \"Paciente agregado correctamente\",\n        type: \"success\"\n      });\n      addPatient(res.data.newPatient);\n    }).catch(error => {\n      openSnackBar({\n        message: error.response.data.message,\n        type: \"error\"\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.card,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h2\",\n            children: \"Nuevo Paciente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            m: 1,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                sm: 12,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    htmlFor: \"dni-input\",\n                    children: \"DNI\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    id: \"dni-input\",\n                    value: dni,\n                    onChange: e => setDni(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                sm: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    htmlFor: \"firstname-input\",\n                    children: \"Nombre\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    id: \"firstname-input\",\n                    value: firstName,\n                    onChange: e => setFirstName(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                sm: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    htmlFor: \"lastname-input\",\n                    children: \"Apellido\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    id: \"lastname-input\",\n                    value: lastName,\n                    onChange: e => setLastName(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                sm: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    htmlFor: \"address-input\",\n                    children: \"Direcci\\xF3n\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    id: \"address-input\",\n                    value: address,\n                    onChange: e => setAddress(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                sm: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    htmlFor: \"age-input\",\n                    children: \"Edad\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    id: \"age-input\",\n                    type: \"number\",\n                    value: age,\n                    onChange: e => setAge(e.target.value),\n                    required: true,\n                    inputProps: {\n                      min: 0\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: \"MuiBox-RightAlign\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              onClick: cancel,\n              children: \"Cancelar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              color: \"primary\",\n              children: \"Guardar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddPatientForm, \"PjUg5tmyeLH2nRF9+HIA1Ky3XJg=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddPatientForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPatientForm\");","map":{"version":3,"sources":["C:/Users/Kaustubh/EHR/front-end/src/components/addPatient/AddPatientForm.js"],"names":["axios","Box","Button","Card","CardActions","CardContent","FormControl","Grid","InputLabel","Input","makeStyles","openSnackBar","React","useState","Typography","useStyles","theme","card","minWidth","margin","spacing","padding","AddPatientForm","props","dni","setDni","firstName","setFirstName","lastName","setLastName","address","setAddress","age","setAge","cancel","addPatient","classes","handleSubmit","e","preventDefault","post","process","env","REACT_APP_API_URL","key","localStorage","getItem","then","res","message","type","data","newPatient","catch","error","response","target","value","min"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAK,KAAK;AACpCC,EAAAA,IAAI,EAAE;AACAC,IAAAA,QAAQ,EAAE,GADV;AAEAC,IAAAA,MAAM,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,CAFR;AAGAC,IAAAA,OAAO,EAAEL,KAAK,CAACI,OAAN,CAAc,CAAd;AAHT;AAD8B,CAAL,CAAP,CAA5B;AAQA,eAAe,SAASE,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC1C,QAAM,CAACC,GAAD,EAAKC,MAAL,IAAeZ,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACmB,GAAD,EAAMC,MAAN,IAAgBpB,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAMqB,MAAM,GAAGX,KAAK,CAACW,MAArB;AACA,QAAMC,UAAU,GAAGZ,KAAK,CAACY,UAAzB;AAEA,QAAMC,OAAO,GAAGrB,SAAS,EAAzB;;AAEA,QAAMsB,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAvC,IAAAA,KAAK,CAACwC,IAAN,CAAY,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,gBAA5C,EAA6D;AACrDC,MAAAA,GAAG,EAAEpB,GADgD;AAErDE,MAAAA,SAFqD;AAGrDE,MAAAA,QAHqD;AAIrDI,MAAAA,GAJqD;AAKrDF,MAAAA;AALqD,KAA7D,EAOI;AACI,iBAAW;AACP,0BAAkBe,YAAY,CAACC,OAAb,CAAqB,UAArB;AADX;AADf,KAPJ,EAYKC,IAZL,CAYUC,GAAG,IAAI;AACTrC,MAAAA,YAAY,CAAC;AAACsC,QAAAA,OAAO,EAAE,iCAAV;AAA6CC,QAAAA,IAAI,EAAE;AAAnD,OAAD,CAAZ;AACAf,MAAAA,UAAU,CAACa,GAAG,CAACG,IAAJ,CAASC,UAAV,CAAV;AACH,KAfL,EAgBKC,KAhBL,CAgBWC,KAAK,IAAI;AACZ3C,MAAAA,YAAY,CAAC;AAACsC,QAAAA,OAAO,EAAEK,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBF,OAA9B;AAAuCC,QAAAA,IAAI,EAAE;AAA7C,OAAD,CAAZ;AACH,KAlBL;AAmBH,GArBD;;AAuBA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEd,OAAO,CAACnB,IAAzB;AAAA,6BACI;AAAM,QAAA,QAAQ,EAAEoB,YAAhB;AAAA,gCACI,QAAC,WAAD;AAAA,kCACI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAyB,YAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,GAAD;AAAK,YAAA,CAAC,EAAE,CAAR;AAAA,mCACI,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAgB,cAAA,OAAO,EAAE,CAAzB;AAAA,sCACI,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAA,uCACI,QAAC,WAAD;AAAa,kBAAA,SAAS,MAAtB;AAAuB,kBAAA,QAAQ,MAA/B;AAAA,0CACI,QAAC,UAAD;AAAY,oBAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,KAAD;AACI,oBAAA,EAAE,EAAC,WADP;AAEI,oBAAA,KAAK,EAAEb,GAFX;AAGI,oBAAA,QAAQ,EAAEc,CAAC,IAAIb,MAAM,CAACa,CAAC,CAACkB,MAAF,CAASC,KAAV,CAHzB;AAII,oBAAA,QAAQ;AAJZ;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAWI,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAkB,gBAAA,EAAE,EAAE,EAAtB;AAAA,uCACI,QAAC,WAAD;AAAa,kBAAA,SAAS,MAAtB;AAAuB,kBAAA,QAAQ,MAA/B;AAAA,0CACI,QAAC,UAAD;AAAY,oBAAA,OAAO,EAAC,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,KAAD;AACI,oBAAA,EAAE,EAAC,iBADP;AAEI,oBAAA,KAAK,EAAE/B,SAFX;AAGI,oBAAA,QAAQ,EAAEY,CAAC,IAAIX,YAAY,CAACW,CAAC,CAACkB,MAAF,CAASC,KAAV,CAH/B;AAII,oBAAA,QAAQ;AAJZ;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAXJ,eAqBI,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAkB,gBAAA,EAAE,EAAE,EAAtB;AAAA,uCACI,QAAC,WAAD;AAAa,kBAAA,SAAS,MAAtB;AAAuB,kBAAA,QAAQ,MAA/B;AAAA,0CACI,QAAC,UAAD;AAAY,oBAAA,OAAO,EAAC,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,KAAD;AACI,oBAAA,EAAE,EAAC,gBADP;AAEI,oBAAA,KAAK,EAAE7B,QAFX;AAGI,oBAAA,QAAQ,EAAEU,CAAC,IAAIT,WAAW,CAACS,CAAC,CAACkB,MAAF,CAASC,KAAV,CAH9B;AAII,oBAAA,QAAQ;AAJZ;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBArBJ,eA+BI,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAkB,gBAAA,EAAE,EAAE,EAAtB;AAAA,uCACI,QAAC,WAAD;AAAa,kBAAA,SAAS,MAAtB;AAAuB,kBAAA,QAAQ,MAA/B;AAAA,0CACI,QAAC,UAAD;AAAY,oBAAA,OAAO,EAAC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,KAAD;AACI,oBAAA,EAAE,EAAC,eADP;AAEI,oBAAA,KAAK,EAAE3B,OAFX;AAGI,oBAAA,QAAQ,EAAEQ,CAAC,IAAIP,UAAU,CAACO,CAAC,CAACkB,MAAF,CAASC,KAAV,CAH7B;AAII,oBAAA,QAAQ;AAJZ;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBA/BJ,eAyCI,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAkB,gBAAA,EAAE,EAAE,EAAtB;AAAA,uCACI,QAAC,WAAD;AAAa,kBAAA,SAAS,MAAtB;AAAuB,kBAAA,QAAQ,MAA/B;AAAA,0CACI,QAAC,UAAD;AAAY,oBAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,KAAD;AACI,oBAAA,EAAE,EAAC,WADP;AAEI,oBAAA,IAAI,EAAC,QAFT;AAGI,oBAAA,KAAK,EAAEzB,GAHX;AAII,oBAAA,QAAQ,EAAEM,CAAC,IAAIL,MAAM,CAACK,CAAC,CAACkB,MAAF,CAASC,KAAV,CAJzB;AAKI,oBAAA,QAAQ,MALZ;AAMI,oBAAA,UAAU,EAAE;AAACC,sBAAAA,GAAG,EAAE;AAAN;AANhB;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAzCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eA8DI,QAAC,WAAD;AAAA,iCACI,QAAC,GAAD;AAAK,YAAA,SAAS,EAAE,mBAAhB;AAAA,oCACI,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,WAAd;AAA0B,cAAA,OAAO,EAAExB,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,KAAK,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBA9DJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA+EH;;GAjHuBZ,c;UASJP,S;;;KATIO,c","sourcesContent":["import axios from 'axios';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { openSnackBar } from '../snackBar/SnackBar';\r\nimport React, { useState } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles( theme => ({\r\n    card: {\r\n          minWidth: 275,\r\n          margin: theme.spacing(1),\r\n          padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport default function AddPatientForm(props) {\r\n    const [dni,setDni] = useState('');\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [age, setAge] = useState('');\r\n    const cancel = props.cancel;\r\n    const addPatient = props.addPatient;\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        axios.post(`${process.env.REACT_APP_API_URL}/api/patients/`, {\r\n                key: dni,\r\n                firstName,\r\n                lastName,\r\n                age,\r\n                address\r\n            },\r\n            {\r\n                'headers': { \r\n                    'x-access-token': localStorage.getItem('jwtToken') \r\n                } \r\n            })\r\n            .then(res => {\r\n                openSnackBar({message: \"Paciente agregado correctamente\", type: \"success\"});\r\n                addPatient(res.data.newPatient);\r\n            })\r\n            .catch(error => {\r\n                openSnackBar({message: error.response.data.message, type: \"error\"});\r\n            })\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Card className={classes.card}>\r\n                <form onSubmit={handleSubmit}>\r\n                    <CardContent>\r\n                        <Typography variant=\"h6\" component=\"h2\">\r\n                            Nuevo Paciente\r\n                        </Typography>\r\n                        <Box m={1}>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item sm={12}>\r\n                                    <FormControl fullWidth required>\r\n                                        <InputLabel htmlFor=\"dni-input\">DNI</InputLabel>\r\n                                        <Input \r\n                                            id=\"dni-input\" \r\n                                            value={dni}\r\n                                            onChange={e => setDni(e.target.value)}\r\n                                            required/>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item sm={6} xs={12}>\r\n                                    <FormControl fullWidth required>\r\n                                        <InputLabel htmlFor=\"firstname-input\">Nombre</InputLabel>\r\n                                        <Input \r\n                                            id=\"firstname-input\" \r\n                                            value={firstName}\r\n                                            onChange={e => setFirstName(e.target.value)}\r\n                                            required/>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item sm={6} xs={12}>\r\n                                    <FormControl fullWidth required>\r\n                                        <InputLabel htmlFor=\"lastname-input\">Apellido</InputLabel>\r\n                                        <Input \r\n                                            id=\"lastname-input\" \r\n                                            value={lastName}\r\n                                            onChange={e => setLastName(e.target.value)}\r\n                                            required/>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item sm={6} xs={12}>\r\n                                    <FormControl fullWidth required> \r\n                                        <InputLabel htmlFor=\"address-input\">Dirección</InputLabel>\r\n                                        <Input \r\n                                            id=\"address-input\" \r\n                                            value={address}\r\n                                            onChange={e => setAddress(e.target.value)}\r\n                                            required/>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item sm={6} xs={12}>\r\n                                    <FormControl fullWidth required>\r\n                                        <InputLabel htmlFor=\"age-input\">Edad</InputLabel>\r\n                                        <Input \r\n                                            id=\"age-input\" \r\n                                            type=\"number\" \r\n                                            value={age}\r\n                                            onChange={e => setAge(e.target.value)}\r\n                                            required\r\n                                            inputProps={{min: 0,}} />\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        <Box className={\"MuiBox-RightAlign\"}>\r\n                            <Button color=\"secondary\" onClick={cancel}>\r\n                                Cancelar\r\n                            </Button>\r\n                            <Button type=\"submit\" color=\"primary\">\r\n                                Guardar\r\n                            </Button>\r\n                        </Box>\r\n                    </CardActions>\r\n                </form>\r\n            </Card>\r\n        </React.Fragment>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}