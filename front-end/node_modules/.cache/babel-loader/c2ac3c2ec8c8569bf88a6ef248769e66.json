{"ast":null,"code":"// import { withStyles } from \"@material-ui/core\";\n// import Box from \"@material-ui/core/Box\";\n// import Button from \"@material-ui/core/Button\";\n// import Card from \"@material-ui/core/Card\";\n// import CardActions from \"@material-ui/core/CardActions\";\n// import CardContent from \"@material-ui/core/CardContent\";\n// import FormControl from \"@material-ui/core/FormControl\";\n// import InputLabel from \"@material-ui/core/InputLabel\";\n// import MenuItem from \"@material-ui/core/MenuItem\";\n// import Select from \"@material-ui/core/Select\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import Typography from \"@material-ui/core/Typography\";\n// import axios from \"axios\";\n// import React, { useEffect, useState } from \"react\";\n// const styles = (theme) => ({\n//   card: {\n//     minWidth: 275,\n//     margin: theme.spacing(1),\n//   },\n// });\n// const useStyles = makeStyles((theme) => ({\n//   formControl: {\n//     margin: theme.spacing(1),\n//     minWidth: 120,\n//   },\n//   selectEmpty: {\n//     marginTop: theme.spacing(2),\n//   },\n// }));\n// function PatientCard(props) {\n//   const path = props.location.pathname;\n//   const PID = path.slice(path.lastIndexOf(\"/\")).slice(1);\n//   const [patientData, setPatientData] = useState({});\n//   const [isExpanded, setisExpanded] = useState(false);\n//   const [doctors, setDoctors] = useState([]);\n//   const [allDoctors, setAllDoctors] = useState([]);\n//   const [addedDoctor, setAddedDoctor] = useState(\"\");\n//   const classes = useStyles();\n//   useEffect(() => {\n//     let doctorsId = [];\n//     axios\n//       .get(`http://localhost:3001/patient/${PID}`, {\n//         headers: {\n//           \"x-access-token\": localStorage.getItem(\"jwtToken\"),\n//         },\n//       })\n//       .then((result) => {\n//         setPatientData(result.data[0]);\n//       });\n//     axios\n//       .get(`http://localhost:3001/patientRelatedToDoctor/${PID}`, {\n//         headers: {\n//           \"x-access-token\": localStorage.getItem(\"jwtToken\"),\n//         },\n//       })\n//       .then((result) => {\n//         for (let i = 0; i < result.data.length; i++) {\n//           doctorsId.push(result.data[i].DID);\n//         }\n//         axios\n//           .get(`http://localhost:3001/doctors/`, {\n//             headers: {\n//               \"x-access-token\": localStorage.getItem(\"jwtToken\"),\n//             },\n//           })\n//           .then((result) => {\n//             setAllDoctors(result.data);\n//             setDoctors(\n//               result.data.filter((doctor) => {\n//                 return doctorsId.includes(doctor.DID);\n//               })\n//             );\n//           });\n//       });\n//   }, [PID]);\n//   const handleChange = (e) => {\n//     setAddedDoctor(e.target.value);\n//   };\n//   const onRemoveDoctor = (DID, PID) => {\n//     setDoctors(doctors.filter((doctor) => doctor.DID !== DID));\n//     axios\n//       .post(\n//         `http://localhost:3001/relatedDoctor/remove`,\n//         {\n//           PID,\n//           DID,\n//         },\n//         {\n//           headers: {\n//             \"x-access-token\": localStorage.getItem(\"jwtToken\"),\n//           },\n//         }\n//       )\n//       .then((res) => {\n//         console.log(\"Removed Successfully\");\n//       });\n//   };\n//   const onAddDoctor = (DID, EHR) => {\n//     axios\n//       .post(\n//         `http://localhost:3001/relatedDoctor/add`,\n//         {\n//           PID,\n//           DID,\n// \t\t\t\t\tEHR\n//         },\n//         {\n//           headers: {\n//             \"x-access-token\": localStorage.getItem(\"jwtToken\"),\n//           },\n//         }\n//       )\n//       .then((res) => {\n//         console.log(\"Added Successfully\");\n//       });\n//   };\n//   return (\n//     <div>\n//       <Card>\n//         <CardContent>\n//           <Box mb={1}>\n//             <Typography color=\"textSecondary\" gutterBottom>\n//               PID {patientData.PID}\n//             </Typography>\n//             <Typography variant=\"h5\" component=\"h2\">\n//               {patientData.FirstName} {patientData.LastName}\n//             </Typography>\n//             <Typography color=\"textSecondary\">\n//               Age: {patientData.Age}\n//             </Typography>\n//             <Typography color=\"textSecondary\">\n//               Address: {patientData.Address}\n//             </Typography>\n//           </Box>\n//           {isExpanded ? (\n//             <Typography color=\"textSecondary\">\n//               EHR: {patientData.EHR}\n//             </Typography>\n//           ) : null}\n//         </CardContent>\n//         <CardActions>\n//           {isExpanded ? (\n//             <Button size=\"small\" onClick={() => setisExpanded(false)}>\n//               Shrink\n//             </Button>\n//           ) : (\n//             <Button size=\"small\" onClick={() => setisExpanded(true)}>\n//               Expand\n//             </Button>\n//           )}\n//         </CardActions>\n//       </Card>\n//       <div style={{ marginTop: \"10px\" }} />\n//       <Typography variant=\"h3\">Doctors</Typography>\n//       {doctors.map((doctorData) => (\n//         <Card>\n//           <CardContent>\n//             <Box mb={1}>\n//               <Typography color=\"textSecondary\" gutterBottom>\n//                 DID {doctorData.DID}\n//               </Typography>\n//               <Typography variant=\"h5\" component=\"h2\">\n//                 {doctorData.FirstName} {doctorData.LastName}\n//               </Typography>\n//               <Typography color=\"textSecondary\">\n//                 Specialization: {doctorData.Specialization}\n//               </Typography>\n//               <Typography color=\"textSecondary\">\n//                 Address: {doctorData.Address}\n//               </Typography>\n//             </Box>\n//             <Button\n//               size=\"small\"\n//               onClick={() => onRemoveDoctor(doctorData.DID, PID)}\n//             >\n//               Remove\n//             </Button>\n//           </CardContent>\n//         </Card>\n//       ))}\n//       <div style={{ marginTop: \"10px\" }} />\n//       <Typography variant=\"h4\">Add Doctor</Typography>\n//       <FormControl className={classes.formControl}>\n//         <InputLabel id=\"demo-simple-select-label\">Doctors</InputLabel>\n//         <Select\n//           labelId=\"demo-simple-select-label\"\n//           id=\"demo-simple-select\"\n//           onChange={handleChange}\n//           value={addedDoctor}\n//           defaultValue=\"\"\n//         >\n//           {allDoctors.map((doctor) => (\n//             <MenuItem value={doctor.DID}>{doctor.FirstName}</MenuItem>\n//           ))}\n//         </Select>\n//       </FormControl>\n//       <Button\n//         color=\"primary\"\n//         onClick={() => onAddDoctor(addedDoctor, patientData.EHR)}\n//         style={{ marginTop: \"23px\" }}\n//       >\n//         Add\n//       </Button>\n//     </div>\n//   );\n// }\n// export default withStyles(styles, { withTheme: true })(PatientCard);","map":{"version":3,"sources":["/home/shahid/hyperledger_EHR2/front-end/src/components/patient/PatientData.js"],"names":[],"mappingssourcesContent":["// import { withStyles } from \"@material-ui/core\";\n// import Box from \"@material-ui/core/Box\";\n// import Button from \"@material-ui/core/Button\";\n// import Card from \"@material-ui/core/Card\";\n// import CardActions from \"@material-ui/core/CardActions\";\n// import CardContent from \"@material-ui/core/CardContent\";\n// import FormControl from \"@material-ui/core/FormControl\";\n// import InputLabel from \"@material-ui/core/InputLabel\";\n// import MenuItem from \"@material-ui/core/MenuItem\";\n// import Select from \"@material-ui/core/Select\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import Typography from \"@material-ui/core/Typography\";\n// import axios from \"axios\";\n// import React, { useEffect, useState } from \"react\";\n\n// const styles = (theme) => ({\n//   card: {\n//     minWidth: 275,\n//     margin: theme.spacing(1),\n//   },\n// });\n\n// const useStyles = makeStyles((theme) => ({\n//   formControl: {\n//     margin: theme.spacing(1),\n//     minWidth: 120,\n//   },\n//   selectEmpty: {\n//     marginTop: theme.spacing(2),\n//   },\n// }));\n\n// function PatientCard(props) {\n//   const path = props.location.pathname;\n//   const PID = path.slice(path.lastIndexOf(\"/\")).slice(1);\n//   const [patientData, setPatientData] = useState({});\n//   const [isExpanded, setisExpanded] = useState(false);\n//   const [doctors, setDoctors] = useState([]);\n//   const [allDoctors, setAllDoctors] = useState([]);\n//   const [addedDoctor, setAddedDoctor] = useState(\"\");\n//   const classes = useStyles();\n\n//   useEffect(() => {\n//     let doctorsId = [];\n//     axios\n//       .get(`http://localhost:3001/patient/${PID}`, {\n//         headers: {\n//           \"x-access-token\": localStorage.getItem(\"jwtToken\"),\n//         },\n//       })\n//       .then((result) => {\n//         setPatientData(result.data[0]);\n//       });\n//     axios\n//       .get(`http://localhost:3001/patientRelatedToDoctor/${PID}`, {\n//         headers: {\n//           \"x-access-token\": localStorage.getItem(\"jwtToken\"),\n//         },\n//       })\n//       .then((result) => {\n//         for (let i = 0; i < result.data.length; i++) {\n//           doctorsId.push(result.data[i].DID);\n//         }\n//         axios\n//           .get(`http://localhost:3001/doctors/`, {\n//             headers: {\n//               \"x-access-token\": localStorage.getItem(\"jwtToken\"),\n//             },\n//           })\n//           .then((result) => {\n//             setAllDoctors(result.data);\n//             setDoctors(\n//               result.data.filter((doctor) => {\n//                 return doctorsId.includes(doctor.DID);\n//               })\n//             );\n//           });\n//       });\n//   }, [PID]);\n\n//   const handleChange = (e) => {\n//     setAddedDoctor(e.target.value);\n//   };\n\n//   const onRemoveDoctor = (DID, PID) => {\n//     setDoctors(doctors.filter((doctor) => doctor.DID !== DID));\n//     axios\n//       .post(\n//         `http://localhost:3001/relatedDoctor/remove`,\n//         {\n//           PID,\n//           DID,\n//         },\n//         {\n//           headers: {\n//             \"x-access-token\": localStorage.getItem(\"jwtToken\"),\n//           },\n//         }\n//       )\n//       .then((res) => {\n//         console.log(\"Removed Successfully\");\n//       });\n//   };\n\n//   const onAddDoctor = (DID, EHR) => {\n//     axios\n//       .post(\n//         `http://localhost:3001/relatedDoctor/add`,\n//         {\n//           PID,\n//           DID,\n// \t\t\t\t\tEHR\n//         },\n//         {\n//           headers: {\n//             \"x-access-token\": localStorage.getItem(\"jwtToken\"),\n//           },\n//         }\n//       )\n//       .then((res) => {\n//         console.log(\"Added Successfully\");\n//       });\n//   };\n\n//   return (\n//     <div>\n//       <Card>\n//         <CardContent>\n//           <Box mb={1}>\n//             <Typography color=\"textSecondary\" gutterBottom>\n//               PID {patientData.PID}\n//             </Typography>\n//             <Typography variant=\"h5\" component=\"h2\">\n//               {patientData.FirstName} {patientData.LastName}\n//             </Typography>\n//             <Typography color=\"textSecondary\">\n//               Age: {patientData.Age}\n//             </Typography>\n//             <Typography color=\"textSecondary\">\n//               Address: {patientData.Address}\n//             </Typography>\n//           </Box>\n//           {isExpanded ? (\n//             <Typography color=\"textSecondary\">\n//               EHR: {patientData.EHR}\n//             </Typography>\n//           ) : null}\n//         </CardContent>\n//         <CardActions>\n//           {isExpanded ? (\n//             <Button size=\"small\" onClick={() => setisExpanded(false)}>\n//               Shrink\n//             </Button>\n//           ) : (\n//             <Button size=\"small\" onClick={() => setisExpanded(true)}>\n//               Expand\n//             </Button>\n//           )}\n//         </CardActions>\n//       </Card>\n//       <div style={{ marginTop: \"10px\" }} />\n//       <Typography variant=\"h3\">Doctors</Typography>\n//       {doctors.map((doctorData) => (\n//         <Card>\n//           <CardContent>\n//             <Box mb={1}>\n//               <Typography color=\"textSecondary\" gutterBottom>\n//                 DID {doctorData.DID}\n//               </Typography>\n//               <Typography variant=\"h5\" component=\"h2\">\n//                 {doctorData.FirstName} {doctorData.LastName}\n//               </Typography>\n//               <Typography color=\"textSecondary\">\n//                 Specialization: {doctorData.Specialization}\n//               </Typography>\n//               <Typography color=\"textSecondary\">\n//                 Address: {doctorData.Address}\n//               </Typography>\n//             </Box>\n//             <Button\n//               size=\"small\"\n//               onClick={() => onRemoveDoctor(doctorData.DID, PID)}\n//             >\n//               Remove\n//             </Button>\n//           </CardContent>\n//         </Card>\n//       ))}\n//       <div style={{ marginTop: \"10px\" }} />\n//       <Typography variant=\"h4\">Add Doctor</Typography>\n//       <FormControl className={classes.formControl}>\n//         <InputLabel id=\"demo-simple-select-label\">Doctors</InputLabel>\n//         <Select\n//           labelId=\"demo-simple-select-label\"\n//           id=\"demo-simple-select\"\n//           onChange={handleChange}\n//           value={addedDoctor}\n//           defaultValue=\"\"\n//         >\n//           {allDoctors.map((doctor) => (\n//             <MenuItem value={doctor.DID}>{doctor.FirstName}</MenuItem>\n//           ))}\n//         </Select>\n//       </FormControl>\n//       <Button\n//         color=\"primary\"\n//         onClick={() => onAddDoctor(addedDoctor, patientData.EHR)}\n//         style={{ marginTop: \"23px\" }}\n//       >\n//         Add\n//       </Button>\n//     </div>\n//   );\n// }\n\n// export default withStyles(styles, { withTheme: true })(PatientCard);\n"]},"metadata":{},"sourceType":"module"}