{"ast":null,"code":"var _jsxFileName = \"/home/shahid/hyperledger_EHR/front-end/src/components/snackBar/SnackBar.js\";\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport IconButton from '@material-ui/core/IconButton';\nimport React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport { withStyles } from '@material-ui/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst variantIcon = {\n  success: CheckCircleIcon,\n  error: ErrorIcon\n};\n\nconst styles = theme => ({\n  success: {\n    backgroundColor: theme.palette.success.main\n  },\n  error: {\n    backgroundColor: theme.palette.error.main\n  },\n  icon: {\n    fontSize: 20,\n    opacity: 0.9,\n    marginRight: 8\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n});\n\nlet openSnackBarFn;\n\nclass SnackBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.openSnackBar = ({\n      message,\n      type\n    }) => {\n      this.setState({\n        open: true,\n        message,\n        type\n      });\n    };\n\n    this.handleSnackBarClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.state = {\n      open: false,\n      message: '',\n      type: ''\n    };\n  }\n\n  componentDidMount() {\n    openSnackBarFn = this.openSnackBar;\n  }\n\n  render() {\n    const type = this.state.type;\n    let Icon = null;\n    let classSnackBar = null;\n    const {\n      classes\n    } = this.props; //BY default show error\n\n    if (variantIcon[type]) Icon = variantIcon[type];else Icon = variantIcon[\"error\"];\n    if (classes[type]) classSnackBar = classes[type];else classSnackBar = classes[\"error\"];\n    return /*#__PURE__*/_jsxDEV(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n      },\n      open: this.state.open,\n      autoHideDuration: 6000,\n      onClose: this.handleSnackBarClose,\n      children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n        className: classSnackBar,\n        \"aria-describedby\": \"client-snackbar\",\n        message: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"client-snackbar\",\n          className: classes.message,\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            className: classes.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), this.state.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this),\n        action: [/*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"close\",\n          color: \"inherit\",\n          onClick: this.handleSnackBarClose,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)\n        }, \"close\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(SnackBar);\nexport function openSnackBar({\n  message,\n  type\n}) {\n  openSnackBarFn({\n    message,\n    type\n  });\n}","map":{"version":3,"sources":["/home/shahid/hyperledger_EHR/front-end/src/components/snackBar/SnackBar.js"],"names":["CheckCircleIcon","CloseIcon","ErrorIcon","IconButton","React","Snackbar","SnackbarContent","withStyles","variantIcon","success","error","styles","theme","backgroundColor","palette","main","icon","fontSize","opacity","marginRight","message","display","alignItems","openSnackBarFn","SnackBar","Component","constructor","props","openSnackBar","type","setState","open","handleSnackBarClose","state","componentDidMount","render","Icon","classSnackBar","classes","vertical","horizontal","withTheme"],"mappings":"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","sourcesContent":["import CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport IconButton from '@material-ui/core/IconButton';\nimport React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport { withStyles } from '@material-ui/styles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  error: ErrorIcon,\n};\n\nconst styles = (theme) => ({\n  success: {\n    backgroundColor: theme.palette.success.main,\n  },\n  error: {\n    backgroundColor: theme.palette.error.main,\n  },\n  icon: {\n    fontSize: 20,\n    opacity: 0.9,\n    marginRight: 8,\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  }\n});\n\nlet openSnackBarFn;\n\nclass SnackBar extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      open: false,\n      message: '',\n      type: '',\n    };\n  }\n\n  componentDidMount() {\n    openSnackBarFn = this.openSnackBar;\n  }\n\n  openSnackBar = ({ message, type }) => {\n    this.setState({\n      open: true,\n      message,\n      type,\n    });\n  };\n  \n  handleSnackBarClose = () => {\n    this.setState({\n      open: false,\n    });\n  };\n\n  render() {\n    const type = this.state.type;\n    let Icon = null;\n    let classSnackBar = null;\n    const {classes} = this.props;\n\n    //BY default show error\n    if (variantIcon[type]) Icon = variantIcon[type]\n      else Icon = variantIcon[\"error\"];\n\n    if (classes[type]) classSnackBar = classes[type]\n      else classSnackBar = classes[\"error\"];\n\n    return (\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n          }}\n          open={this.state.open}\n          autoHideDuration={6000}\n          onClose={this.handleSnackBarClose}\n        >\n          <SnackbarContent\n            className={classSnackBar}\n            aria-describedby=\"client-snackbar\"\n            message={\n              <span id=\"client-snackbar\" className={classes.message}>\n                <Icon className={classes.icon} />\n                {this.state.message}\n              </span>\n            }\n            action={[\n              <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={this.handleSnackBarClose}>\n                <CloseIcon/>\n              </IconButton>,\n            ]}\n          />\n        </Snackbar>\n    );\n  }\n \n}\nexport default withStyles(styles, { withTheme: true })(SnackBar);\n\nexport function openSnackBar({message, type}) {\n  openSnackBarFn({message, type});\n}"]},"metadata":{},"sourceType":"module"}