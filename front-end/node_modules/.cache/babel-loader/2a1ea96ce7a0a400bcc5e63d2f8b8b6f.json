{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaustubh\\\\EHR\\\\front-end\\\\src\\\\components\\\\addRecord\\\\AddRecordForm.js\",\n    _s = $RefreshSig$();\n\nimport { FormControl, Input, InputLabel } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { openSnackBar } from \"../snackBar/SnackBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  formDiv: {\n    marginLeft: 10,\n    marginRight: 10\n  },\n  textField: {\n    marginLeft: 8,\n    marginRight: 10,\n    width: 300\n  }\n};\nexport default function AddRecordForm(props) {\n  _s();\n\n  const [information, setInformation] = useState(\"\");\n\n  const handleChange = e => {\n    setInformation(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post(`http://localhost:3001/records/`, {\n      key: props.PId,\n      information,\n      doctorId: \"asdasd\"\n    }, {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"jwtToken\")\n      }\n    }).then(res => {\n      openSnackBar({\n        message: \"Registro agregado correctamente\",\n        type: \"success\"\n      });\n    }).catch(error => {\n      openSnackBar({\n        message: error.response.data.message,\n        type: \"error\"\n      });\n    }).finally(() => {\n      props.handleExit();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.formDiv,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        margin: \"normal\",\n        fullWidth: true,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"msg\",\n          children: \"Add New Record\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"msg\",\n          value: information,\n          onChange: handleChange,\n          multiline: true,\n          rows: 10,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        size: \"small\",\n        variant: \"outlined\",\n        color: \"primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddRecordForm, \"nwJQEXxKLPr3K5jojZStft+0ktc=\");\n\n_c = AddRecordForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRecordForm\");","map":{"version":3,"sources":["C:/Users/Kaustubh/EHR/front-end/src/components/addRecord/AddRecordForm.js"],"names":["FormControl","Input","InputLabel","Button","axios","React","useState","openSnackBar","styles","formDiv","marginLeft","marginRight","textField","width","AddRecordForm","props","information","setInformation","handleChange","e","target","value","handleSubmit","preventDefault","post","key","PId","doctorId","headers","localStorage","getItem","then","res","message","type","catch","error","response","data","finally","handleExit"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,KAAtB,EAA6BC,UAA7B,QAA+C,mBAA/C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,QAA6B,sBAA7B;;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAE,EADL;AAEPC,IAAAA,WAAW,EAAE;AAFN,GADI;AAKbC,EAAAA,SAAS,EAAE;AACTF,IAAAA,UAAU,EAAE,CADH;AAETC,IAAAA,WAAW,EAAE,EAFJ;AAGTE,IAAAA,KAAK,EAAE;AAHE;AALE,CAAf;AAYA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC3C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMY,YAAY,GAAIC,CAAD,IAAO;AAC1BF,IAAAA,cAAc,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAIH,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACI,cAAF;AACAnB,IAAAA,KAAK,CACFoB,IADH,CAEK,gCAFL,EAGI;AACEC,MAAAA,GAAG,EAAEV,KAAK,CAACW,GADb;AAEEV,MAAAA,WAFF;AAGEW,MAAAA,QAAQ,EAAE;AAHZ,KAHJ,EAQI;AACEC,MAAAA,OAAO,EAAE;AACP,0BAAkBC,YAAY,CAACC,OAAb,CAAqB,UAArB;AADX;AADX,KARJ,EAcGC,IAdH,CAcSC,GAAD,IAAS;AACbzB,MAAAA,YAAY,CAAC;AACX0B,QAAAA,OAAO,EAAE,iCADE;AAEXC,QAAAA,IAAI,EAAE;AAFK,OAAD,CAAZ;AAID,KAnBH,EAoBGC,KApBH,CAoBUC,KAAD,IAAW;AAChB7B,MAAAA,YAAY,CAAC;AAAE0B,QAAAA,OAAO,EAAEG,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBL,OAA/B;AAAwCC,QAAAA,IAAI,EAAE;AAA9C,OAAD,CAAZ;AACD,KAtBH,EAuBGK,OAvBH,CAuBW,MAAM;AACbxB,MAAAA,KAAK,CAACyB,UAAN;AACD,KAzBH;AA0BD,GA5BD;;AA8BA,sBACE;AAAK,IAAA,KAAK,EAAEhC,MAAM,CAACC,OAAnB;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEa,YAAhB;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,MAAM,EAAC,QAApB;AAA6B,QAAA,SAAS,MAAtC;AAAuC,QAAA,QAAQ,MAA/C;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AACE,UAAA,EAAE,EAAC,KADL;AAEE,UAAA,KAAK,EAAEN,WAFT;AAGE,UAAA,QAAQ,EAAEE,YAHZ;AAIE,UAAA,SAAS,MAJX;AAKE,UAAA,IAAI,EAAE,EALR;AAME,UAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAYE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,IAAI,EAAC,OAA3B;AAAmC,QAAA,OAAO,EAAC,UAA3C;AAAsD,QAAA,KAAK,EAAC,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAzDuBJ,a;;KAAAA,a","sourcesContent":["import { FormControl, Input, InputLabel } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { openSnackBar } from \"../snackBar/SnackBar\";\r\n\r\nconst styles = {\r\n  formDiv: {\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n  },\r\n  textField: {\r\n    marginLeft: 8,\r\n    marginRight: 10,\r\n    width: 300,\r\n  },\r\n};\r\n\r\nexport default function AddRecordForm(props) {\r\n  const [information, setInformation] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setInformation(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\r\n        `http://localhost:3001/records/`,\r\n        {\r\n          key: props.PId,\r\n          information,\r\n          doctorId: \"asdasd\",\r\n        },\r\n        {\r\n          headers: {\r\n            \"x-access-token\": localStorage.getItem(\"jwtToken\"),\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        openSnackBar({\r\n          message: \"Registro agregado correctamente\",\r\n          type: \"success\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        openSnackBar({ message: error.response.data.message, type: \"error\" });\r\n      })\r\n      .finally(() => {\r\n        props.handleExit();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div style={styles.formDiv}>\r\n      <form onSubmit={handleSubmit}>\r\n        <FormControl margin=\"normal\" fullWidth required>\r\n          <InputLabel htmlFor=\"msg\">Add New Record</InputLabel>\r\n          <Input\r\n            id=\"msg\"\r\n            value={information}\r\n            onChange={handleChange}\r\n            multiline\r\n            rows={10}\r\n            required\r\n          />\r\n        </FormControl>\r\n        <Button type=\"submit\" size=\"small\" variant=\"outlined\" color=\"primary\">\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}