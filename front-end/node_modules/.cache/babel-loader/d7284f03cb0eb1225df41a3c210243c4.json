{"ast":null,"code":"var _jsxFileName = \"/home/shahid/hyperledger_EHR2/front-end/src/components/create/Create.js\",\n    _s = $RefreshSig$();\n\nimport { makeStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Axios from 'axios';\nimport React, { useState, useEffect } from \"react\";\nimport { openSnackBar } from \"../snackBar/SnackBar\"; // import sessionStorage from '/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/login/LoginAdmin.js';\n// import UserProfile from '../login/SessionDetails';\n\nimport Web3 from 'web3';\nimport { TODO_LIST_ABI, TODO_LIST_ADDRESS } from './config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst web3 = new Web3(Web3.givenProvider);\nconst HelloContract = new web3.eth.Contract(TODO_LIST_ABI, TODO_LIST_ADDRESS);\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(4)\n  }\n}));\nexport default function CreatePage(props) {\n  _s();\n\n  const [selectedFile, setSelectedFile] = useState();\n  const [isSelected, setIsSelected] = useState(false); // baseuri\n\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [copiesCount, setCopiesCount] = useState(\"\");\n  const [royalties, setRoyalties] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [image, setImage] = useState(null);\n\n  const changeHandler = event => {\n    setSelectedFile(event.target.files[0]);\n    setIsSelected(true);\n  };\n\n  const classes = useStyles(); // const updateReview = (movie) => {\n  // Axios.put(`http://localhost:3001/api/update${sessionStorage.getItem(\"UserId\")}`, {\n  // }).then(() => {\n  //   alert(\"Successful update\");\n  // });\n  // }\n\n  const sendtoBlockchain = async e => {\n    e.preventDefault();\n    Axios.post(`http://localhost:3001/api/createTokenImage${sessionStorage.getItem(\"UserId\")}`, {\n      title,\n      description,\n      copiesCount,\n      royalties,\n      price,\n      image\n    }).then(() => {\n      alert(\"Successful update\");\n    }); // event.preventDefault();\n    // event. returnValue = false;\n\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0]; // const gas = await HelloContract.methods.sendBal('0x9c9e37934CC8Dd832E8C2406324Dd04D5CdE715f').estimateGas();\n\n    const gas = 7000000; // , value:web3.utils.toWei(\"0.5\", \"ether\")\n\n    var baseURI = '{' + '\"title\" : ' + title + ',' + '\"description\"  : ' + description + ',' + '\"price\" : ' + price + ',' + '\"copiesCount\" : ' + copiesCount + ',' + '\"royalties\" : ' + royalties + '}'; // const result = await HelloContract.methods\n    //   .mintNft('0x9c9e37934CC8Dd832E8C2406324Dd04D5CdE715f', baseURI)\n    //   .send({ from: account, gas });\n    // console.log(\"hey\")\n    // console.log(result);\n  };\n\n  const sayhey = data => {\n    // setImage(e.target.files[0]);\n    // e.preventDefault();\n    console.log(data.picture[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    component: \"main\",\n    className: \"MuiContainer--01\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sayhey(onSubmit),\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"h1\",\n              variant: \"h3\",\n              align: \"center\",\n              color: \"textPrimary\",\n              gutterBottom: true,\n              children: \"Create and Mint NFT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"title-input\",\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"title-input\" // value={title}\n                ,\n                name: \"title\",\n                onChange: e => setTitle(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"description-input\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"description-input\" // value={description}\n                ,\n                name: \"description\",\n                onChange: e => setDescription(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"price-input\",\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"price-input\",\n                name: \"price\",\n                onChange: e => setPrice(e.target.value) // value={price}\n                ,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"copies-count-input\",\n                children: \"Number of Copies\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"copies-count-input\" // value={copiesCount}\n                ,\n                name: \"copiesCount\",\n                onChange: e => setCopiesCount(e.target.value),\n                type: \"text\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"royalties-input\",\n                children: \"Royalties\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"royalties-input\" // value={royalties}\n                ,\n                name: \"royalties\",\n                onChange: e => setRoyalties(e.target.value),\n                type: \"text\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"pic\",\n              name: \"pic\" // onChange={(e) => setImage(e.target.files[0])}\n              // onChange={sayhey}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), isSelected ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Filename: \", selectedFile.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Filetype: \", selectedFile.type]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Size in bytes: \", selectedFile.size]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Select a file to show details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"MuiButton-Full\",\n              variant: \"contained\",\n              size: \"large\",\n              color: \"primary\" // onClick={sendtoBlockchain}\n              ,\n              children: \"Create Token\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreatePage, \"OTeCHcYGdClC+XXT1vYQYfakdpc=\", false, function () {\n  return [useStyles];\n});\n\n_c = CreatePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePage\");","map":{"version":3,"sources":["/home/shahid/hyperledger_EHR2/front-end/src/components/create/Create.js"],"names":["makeStyles","Button","Container","FormControl","Grid","Input","InputLabel","Paper","Typography","Axios","React","useState","useEffect","openSnackBar","Web3","TODO_LIST_ABI","TODO_LIST_ADDRESS","web3","givenProvider","HelloContract","eth","Contract","useStyles","theme","paper","padding","spacing","CreatePage","props","selectedFile","setSelectedFile","isSelected","setIsSelected","title","setTitle","description","setDescription","copiesCount","setCopiesCount","royalties","setRoyalties","price","setPrice","image","setImage","changeHandler","event","target","files","classes","sendtoBlockchain","e","preventDefault","post","sessionStorage","getItem","then","alert","accounts","window","ethereum","enable","account","gas","baseURI","sayhey","data","console","log","picture","onSubmit","value","name","type","size"],"mappings":"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","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Axios from 'axios';\nimport React, { useState, useEffect } from \"react\";\nimport { openSnackBar } from \"../snackBar/SnackBar\";\n// import sessionStorage from '/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/login/LoginAdmin.js';\n// import UserProfile from '../login/SessionDetails';\n\nimport Web3 from 'web3'\n\nimport { TODO_LIST_ABI, TODO_LIST_ADDRESS } from './config'\n\nconst web3 = new Web3(Web3.givenProvider);\n\nconst HelloContract = new web3.eth.Contract(TODO_LIST_ABI, TODO_LIST_ADDRESS);\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(4),\n  },\n}));\n\nexport default function CreatePage(props) {\n  const [selectedFile, setSelectedFile] = useState();\n  const [isSelected, setIsSelected] = useState(false);\n\n  // baseuri\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [copiesCount, setCopiesCount] = useState(\"\");\n  const [royalties, setRoyalties] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [image, setImage] = useState(null);\n\n  const changeHandler = (event) => {\n    setSelectedFile(event.target.files[0]);\n    setIsSelected(true);\n  };\n\n  const classes = useStyles();\n\n  // const updateReview = (movie) => {\n    // Axios.put(`http://localhost:3001/api/update${sessionStorage.getItem(\"UserId\")}`, {\n    // }).then(() => {\n    //   alert(\"Successful update\");\n    // });\n  // }\n\n  const sendtoBlockchain = async (e) => {\n\n    e.preventDefault();\n\n    Axios\n    .post(`http://localhost:3001/api/createTokenImage${sessionStorage.getItem(\"UserId\")}`, {\n          title,\n          description,\n          copiesCount,\n          royalties,\n          price,\n          image\n    })\n    .then(() => {\n      alert(\"Successful update\");\n    });\n\n\n\n\n    // event.preventDefault();\n    // event. returnValue = false;\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    \n    \n    // const gas = await HelloContract.methods.sendBal('0x9c9e37934CC8Dd832E8C2406324Dd04D5CdE715f').estimateGas();\n    \n    const gas = 7000000;\n\n\n    // , value:web3.utils.toWei(\"0.5\", \"ether\")\n\n    var baseURI = '{'\n       +'\"title\" : ' + title + ','\n       +'\"description\"  : ' + description + ','\n       +'\"price\" : ' + price + ','\n       +'\"copiesCount\" : ' + copiesCount + ','\n       +'\"royalties\" : ' + royalties\n       +'}';\n\n    // const result = await HelloContract.methods\n    //   .mintNft('0x9c9e37934CC8Dd832E8C2406324Dd04D5CdE715f', baseURI)\n    //   .send({ from: account, gas });\n    \n    // console.log(\"hey\")\n    // console.log(result);\n\n  };\n\n  const sayhey = (data) =>{\n    // setImage(e.target.files[0]);\n    // e.preventDefault();\n    console.log(data.picture[0]);\n  }\n\n  return (\n    <Container maxWidth=\"sm\" component=\"main\" className={\"MuiContainer--01\"}>\n      <Paper className={classes.paper}>\n        {/* <form onSubmit={handleSubmit}> */}\n        <form onSubmit={sayhey(onSubmit)}> \n\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography\n                component=\"h1\"\n                variant=\"h3\"\n                align=\"center\"\n                color=\"textPrimary\"\n                gutterBottom\n              >\n                Create and Mint NFT\n                        </Typography>\n            </Grid>\n            \n            <Grid item xs={12}>\n              <FormControl fullWidth required>\n                <InputLabel htmlFor=\"title-input\">Title</InputLabel>\n                <Input\n                  id=\"title-input\"\n                  // value={title}\n                  name=\"title\"\n                  onChange={(e) => setTitle(e.target.value)}\n                  required\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth required>\n                <InputLabel htmlFor=\"description-input\">Description</InputLabel>\n                <Input\n                  id=\"description-input\"\n                  // value={description}\n                  name=\"description\"\n                  onChange={(e) => setDescription(e.target.value)}\n                  required\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth required>\n                <InputLabel htmlFor=\"price-input\">Price</InputLabel>\n                <Input\n                  id=\"price-input\"\n                  name=\"price\"\n                  onChange={(e) => setPrice(e.target.value)}\n                  // value={price}\n                  required\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth required>\n                <InputLabel htmlFor=\"copies-count-input\">Number of Copies</InputLabel>\n                <Input\n                  id=\"copies-count-input\"\n                  // value={copiesCount}\n                  name=\"copiesCount\"\n                  onChange={(e) => setCopiesCount(e.target.value)}\n                  type=\"text\"\n                  required\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth required>\n                <InputLabel htmlFor=\"royalties-input\">\n                  Royalties\n                          </InputLabel>\n                <Input\n                  id=\"royalties-input\"\n                  // value={royalties}\n                  name=\"royalties\"\n                  onChange={(e) => setRoyalties(e.target.value)}\n                  type=\"text\"\n                  required\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              {/* <form runat=\"server\"> */}\n              <input \n                type=\"file\" \n                id=\"pic\" \n                name=\"pic\" \n                // onChange={(e) => setImage(e.target.files[0])}\n                // onChange={sayhey}\n              />\n              \n              {isSelected ? (\n                <div>\n                  <p>Filename: {selectedFile.name}</p>\n                  <p>Filetype: {selectedFile.type}</p>\n                  <p>Size in bytes: {selectedFile.size}</p>\n                </div>\n              ) : (\n                <p>Select a file to show details</p>\n              )}\n              {/* </form> */}\n            </Grid>\n            <Grid item xs={12}>\n              <Button\n                type=\"submit\"\n                className={\"MuiButton-Full\"}\n                variant=\"contained\"\n                size=\"large\"\n                color=\"primary\"\n                // onClick={sendtoBlockchain}\n              >\n                Create Token\n                        </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </Container>\n  );\n}"]},"metadata":{},"sourceType":"module"}