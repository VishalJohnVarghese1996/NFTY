{"ast":null,"code":"var _jsxFileName = \"/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/login/LoginAdmin.js\",\n    _s = $RefreshSig$();\n\nimport { makeStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { openSnackBar } from \"../snackBar/SnackBar\";\nimport UserProfile from './SessionDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(4)\n  }\n}));\nexport default function Login(props) {\n  _s();\n\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const classes = useStyles();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post('http://localhost:3001/login', {\n      userName,\n      password\n    }).then(res => {\n      if (res.status == 200 // res.data.message != \"Wrong username/Password\"\n      ) {\n          const token = res.data.token;\n          props.setLogin(token);\n          sessionStorage.setItem('UserName', userName);\n          UserProfile.setName(userName);\n          console.log(res.data.user_name);\n          props.history.push(\"/patients\");\n          return;\n        } else {\n        openSnackBar({\n          message: \"Authentication Error\",\n          type: \"error\"\n        });\n      }\n    }).catch(error => {\n      let errorMessage;\n\n      if (error.response) {\n        errorMessage = error.response.data.message;\n      } else if (error.message) {\n        errorMessage = error.message;\n      } else {\n        errorMessage = \"Authentication Error\";\n      }\n\n      openSnackBar({\n        message: errorMessage,\n        type: \"error\"\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    component: \"main\",\n    className: \"MuiContainer--01\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"h1\",\n              variant: \"h5\",\n              align: \"center\",\n              color: \"textPrimary\",\n              gutterBottom: true,\n              children: \"Please provide userID and password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"username-input\",\n                children: \"User Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"userid-input\",\n                value: userName,\n                onChange: e => setUserName(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"password-input\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"firstname-input\",\n                value: password,\n                type: \"password\",\n                onChange: e => setPassword(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"MuiButton-Full\",\n              variant: \"contained\",\n              size: \"large\",\n              color: \"primary\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"MuiButton-Full\",\n              href: \"/enroll/\",\n              size: \"large\",\n              color: \"primary\",\n              children: \"Not Registered? Register now!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"EaXhHX1lALYPjXuUuUE52uPbkP8=\", false, function () {\n  return [useStyles];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/login/LoginAdmin.js"],"names":["makeStyles","Button","Container","FormControl","Grid","Input","InputLabel","Paper","Typography","axios","React","useState","openSnackBar","UserProfile","useStyles","theme","paper","padding","spacing","Login","props","userName","setUserName","password","setPassword","classes","handleSubmit","e","preventDefault","post","then","res","status","token","data","setLogin","sessionStorage","setItem","setName","console","log","user_name","history","push","message","type","catch","error","errorMessage","response","target","value"],"mappings":"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","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { openSnackBar } from \"../snackBar/SnackBar\";\nimport UserProfile from './SessionDetails';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(4),\n  },\n}));\n\n\nexport default function Login(props) {  \n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const classes = useStyles();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    axios\n      .post('http://localhost:3001/login', {\n        userName,\n        password,\n      })\n      .then((res) => {\n        if (\n          res.status == 200 \n          // res.data.message != \"Wrong username/Password\"\n        ) {\n          const token = res.data.token;\n          props.setLogin(token);\n          sessionStorage.setItem('UserName', userName);\n          UserProfile.setName(userName);\n          console.log(res.data.user_name);\n          props.history.push(\"/patients\");\n          return;\n        } else {\n          openSnackBar({ message: \"Authentication Error\", type: \"error\" });\n        }\n      })\n      .catch((error) => {\n        let errorMessage;\n        if (error.response) {\n          errorMessage = error.response.data.message;\n        } else if (error.message) {\n          errorMessage = error.message;\n        } else {\n          errorMessage = \"Authentication Error\";\n        }\n        openSnackBar({ message: errorMessage, type: \"error\" });\n      });\n  };\n\n  return (\n    <Container maxWidth=\"sm\" component=\"main\" className={\"MuiContainer--01\"}>\n      <Paper className={classes.paper}>\n        <form onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography\n                component=\"h1\"\n                variant=\"h5\"\n                align=\"center\"\n                color=\"textPrimary\"\n                gutterBottom\n              >\n                Please provide userID and password\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth required>\n                <InputLabel htmlFor=\"username-input\">User Name</InputLabel>\n                <Input\n                  id=\"userid-input\"\n                  value={userName}\n                  onChange={(e) => setUserName(e.target.value)}\n                  required\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth required>\n                <InputLabel htmlFor=\"password-input\">Password</InputLabel>\n                <Input\n                  id=\"firstname-input\"\n                  value={password}\n                  type=\"password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                  required\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <Button\n                type=\"submit\"\n                className={\"MuiButton-Full\"}\n                variant=\"contained\"\n                size=\"large\"\n                color=\"primary\"\n              >\n                Login\n              </Button>\n            </Grid>\n            <Grid item xs={12}>\n              <Button\n                className={\"MuiButton-Full\"}\n                href=\"/enroll/\"\n                size=\"large\"\n                color=\"primary\"\n              >\n                Not Registered? Register now!\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}