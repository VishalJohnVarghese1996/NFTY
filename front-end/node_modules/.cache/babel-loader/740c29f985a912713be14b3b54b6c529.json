{"ast":null,"code":"var _jsxFileName = \"/home/shahid/hyperledger_EHR2/front-end/src/components/enroll/Enroll.js\",\n    _s = $RefreshSig$();\n\nimport { makeStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { openSnackBar } from \"../snackBar/SnackBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(4)\n  }\n}));\nexport default function Enroll(props) {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [newPasswordConfirmation, setNewPasswordConfirmation] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const classes = useStyles();\n\n  const validateForm = () => {\n    let errors = [];\n\n    if (newPassword !== newPasswordConfirmation) {\n      errors.push(\"The passwords do not match\");\n    }\n\n    return errors;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const errors = validateForm();\n\n    if (errors.length) {\n      errors.forEach(error => {\n        openSnackBar({\n          message: error,\n          type: \"error\"\n        });\n      });\n    } else {\n      console.log(\"44\", newPassword);\n      axios.post(`http://localhost:3001/register`, {\n        username,\n        name,\n        email,\n        newPassword\n      }).then(res => {\n        console.log(res);\n\n        if (res.status == 200) {\n          openSnackBar({\n            message: \"User Registration Successful\",\n            type: \"success\"\n          });\n          props.history.push(\"/login/Admin\");\n          return;\n        } else {\n          openSnackBar({\n            message: \"Authentication Error\",\n            type: \"error\"\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n        openSnackBar({\n          message: \"errorss\",\n          type: \"error\"\n        });\n      });\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    //   <Container maxWidth=\"sm\" component=\"main\" className={\"MuiContainer--01\"}>\n    //     <Paper className={classes.paper}>\n    //       <form onSubmit={handleSubmit}>\n    //         <Grid container spacing={2}>\n    //           <Grid item xs={12}>\n    //             <Typography\n    //               component=\"h1\"\n    //               variant=\"h5\"\n    //               align=\"center\"\n    //               color=\"textPrimary\"\n    //               gutterBottom\n    //             >\n    //               Registration of New User\n    //             </Typography>\n    //           </Grid>\n    //           <Grid item xs={12}>\n    //             <FormControl fullWidth required>\n    //               <InputLabel htmlFor=\"name-input\">Full Name</InputLabel>\n    //               <Input\n    //                 id=\"name-input\"\n    //                 value={name}\n    //                 onChange={(e) => setName(e.target.value)}\n    //                 required\n    //               />\n    //             </FormControl>\n    //           </Grid>\n    //           <Grid item xs={12}>\n    //             <FormControl fullWidth required>\n    //               <InputLabel htmlFor=\"username-input\">Select a User Name</InputLabel>\n    //               <Input\n    //                 id=\"username-input\"\n    //                 value={username}\n    //                 onChange={(e) => setUsername(e.target.value)}\n    //                 required\n    //               />\n    //             </FormControl>\n    //           </Grid>\n    //           <Grid item xs={12}>\n    //             <FormControl fullWidth required>\n    //               <InputLabel htmlFor=\"email-input\">Email</InputLabel>\n    //               <Input\n    //                 id=\"email-input\"\n    //                 value={email}\n    //                 onChange={(e) => setEmail(e.target.value)}\n    //                 required\n    //               />\n    //             </FormControl>\n    //           </Grid>\n    //           <Grid item xs={12}>\n    //             <FormControl fullWidth required>\n    //               <InputLabel htmlFor=\"newpassword-input\">Password</InputLabel>\n    //               <Input\n    //                 id=\"newpassword-input\"\n    //                 value={newPassword}\n    //                 type=\"password\"\n    //                 onChange={(e) => setNewPassword(e.target.value)}\n    //                 required\n    //               />\n    //             </FormControl>\n    //           </Grid>\n    //           <Grid item xs={12}>\n    //             <FormControl fullWidth required>\n    //               <InputLabel htmlFor=\"newpassword-confirmation-input\">\n    //                 Confirm Password\n    //               </InputLabel>\n    //               <Input\n    //                 id=\"newpassword-confirmation-input\"\n    //                 value={newPasswordConfirmation}\n    //                 type=\"password\"\n    //                 onChange={(e) => setNewPasswordConfirmation(e.target.value)}\n    //                 required\n    //               />\n    //             </FormControl>\n    //           </Grid>\n    //           <Grid item xs={12}>\n    //             <Button\n    //               type=\"submit\"\n    //               className={\"MuiButton-Full\"}\n    //               variant=\"contained\"\n    //               size=\"large\"\n    //               color=\"primary\"\n    //             >\n    //               Register\n    //             </Button>\n    //           </Grid>\n    //           <Grid item xs={12}>\n    //             <Button\n    //               className={\"MuiButton-Full\"}\n    //               href=\"/login/admin\"\n    //               size=\"large\"\n    //               color=\"primary\"\n    //             >\n    //               Go back to login\n    //             </Button>\n    //           </Grid>\n    //         </Grid>\n    //       </form>\n    //     </Paper>\n    //   </Container>\n    // );\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello whatsapp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(Enroll, \"nBIQeYk4VHm1B0oayukgZOGyrYw=\", false, function () {\n  return [useStyles];\n});\n\n_c = Enroll;\n\nvar _c;\n\n$RefreshReg$(_c, \"Enroll\");","map":{"version":3,"sources":["/home/shahid/hyperledger_EHR2/front-end/src/components/enroll/Enroll.js"],"names":["makeStyles","Button","Container","FormControl","Grid","Input","InputLabel","Paper","Typography","axios","React","useState","openSnackBar","useStyles","theme","paper","padding","spacing","Enroll","props","username","setUsername","newPassword","setNewPassword","newPasswordConfirmation","setNewPasswordConfirmation","name","setName","email","setEmail","classes","validateForm","errors","push","handleSubmit","e","preventDefault","length","forEach","error","message","type","console","log","post","then","res","status","history","catch"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,mBAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,QAA6B,sBAA7B;;AAEA,MAAMC,SAAS,GAAGb,UAAU,CAAEc,KAAD,KAAY;AACvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADJ;AADgC,CAAZ,CAAD,CAA5B;AAMA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACpC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACa,uBAAD,EAA0BC,0BAA1B,IAAwDd,QAAQ,CAAC,EAAD,CAAtE;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMmB,OAAO,GAAGjB,SAAS,EAAzB;;AAEA,QAAMkB,YAAY,GAAG,MAAM;AACzB,QAAIC,MAAM,GAAG,EAAb;;AACA,QAAIV,WAAW,KAAKE,uBAApB,EAA6C;AAC3CQ,MAAAA,MAAM,CAACC,IAAP,CAAY,4BAAZ;AACD;;AACD,WAAOD,MAAP;AACD,GAND;;AAQA,QAAME,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMJ,MAAM,GAAGD,YAAY,EAA3B;;AACA,QAAIC,MAAM,CAACK,MAAX,EAAmB;AACjBL,MAAAA,MAAM,CAACM,OAAP,CAAgBC,KAAD,IAAW;AACxB3B,QAAAA,YAAY,CAAC;AAAE4B,UAAAA,OAAO,EAAED,KAAX;AAAkBE,UAAAA,IAAI,EAAE;AAAxB,SAAD,CAAZ;AACD,OAFD;AAGD,KAJD,MAIO;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBrB,WAAlB;AACAb,MAAAA,KAAK,CACFmC,IADH,CACS,gCADT,EAC0C;AACtCxB,QAAAA,QADsC;AAEtCM,QAAAA,IAFsC;AAGtCE,QAAAA,KAHsC;AAItCN,QAAAA;AAJsC,OAD1C,EAOGuB,IAPH,CAOSC,GAAD,IAAS;AACbJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;;AACA,YAAIA,GAAG,CAACC,MAAJ,IAAc,GAAlB,EAAuB;AACrBnC,UAAAA,YAAY,CAAC;AAAE4B,YAAAA,OAAO,EAAE,8BAAX;AAA2CC,YAAAA,IAAI,EAAE;AAAjD,WAAD,CAAZ;AACAtB,UAAAA,KAAK,CAAC6B,OAAN,CAAcf,IAAd,CAAmB,cAAnB;AACA;AACD,SAJD,MAIO;AACLrB,UAAAA,YAAY,CAAC;AAAE4B,YAAAA,OAAO,EAAE,sBAAX;AAAmCC,YAAAA,IAAI,EAAE;AAAzC,WAAD,CAAZ;AACD;AACF,OAhBH,EAiBGQ,KAjBH,CAiBUV,KAAD,IAAW;AAChBG,QAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA3B,QAAAA,YAAY,CAAC;AAAE4B,UAAAA,OAAO,EAAE,SAAX;AAAsBC,UAAAA,IAAI,EAAE;AAA5B,SAAD,CAAZ;AACD,OApBH;AAqBD;AACF,GA/BD;;AAitGF;AA0GD;;GA5JuBvB,M;UAONL,S;;;KAPMK,M","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { openSnackBar } from \"../snackBar/SnackBar\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(4),\n  },\n}));\n\nexport default function Enroll(props) {\n  const [username, setUsername] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [newPasswordConfirmation, setNewPasswordConfirmation] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const classes = useStyles();\n\n  const validateForm = () => {\n    let errors = [];\n    if (newPassword !== newPasswordConfirmation) {\n      errors.push(\"The passwords do not match\");\n    }\n    return errors;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const errors = validateForm();\n    if (errors.length) {\n      errors.forEach((error) => {\n        openSnackBar({ message: error, type: \"error\" });\n      });\n    } else {\n      console.log(\"44\", newPassword);\n      axios\n        .post(`http://localhost:3001/register`, {\n          username,\n          name,\n          email,\n          newPassword,\n        })\n        .then((res) => {\n          console.log(res);\n          if (res.status == 200) {\n            openSnackBar({ message: \"User Registration Successful\", type: \"success\" });\n            props.history.push(\"/login/Admin\");\n            return;\n          } else {\n            openSnackBar({ message: \"Authentication Error\", type: \"error\" });\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n          openSnackBar({ message: \"errorss\", type: \"error\" });\n        });\n    }\n  };\n\n  return (\n    //   <Container maxWidth=\"sm\" component=\"main\" className={\"MuiContainer--01\"}>\n    //     <Paper className={classes.paper}>\n    //       <form onSubmit={handleSubmit}>\n    //         <Grid container spacing={2}>\n    //           <Grid item xs={12}>\n    //             <Typography\n    //               component=\"h1\"\n    //               variant=\"h5\"\n    //               align=\"center\"\n    //               color=\"textPrimary\"\n    //               gutterBottom\n    //             >\n    //               Registration of New User\n    //             </Typography>\n    //           </Grid>\n    //           <Grid item xs={12}>\n    //             <FormControl fullWidth required>\n    //               <InputLabel htmlFor=\"name-input\">Full Name</InputLabel>\n    //               <Input\n    //                 id=\"name-input\"\n    //                 value={name}\n    //                 onChange={(e) => setName(e.target.value)}\n    //                 required\n    //               />\n    //             </FormControl>\n    //           </Grid>\n    //           <Grid item xs={12}>\n    //             <FormControl fullWidth required>\n    //               <InputLabel htmlFor=\"username-input\">Select a User Name</InputLabel>\n    //               <Input\n    //                 id=\"username-input\"\n    //                 value={username}\n    //                 onChange={(e) => setUsername(e.target.value)}\n    //                 required\n    //               />\n    //             </FormControl>\n    //           </Grid>\n    //           <Grid item xs={12}>\n    //             <FormControl fullWidth required>\n    //               <InputLabel htmlFor=\"email-input\">Email</InputLabel>\n    //               <Input\n    //                 id=\"email-input\"\n    //                 value={email}\n    //                 onChange={(e) => setEmail(e.target.value)}\n    //                 required\n    //               />\n    //             </FormControl>\n    //           </Grid>\n    //           <Grid item xs={12}>\n    //             <FormControl fullWidth required>\n    //               <InputLabel htmlFor=\"newpassword-input\">Password</InputLabel>\n    //               <Input\n    //                 id=\"newpassword-input\"\n    //                 value={newPassword}\n    //                 type=\"password\"\n    //                 onChange={(e) => setNewPassword(e.target.value)}\n    //                 required\n    //               />\n    //             </FormControl>\n    //           </Grid>\n    //           <Grid item xs={12}>\n    //             <FormControl fullWidth required>\n    //               <InputLabel htmlFor=\"newpassword-confirmation-input\">\n    //                 Confirm Password\n    //               </InputLabel>\n    //               <Input\n    //                 id=\"newpassword-confirmation-input\"\n    //                 value={newPasswordConfirmation}\n    //                 type=\"password\"\n    //                 onChange={(e) => setNewPasswordConfirmation(e.target.value)}\n    //                 required\n    //               />\n    //             </FormControl>\n    //           </Grid>\n    //           <Grid item xs={12}>\n    //             <Button\n    //               type=\"submit\"\n    //               className={\"MuiButton-Full\"}\n    //               variant=\"contained\"\n    //               size=\"large\"\n    //               color=\"primary\"\n    //             >\n    //               Register\n    //             </Button>\n    //           </Grid>\n    //           <Grid item xs={12}>\n    //             <Button\n    //               className={\"MuiButton-Full\"}\n    //               href=\"/login/admin\"\n    //               size=\"large\"\n    //               color=\"primary\"\n    //             >\n    //               Go back to login\n    //             </Button>\n    //           </Grid>\n    //         </Grid>\n    //       </form>\n    //     </Paper>\n    //   </Container>\n    // );\n\n    <div>\n      <h1>Hello whatsapp</h1>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}