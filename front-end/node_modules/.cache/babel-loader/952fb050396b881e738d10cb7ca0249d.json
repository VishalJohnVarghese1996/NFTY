{"ast":null,"code":"var _jsxFileName = \"/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/create/Create.js\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { openSnackBar } from \"../snackBar/SnackBar\";\nimport sessionStorage from '/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/login/LoginAdmin.js';\nimport UserProfile from '../login/SessionDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Main extends React.Component {\n  constructor(_props) {\n    super(_props);\n    this.useStyles = makeStyles(theme => ({\n      paper: {\n        padding: theme.spacing(4)\n      }\n    }));\n    this.userName = UserProfile.getName();\n\n    this.validateForm = () => {\n      let errors = [];\n\n      if (this.title == \"\" || this.description == \"\" || this.price == \"\" || this.copiesCount == \"\" || this.royalties == \"\") {\n        errors.push(\"Please fill all the fields\");\n        console.log(\"Please fill all the fields\");\n      }\n\n      return errors;\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const errors = this.validateForm();\n\n      if (errors.length) {\n        errors.forEach(error => {\n          openSnackBar({\n            message: error,\n            type: \"error\"\n          });\n        });\n      } else {\n        axios.post(`http://localhost:3001/createTokenImage`, {\n          title,\n          userName,\n          description,\n          price,\n          copiesCount,\n          royalties,\n          selectedFile\n        }).then(res => {\n          console.log(res);\n\n          if (res.status === 200) {\n            openSnackBar({\n              message: res.data.message,\n              type: \"success\"\n            });\n            props.history.push(\"/login\");\n            return;\n          } else {\n            openSnackBar({\n              message: \"Authentication Error\",\n              type: \"error\"\n            });\n          }\n        }).catch(error => {\n          console.log(error);\n          openSnackBar({\n            message: \"errorss\",\n            type: \"error\"\n          });\n        });\n      }\n    };\n\n    this.classes = this.useStyles();\n    this.state = {\n      imageURL: '',\n      title: '',\n      description: '',\n      price: '',\n      copiesCount: '',\n      royalties: ''\n    };\n    this.handleUploadImage = this.handleUploadImage.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      component: \"main\",\n      className: \"MuiContainer--01\",\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                component: \"h1\",\n                variant: \"h3\",\n                align: \"center\",\n                color: \"textPrimary\",\n                gutterBottom: true,\n                children: \"Create and Mint NFT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  htmlFor: \"title-input\",\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  id: \"title-input\",\n                  value: title,\n                  onChange: e => setTitle(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  htmlFor: \"description-input\",\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  id: \"description-input\",\n                  value: description,\n                  onChange: e => setDescription(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  htmlFor: \"price-input\",\n                  children: \"Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  id: \"price-input\",\n                  value: price,\n                  onChange: e => setPrice(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  htmlFor: \"copies-count-input\",\n                  children: \"Number of Copies\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  id: \"copies-count-input\",\n                  value: copiesCount,\n                  type: \"text\",\n                  onChange: e => setCopiesCount(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  htmlFor: \"royalties-input\",\n                  children: \"Royalties\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  id: \"royalties-input\",\n                  value: royalties,\n                  type: \"password\",\n                  onChange: e => setRoyalties(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"file\",\n                accept: \"image/*\",\n                type: \"file\",\n                id: \"imgInp\",\n                required: true,\n                onChange: changeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this), isSelected ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Filename: \", selectedFile.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Filetype: \", selectedFile.type]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Size in bytes: \", selectedFile.size]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Select a file to show details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                className: \"MuiButton-Full\",\n                variant: \"contained\",\n                size: \"large\",\n                color: \"primary\",\n                children: \"Create Token\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/create/Create.js"],"names":["makeStyles","Button","Container","FormControl","Grid","Input","InputLabel","Paper","Typography","axios","React","useState","useEffect","openSnackBar","sessionStorage","UserProfile","Main","Component","constructor","props","useStyles","theme","paper","padding","spacing","userName","getName","validateForm","errors","title","description","price","copiesCount","royalties","push","console","log","handleSubmit","e","preventDefault","length","forEach","error","message","type","post","selectedFile","then","res","status","data","history","catch","classes","state","imageURL","handleUploadImage","bind","render","setTitle","target","value","setDescription","setPrice","setCopiesCount","setRoyalties","changeHandler","isSelected","name","size"],"mappings":"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","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { openSnackBar } from \"../snackBar/SnackBar\";\nimport sessionStorage from '/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/login/LoginAdmin.js';\nimport UserProfile from '../login/SessionDetails';\n\n\n\nclass Main extends React.Component {\n  useStyles = makeStyles((theme) => ({\n    paper: {\n      padding: theme.spacing(4),\n    },\n  }));\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      imageURL: '',\n      title: '',\n      description: '',\n      price: '',\n      copiesCount:'',\n      royalties:'',\n    };\n\n    this.handleUploadImage = this.handleUploadImage.bind(this);\n  }\n\n  userName = UserProfile.getName();\n\n  validateForm = () => {\n    let errors = [];\n    if (this.title == \"\" || this.description == \"\" || this.price == \"\" || this.copiesCount == \"\" || this.royalties == \"\") {\n      errors.push(\"Please fill all the fields\");\n      console.log(\"Please fill all the fields\");\n    }\n    return errors;\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const errors = this.validateForm();\n    if (errors.length) {\n      errors.forEach((error) => {\n        openSnackBar({ message: error, type: \"error\" });\n      });\n    } else {\n      axios\n        .post(`http://localhost:3001/createTokenImage`, {\n          title,\n          userName,\n          description,\n          price,\n          copiesCount,\n          royalties,\n          selectedFile\n        })\n        .then((res) => {\n          console.log(res);\n          if (res.status === 200) {\n            openSnackBar({ message: res.data.message, type: \"success\" });\n            props.history.push(\"/login\");\n            return;\n          } else {\n            openSnackBar({ message: \"Authentication Error\", type: \"error\" });\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n          openSnackBar({ message: \"errorss\", type: \"error\" });\n        });\n    }\n  };\n\n\n  // const createPage = () => {\n  //   const [title, setTitle] = useState(\"\");\n  //   const [description, setDescription] = useState(\"\");\n  //   const [price, setPrice] = useState(\"\");\n  //   const [count, setCount] = useState(\"\");\n  //   const [royalties, setRoyalties] = useState(\"\");\n\n    classes = this.useStyles();\n\n    render() {\n    return (\n      <Container maxWidth=\"sm\" component=\"main\" className={\"MuiContainer--01\"}>\n        <Paper className={classes.paper}>\n          <form onSubmit={handleSubmit}>\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <Typography\n                  component=\"h1\"\n                  variant=\"h3\"\n                  align=\"center\"\n                  color=\"textPrimary\"\n                  gutterBottom\n                >\n                  Create and Mint NFT\n                        </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <FormControl fullWidth required>\n                  <InputLabel htmlFor=\"title-input\">Title</InputLabel>\n                  <Input\n                    id=\"title-input\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    required\n                  />\n                </FormControl>\n              </Grid>\n              <Grid item xs={12}>\n                <FormControl fullWidth required>\n                  <InputLabel htmlFor=\"description-input\">Description</InputLabel>\n                  <Input\n                    id=\"description-input\"\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                    required\n                  />\n                </FormControl>\n              </Grid>\n              <Grid item xs={12}>\n                <FormControl fullWidth required>\n                  <InputLabel htmlFor=\"price-input\">Price</InputLabel>\n                  <Input\n                    id=\"price-input\"\n                    value={price}\n                    onChange={(e) => setPrice(e.target.value)}\n                    required\n                  />\n                </FormControl>\n              </Grid>\n              <Grid item xs={12}>\n                <FormControl fullWidth required>\n                  <InputLabel htmlFor=\"copies-count-input\">Number of Copies</InputLabel>\n                  <Input\n                    id=\"copies-count-input\"\n                    value={copiesCount}\n                    type=\"text\"\n                    onChange={(e) => setCopiesCount(e.target.value)}\n                    required\n                  />\n                </FormControl>\n              </Grid>\n              <Grid item xs={12}>\n                <FormControl fullWidth required>\n                  <InputLabel htmlFor=\"royalties-input\">\n                    Royalties\n                          </InputLabel>\n                  <Input\n                    id=\"royalties-input\"\n                    value={royalties}\n                    type=\"password\"\n                    onChange={(e) => setRoyalties(e.target.value)}\n                    required\n                  />\n                </FormControl>\n              </Grid>\n              <Grid item xs={12}>\n                {/* <form runat=\"server\"> */}\n                  <input name=\"file\" accept=\"image/*\" type='file' id=\"imgInp\" required onChange = {changeHandler} />\n                  {isSelected ? (\n                    <div>\n                      <p>Filename: {selectedFile.name}</p>\n                      <p>Filetype: {selectedFile.type}</p>\n                      <p>Size in bytes: {selectedFile.size}</p>\n                    </div>\n                  ) : (\n                    <p>Select a file to show details</p>\n                  )}\n                {/* </form> */}\n              </Grid>\n              <Grid item xs={12}>\n                <Button\n                  type=\"submit\"\n                  className={\"MuiButton-Full\"}\n                  variant=\"contained\"\n                  size=\"large\"\n                  color=\"primary\"\n                >\n                  Create Token\n                        </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n      </Container>\n    );\n  }\n}\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}