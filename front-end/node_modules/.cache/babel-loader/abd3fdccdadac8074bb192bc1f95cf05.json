{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaustubh\\\\EHR\\\\front-end\\\\src\\\\components\\\\login\\\\PatientChangePassword.js\",\n    _s = $RefreshSig$();\n\nimport { makeStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { openSnackBar } from \"../snackBar/SnackBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(4)\n  }\n}));\nexport default function Login(props) {\n  _s();\n\n  const [userid, setUserid] = useState(\"\");\n  const [oldPassword, setOldPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const classes = useStyles();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post(`http://localhost:3001/patientChangePassword`, {\n      userid,\n      password\n    }).then(res => {\n      if (res.status === 200 && res.data.message !== \"Wrong UserID/Password\") {\n        const token = res.data.token;\n        props.setLogin(token);\n        props.history.push(`/patient/${userid}`);\n        return;\n      } else {\n        openSnackBar({\n          message: \"Authentication Error\",\n          type: \"error\"\n        });\n      }\n    }).catch(error => {\n      let errorMessage;\n\n      if (error.response) {\n        errorMessage = error.response.data.message;\n      } else if (error.message) {\n        errorMessage = error.message;\n      } else {\n        errorMessage = \"Authentication Error\";\n      }\n\n      openSnackBar({\n        message: errorMessage,\n        type: \"error\"\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    component: \"main\",\n    className: \"MuiContainer--01\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"h1\",\n              variant: \"h5\",\n              align: \"center\",\n              color: \"textPrimary\",\n              gutterBottom: true,\n              children: \"Please provide userId, Old Password and New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"username-input\",\n                children: \"User ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"userid-input\",\n                value: userid,\n                onChange: e => setUserid(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"password-input\",\n                children: \"Old Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"firstname-input\",\n                value: oldPassword,\n                type: \"password\",\n                onChange: e => setOldPassword(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"password-input\",\n                children: \"New Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"firstname-input\",\n                value: newPassword,\n                type: \"password\",\n                onChange: e => setNewPassword(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"password-input\",\n                children: \"Confirm New Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"firstname-input\",\n                value: confirmPassword,\n                type: \"password\",\n                onChange: e => setConfirmPassword(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"MuiButton-Full\",\n              variant: \"contained\",\n              size: \"large\",\n              color: \"primary\",\n              children: \"Change Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"j/I8K0DiTiyawEna28SHYvxOKiA=\", false, function () {\n  return [useStyles];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Kaustubh/EHR/front-end/src/components/login/PatientChangePassword.js"],"names":["makeStyles","Button","Container","FormControl","Grid","Input","InputLabel","Paper","Typography","axios","React","useState","openSnackBar","useStyles","theme","paper","padding","spacing","Login","props","userid","setUserid","oldPassword","setOldPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","classes","handleSubmit","e","preventDefault","post","password","then","res","status","data","message","token","setLogin","history","push","type","catch","error","errorMessage","response","target","value"],"mappings":"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","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { openSnackBar } from \"../snackBar/SnackBar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nexport default function Login(props) {\r\n  const [userid, setUserid] = useState(\"\");\r\n  const [oldPassword, setOldPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(`http://localhost:3001/patientChangePassword`, {\r\n        userid,\r\n        password,\r\n      })\r\n      .then((res) => {\r\n        if (\r\n          res.status === 200 &&\r\n          res.data.message !== \"Wrong UserID/Password\"\r\n        ) {\r\n          const token = res.data.token;\r\n          props.setLogin(token);\r\n          props.history.push(`/patient/${userid}`);\r\n          return;\r\n        } else {\r\n          openSnackBar({ message: \"Authentication Error\", type: \"error\" });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        let errorMessage;\r\n        if (error.response) {\r\n          errorMessage = error.response.data.message;\r\n        } else if (error.message) {\r\n          errorMessage = error.message;\r\n        } else {\r\n          errorMessage = \"Authentication Error\";\r\n        }\r\n        openSnackBar({ message: errorMessage, type: \"error\" });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" component=\"main\" className={\"MuiContainer--01\"}>\r\n      <Paper className={classes.paper}>\r\n        <form onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Typography\r\n                component=\"h1\"\r\n                variant=\"h5\"\r\n                align=\"center\"\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n              >\r\n                Please provide userId, Old Password and New Password\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl fullWidth required>\r\n                <InputLabel htmlFor=\"username-input\">User ID</InputLabel>\r\n                <Input\r\n                  id=\"userid-input\"\r\n                  value={userid}\r\n                  onChange={(e) => setUserid(e.target.value)}\r\n                  required\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl fullWidth required>\r\n                <InputLabel htmlFor=\"password-input\">Old Password</InputLabel>\r\n                <Input\r\n                  id=\"firstname-input\"\r\n                  value={oldPassword}\r\n                  type=\"password\"\r\n                  onChange={(e) => setOldPassword(e.target.value)}\r\n                  required\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl fullWidth required>\r\n                <InputLabel htmlFor=\"password-input\">New Password</InputLabel>\r\n                <Input\r\n                  id=\"firstname-input\"\r\n                  value={newPassword}\r\n                  type=\"password\"\r\n                  onChange={(e) => setNewPassword(e.target.value)}\r\n                  required\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl fullWidth required>\r\n                <InputLabel htmlFor=\"password-input\">\r\n                  Confirm New Password\r\n                </InputLabel>\r\n                <Input\r\n                  id=\"firstname-input\"\r\n                  value={confirmPassword}\r\n                  type=\"password\"\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                  required\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button\r\n                type=\"submit\"\r\n                className={\"MuiButton-Full\"}\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                color=\"primary\"\r\n              >\r\n                Change Password\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}