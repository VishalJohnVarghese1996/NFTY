{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaustubh\\\\EHR\\\\front-end\\\\src\\\\components\\\\login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core';\nimport { openSnackBar } from '../snackBar/SnackBar';\nimport Paper from '@material-ui/core/Paper';\nimport React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(4)\n  }\n}));\nexport default function Login(props) {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const classes = useStyles();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post(`${process.env.REACT_APP_API_URL}/api/user/login/`, {\n      username,\n      password\n    }).then(res => {\n      if (res.status === 200) {\n        const token = res.data.token;\n        props.setLogin(token);\n        props.history.push(\"/patients\");\n        return;\n      } else {\n        openSnackBar({\n          message: \"Authentication Error\",\n          type: \"error\"\n        });\n      }\n    }).catch(error => {\n      let errorMessage;\n\n      if (error.response) {\n        errorMessage = error.response.data.message;\n      } else if (error.message) {\n        errorMessage = error.message;\n      } else {\n        errorMessage = \"Authentication Error\";\n      }\n\n      openSnackBar({\n        message: errorMessage,\n        type: \"error\"\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    component: \"main\",\n    className: \"MuiContainer--01\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"h1\",\n              variant: \"h5\",\n              align: \"center\",\n              color: \"textPrimary\",\n              gutterBottom: true,\n              children: \"Bienvenido a EHRecords\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"username-input\",\n                children: \"Usuario\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"username-input\",\n                value: username,\n                onChange: e => setUsername(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"password-input\",\n                children: \"Contrase\\xF1a\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"firstname-input\",\n                value: password,\n                type: \"password\",\n                onChange: e => setPassword(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"MuiButton-Full\",\n              variant: \"contained\",\n              size: \"large\",\n              color: \"primary\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"MuiButton-Full\",\n              href: \"/enroll/\",\n              size: \"large\",\n              color: \"primary\",\n              children: \"No registrado? Alistate ahora!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"8kRdqWguv+iIryo5sK7BFzVN7BI=\", false, function () {\n  return [useStyles];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Kaustubh/EHR/front-end/src/components/login/Login.js"],"names":["axios","Button","Container","FormControl","Input","InputLabel","Grid","makeStyles","openSnackBar","Paper","React","useState","Typography","useStyles","theme","paper","padding","spacing","Login","props","username","setUsername","password","setPassword","classes","handleSubmit","e","preventDefault","post","process","env","REACT_APP_API_URL","then","res","status","token","data","setLogin","history","push","message","type","catch","error","errorMessage","response","target","value"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { openSnackBar } from '../snackBar/SnackBar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport React, { useState } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles( theme => ({\r\n    paper: {\r\n        padding: theme.spacing(4),\r\n    }\r\n}));\r\n\r\nexport default function Login(props) {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const classes = useStyles();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        axios.post(`${process.env.REACT_APP_API_URL}/api/user/login/`, {\r\n                username,\r\n                password\r\n            })\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    const token = res.data.token;\r\n                    props.setLogin(token);\r\n                    props.history.push(\"/patients\");\r\n                    return;\r\n                } else {\r\n                    openSnackBar({message: \"Authentication Error\", type: \"error\"});\r\n                }\r\n            })\r\n            .catch(error => {\r\n                let errorMessage;\r\n                if (error.response) {\r\n                    errorMessage = error.response.data.message;\r\n                } else if (error.message) {\r\n                    errorMessage = error.message;\r\n                } else {\r\n                    errorMessage = \"Authentication Error\";\r\n                }\r\n                openSnackBar({message: errorMessage, type: \"error\"});\r\n            });\r\n\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\" component=\"main\" className={\"MuiContainer--01\"}>\r\n            <Paper className={classes.paper}>\r\n                <form onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <Typography component=\"h1\" variant=\"h5\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                                Bienvenido a EHRecords\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth required>\r\n                                <InputLabel htmlFor=\"username-input\">Usuario</InputLabel>\r\n                                <Input \r\n                                    id=\"username-input\" \r\n                                    value={username}\r\n                                    onChange={e => setUsername(e.target.value)}\r\n                                    required/>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControl fullWidth required>\r\n                                <InputLabel htmlFor=\"password-input\">Contraseña</InputLabel>\r\n                                <Input \r\n                                    id=\"firstname-input\" \r\n                                    value={password}\r\n                                    type=\"password\"\r\n                                    onChange={e => setPassword(e.target.value)}\r\n                                    required/>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Button type=\"submit\" className={\"MuiButton-Full\"} variant=\"contained\" size=\"large\" color=\"primary\">\r\n                                Login\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Button className={\"MuiButton-Full\"} href=\"/enroll/\" size=\"large\" color=\"primary\">\r\n                                No registrado? Alistate ahora!\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n        </Container>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}