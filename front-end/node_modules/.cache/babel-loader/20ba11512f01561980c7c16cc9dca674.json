{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kaustubh\\\\EHR\\\\front-end\\\\src\\\\components\\\\doctor\\\\DoctorData.js\",\n    _s = $RefreshSig$();\n\nimport { makeStyles, withStyles } from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport PatientListEHR from \"../patientList/PatientListEHR\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  card: {\n    minWidth: 275,\n    margin: theme.spacing(1)\n  }\n});\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(4)\n  }\n}));\n\nfunction DoctorCard(props) {\n  _s();\n\n  const path = props.location.pathname;\n  const DID = path.slice(path.lastIndexOf(\"/\")).slice(1);\n  const [doctorData, setDoctorData] = useState({});\n  const [isExpanded, setisExpanded] = useState(false);\n  const [patientData, setPatientData] = useState([]);\n  const classes = useStyles();\n  let patData = [];\n  useEffect(() => {\n    let patId;\n    axios.get(`http://localhost:3001/doctor/${DID}`, {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"jwtToken\")\n      }\n    }).then(result => {\n      setDoctorData(result.data[0]);\n    });\n    axios.get(`http://localhost:3001/doctorRelatedToPatient/${DID}`, {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"jwtToken\")\n      }\n    }).then(result => {\n      patId = result.data;\n\n      for (let i = 0; i < patId.length; i++) {\n        axios.get(`http://localhost:3001/patient/${patId[i].PID}`, {\n          headers: {\n            \"x-access-token\": localStorage.getItem(\"jwtToken\")\n          }\n        }).then(result => {\n          patData.push(result.data[0]);\n          setPatientData(patData);\n        });\n      }\n    });\n  }, [DID]);\n\n  const onEHRChange = (PID, e) => {\n    const EHR = e.target.value;\n    axios.post(`http://localhost:3001/patient/updateEHR`, {\n      PID,\n      EHR\n    }, {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"jwtToken\")\n      }\n    }).then(res => {\n      console.log(\"Updated Successfully\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mb: 1,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            gutterBottom: true,\n            children: [\"DID \", doctorData.DID]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h2\",\n            children: [doctorData.FirstName, \" \", doctorData.LastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            children: [\"Specialization: \", doctorData.Specialization]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            children: [\"Address: \", doctorData.Address]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Patients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PatientListEHR, {\n      patients: patientData ? patientData : []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DoctorCard, \"dgZ6Mr+rX0GgyaHaeY001dvBv4E=\", false, function () {\n  return [useStyles];\n});\n\n_c = DoctorCard;\nexport default withStyles(styles, {\n  withTheme: true\n})(DoctorCard);\n\nvar _c;\n\n$RefreshReg$(_c, \"DoctorCard\");","map":{"version":3,"sources":["C:/Users/Kaustubh/EHR/front-end/src/components/doctor/DoctorData.js"],"names":["makeStyles","withStyles","Box","Card","CardContent","Typography","axios","React","useEffect","useState","PatientListEHR","styles","theme","card","minWidth","margin","spacing","useStyles","paper","padding","DoctorCard","props","path","location","pathname","DID","slice","lastIndexOf","doctorData","setDoctorData","isExpanded","setisExpanded","patientData","setPatientData","classes","patData","patId","get","headers","localStorage","getItem","then","result","data","i","length","PID","push","onEHRChange","e","EHR","target","value","post","res","console","log","FirstName","LastName","Specialization","Address","withTheme"],"mappings":"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","sourcesContent":["import { makeStyles, withStyles } from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport PatientListEHR from \"../patientList/PatientListEHR\";\r\n\r\nconst styles = (theme) => ({\r\n  card: {\r\n    minWidth: 275,\r\n    margin: theme.spacing(1),\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nfunction DoctorCard(props) {\r\n  const path = props.location.pathname;\r\n  const DID = path.slice(path.lastIndexOf(\"/\")).slice(1);\r\n  const [doctorData, setDoctorData] = useState({});\r\n  const [isExpanded, setisExpanded] = useState(false);\r\n  const [patientData, setPatientData] = useState([]);\r\n  const classes = useStyles();\r\n  let patData = [];\r\n\r\n  useEffect(() => {\r\n    let patId;\r\n    axios\r\n      .get(`http://localhost:3001/doctor/${DID}`, {\r\n        headers: {\r\n          \"x-access-token\": localStorage.getItem(\"jwtToken\"),\r\n        },\r\n      })\r\n      .then((result) => {\r\n        setDoctorData(result.data[0]);\r\n      });\r\n    axios\r\n      .get(`http://localhost:3001/doctorRelatedToPatient/${DID}`, {\r\n        headers: {\r\n          \"x-access-token\": localStorage.getItem(\"jwtToken\"),\r\n        },\r\n      })\r\n      .then((result) => {\r\n        patId = result.data;\r\n        for (let i = 0; i < patId.length; i++) {\r\n          axios\r\n            .get(`http://localhost:3001/patient/${patId[i].PID}`, {\r\n              headers: {\r\n                \"x-access-token\": localStorage.getItem(\"jwtToken\"),\r\n              },\r\n            })\r\n            .then((result) => {\r\n              patData.push(result.data[0]);\r\n              setPatientData(patData);\r\n            });\r\n        }\r\n      });\r\n  }, [DID]);\r\n\r\n  const onEHRChange = (PID, e) => {\r\n    const EHR = e.target.value;\r\n    axios\r\n      .post(\r\n        `http://localhost:3001/patient/updateEHR`,\r\n        {\r\n          PID,\r\n          EHR,\r\n        },\r\n        {\r\n          headers: {\r\n            \"x-access-token\": localStorage.getItem(\"jwtToken\"),\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        console.log(\"Updated Successfully\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent>\r\n          <Box mb={1}>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              DID {doctorData.DID}\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              {doctorData.FirstName} {doctorData.LastName}\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              Specialization: {doctorData.Specialization}\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              Address: {doctorData.Address}\r\n            </Typography>\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n      <h1>Patients</h1>\r\n      <PatientListEHR patients={patientData ? patientData : []} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(DoctorCard);\r\n"]},"metadata":{},"sourceType":"module"}