[{"/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/index.js":"1","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/serviceWorker.js":"2","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/app/App.js":"3","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/auth/WithAuth.js":"4","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/home/Home.js":"5","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/footer/Footer.js":"6","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/login/LoginDoctor.js":"7","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/login/LoginPatient.js":"8","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/login/PatientChangePassword.js":"9","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/snackBar/SnackBar.js":"10","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/aboutUs/AboutUs.js":"11","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/enroll/Enroll.js":"12","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/login/LoginAdmin.js":"13","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/navBar/NavBar.js":"14","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/patients/Patients.js":"15","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/config.js":"16","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/transfer/Transfer.js":"17","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/items/Items.js":"18","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/buy/Buy.js":"19","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/create/Create.js":"20","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/buy/Homepage.js":"21","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/items/TransferItem.js":"22","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/items/Homepage.js":"23","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/items/Token.jsx":"24"},{"size":474,"mtime":1622362225815,"results":"25","hashOfConfig":"26"},{"size":4951,"mtime":1622362225815,"results":"27","hashOfConfig":"26"},{"size":4150,"mtime":1623569127362,"results":"28","hashOfConfig":"26"},{"size":361,"mtime":1622362225815,"results":"29","hashOfConfig":"26"},{"size":691,"mtime":1622469648829,"results":"30","hashOfConfig":"26"},{"size":860,"mtime":1622362225815,"results":"31","hashOfConfig":"26"},{"size":2349,"mtime":1622362225815,"results":"32","hashOfConfig":"26"},{"size":3610,"mtime":1622362225815,"results":"33","hashOfConfig":"26"},{"size":4689,"mtime":1622362225815,"results":"34","hashOfConfig":"26"},{"size":2588,"mtime":1622362225815,"results":"35","hashOfConfig":"26"},{"size":1431,"mtime":1623568269996,"results":"36","hashOfConfig":"26"},{"size":5840,"mtime":1623568270000,"results":"37","hashOfConfig":"26"},{"size":4211,"mtime":1623568270000,"results":"38","hashOfConfig":"26"},{"size":3420,"mtime":1623569120482,"results":"39","hashOfConfig":"26"},{"size":3848,"mtime":1623568270000,"results":"40","hashOfConfig":"26"},{"size":8948,"mtime":1623568270000,"results":"41","hashOfConfig":"26"},{"size":4948,"mtime":1623392620490,"results":"42","hashOfConfig":"26"},{"size":3411,"mtime":1623568270000,"results":"43","hashOfConfig":"26"},{"size":4615,"mtime":1623568269996,"results":"44","hashOfConfig":"26"},{"size":7763,"mtime":1623568269996,"results":"45","hashOfConfig":"26"},{"size":2441,"mtime":1623568269996,"results":"46","hashOfConfig":"26"},{"size":3206,"mtime":1623568796969,"results":"47","hashOfConfig":"26"},{"size":3664,"mtime":1623568270000,"results":"48","hashOfConfig":"26"},{"size":218,"mtime":1622362225815,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"pactqr",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"52"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"52"},"/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/index.js",[],["112","113"],"/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/serviceWorker.js",[],"/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/app/App.js",[],"/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/auth/WithAuth.js",[],"/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/home/Home.js",[],"/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/footer/Footer.js",[],"/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/login/LoginDoctor.js",["114","115","116","117","118","119","120","121","122","123","124","125","126"],"import { Container } from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from \"@material-ui/styles\";\nimport axios from \"axios\";\nimport React from \"react\";\n\n\n// import history from './history';\n\n// import Create from '../create/Create';\nimport { BrowserRouter as Router, Route, Switch, Link, Redirect, useHistory } from \"react-router-dom\";\n\n// import CreatePage from './Create';\n\n\nconst styles = (theme) => ({\n  box: {\n    margin: theme.spacing(1),\n  },\n});\n\nclass Patients extends React.Component {\n\n  nextPath(path) {\n    this.props.history.push(path);\n    \n  }\n\n\n\n  render() {\n\n    return (\n\n      // <Router>\n\n      //   <Route path=\"/\" component={CreatePage}/>\n\n      // </Router>\n\n      <button onClick={() => this.nextPath('/login/doctor')}>\n        change path\n      </button>\n      \n\n\n\n\n\n      // </div>\n    );\n  }\n}\nexport default withStyles(styles, { withTheme: true })(Patients);\n\n\n\n// <div>\n\n{/* <Grid\ncontainer\nspacing={0}\ndirection=\"column\"\nalignItems=\"center\"\njustify=\"center\"\nstyle={{ minHeight: '100vh' }}\n>\n\n<Grid item xs={3}>\n\n\n  <a href=\"/create\">\n    <Button\n      type=\"submit\"\n      className={\"MuiButton-Full\"}\n      variant=\"contained\"\n      size=\"large\"\n      color=\"primary\"\n      style={{ margin: '15px', height: '70px', width: '500px', fontSize: '30px' }}\n    >Create Token\n  </Button>\n  </a>\n\n\n  <a href=\"/buy\">\n    <Button\n      type=\"submit\"\n      className={\"MuiButton-Full\"}\n      variant=\"contained\"\n      size=\"large\"\n      color=\"primary\"\n      style={{ margin: '15px', height: '70px', width: '500px', fontSize: '30px' }}\n    >Buy Token\n  </Button>\n  </a>\n\n\n\n  <a href=\"/transfer\">\n    <Button\n      type=\"submit\"\n      className={\"MuiButton-Full\"}\n      variant=\"contained\"\n      size=\"large\"\n      color=\"primary\"\n      style={{ margin: '15px', height: '70px', width: '500px', fontSize: '30px' }}\n    >Transfer Token\n  </Button>\n  </a>\n\n  <a href=\"/items\">\n    <Button\n      type=\"submit\"\n      className={\"MuiButton-Full\"}\n      variant=\"contained\"\n      size=\"large\"\n      color=\"primary\"\n      style={{ margin: '15px', height: '70px', width: '500px', fontSize: '30px' }}\n    >My Items\n  </Button>\n  </a>\n\n</Grid>\n\n</Grid> */}","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/login/LoginPatient.js",[],"/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/login/PatientChangePassword.js",[],"/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/snackBar/SnackBar.js",[],"/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/aboutUs/AboutUs.js",["127"],"import { Container } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nexport default function AboutUs() {\n  return (\n    <Container maxWidth=\"sm\" component=\"main\" className={\"MuiContainer--01\"}>\n      <Typography\n        component=\"h1\"\n        variant=\"h2\"\n        align=\"center\"\n        color=\"textPrimary\"\n        gutterBottom\n      >\n        About Us\n      </Typography>\n      <Typography\n        color=\"textPrimary\"\n        component=\"h3\"\n        variant=\"h5\"\n        align=\"center\"\n        gutterBottom\n      >\n        BITS PILANI\n      </Typography>\n\n      <Typography color=\"textSecondary\"  color=\"textPrimary\" component=\"h3\" variant=\"h5\" align=\"justify\">\n        We are a team of passionate engineers who are looking forward to\n        address one of the most discussed problem in the world of digital art.\n        We believe in technology and we aim to  build simple and precise application.\n        Our platform NFTY focuses on digital art management which gives its\n        users a transparent platform to buy, transfer and sell the digital\n        arts. We have selected the most suitable technology which is\n        blockchain to address this particular issue. Blockchain can\n        eliminate the known issues which are present in the digital art\n        world right now. We focus on Transparency and simplicity.\n      </Typography>\n    </Container>\n  );\n}\n","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/enroll/Enroll.js",["128","129"],"import { makeStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { openSnackBar } from \"../snackBar/SnackBar\";\n\nimport Web3 from 'web3'\nimport { TODO_LIST_ABI, TODO_LIST_ADDRESS } from '../../config'\n\nconst web3 = new Web3(Web3.givenProvider);\nconst NftContract = new web3.eth.Contract(TODO_LIST_ABI, TODO_LIST_ADDRESS);\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(4),\n  },\n}));\n\nexport default function Enroll(props) {\n  const [username, setUsername] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [newPasswordConfirmation, setNewPasswordConfirmation] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const classes = useStyles();\n\n  const validateForm = () => {\n    let errors = [];\n    if (newPassword !== newPasswordConfirmation) {\n      errors.push(\"The passwords do not match\");\n    }\n    return errors;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const errors = validateForm();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    if (errors.length) {\n      errors.forEach((error) => {\n        openSnackBar({ message: error, type: \"error\" });\n      });\n    } else {\n      console.log(\"44\", newPassword);\n      axios\n        .post(`http://localhost:3001/register`, {\n          username,\n          name,\n          email,\n          newPassword,\n          account,\n        })\n        .then((res) => {\n          console.log(res);\n          if (res.status == 200) {\n            openSnackBar({ message: \"User Registration Successful\", type: \"success\" });\n            props.history.push(\"/login/Admin\");\n            return;\n          } else {\n            openSnackBar({ message: \"Authentication Error\", type: \"error\" });\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n          openSnackBar({ message: \"errorss\", type: \"error\" });\n        });\n    }\n  };\n\n  return (\n    <Container maxWidth=\"sm\" component=\"main\" className={\"MuiContainer--01\"}>\n      <Paper className={classes.paper}>\n        <form onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography\n                component=\"h1\"\n                variant=\"h5\"\n                align=\"center\"\n                color=\"textPrimary\"\n                gutterBottom\n              >\n                Registration of New User\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth required>\n                <InputLabel htmlFor=\"name-input\">Full Name</InputLabel>\n                <Input\n                  id=\"name-input\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                  required\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth required>\n                <InputLabel htmlFor=\"username-input\">Select a User Name</InputLabel>\n                <Input\n                  id=\"username-input\"\n                  value={username}\n                  onChange={(e) => setUsername(e.target.value)}\n                  required\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth required>\n                <InputLabel htmlFor=\"email-input\">Email</InputLabel>\n                <Input\n                  id=\"email-input\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  required\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth required>\n                <InputLabel htmlFor=\"newpassword-input\">Password</InputLabel>\n                <Input\n                  id=\"newpassword-input\"\n                  value={newPassword}\n                  type=\"password\"\n                  onChange={(e) => setNewPassword(e.target.value)}\n                  required\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth required>\n                <InputLabel htmlFor=\"newpassword-confirmation-input\">\n                  Confirm Password\n                </InputLabel>\n                <Input\n                  id=\"newpassword-confirmation-input\"\n                  value={newPasswordConfirmation}\n                  type=\"password\"\n                  onChange={(e) => setNewPasswordConfirmation(e.target.value)}\n                  required\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <Button\n                type=\"submit\"\n                className={\"MuiButton-Full\"}\n                variant=\"contained\"\n                size=\"large\"\n                color=\"primary\"\n              >\n                Register\n              </Button>\n            </Grid>\n            <Grid item xs={12}>\n              <Button\n                className={\"MuiButton-Full\"}\n                href=\"/login/admin\"\n                size=\"large\"\n                color=\"primary\"\n              >\n                Go back to login\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </Container>\n  );\n}","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/login/LoginAdmin.js",["130"],"import { makeStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { openSnackBar } from \"../snackBar/SnackBar\";\n\nimport Web3 from 'web3'\nimport { TODO_LIST_ABI, TODO_LIST_ADDRESS } from '../../config'\n\nconst web3 = new Web3(Web3.givenProvider);\nconst NftContract = new web3.eth.Contract(TODO_LIST_ABI, TODO_LIST_ADDRESS);\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(4),\n  },\n}));\n\nexport default function Login(props) {  \n  const [username, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const classes = useStyles();\n\n  \n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n\n    axios\n      .post(`http://localhost:3001/loginAdmin/`, {\n        username,\n        password,\n      })\n      .then((res) => {\n        if (\n          res.status === 200 &&\n          res.data.message !== \"Wrong UserID/Password\"\n        ) {\n          const token = res.data.token;\n          props.setLogin(token);\n          sessionStorage.setItem('Address', account);\n          console.log(username);\n          props.history.push(\"/patients\");\n          return;\n        } else {\n          openSnackBar({ message: \"Authentication Error\", type: \"error\" });\n        }\n      })\n      .catch((error) => {\n        let errorMessage;\n        if (error.response) {\n          errorMessage = error.response.data.message;\n        } else if (error.message) {\n          errorMessage = error.message;\n        } else {\n          errorMessage = \"Authentication Error\";\n        }\n        openSnackBar({ message: errorMessage, type: \"error\" });\n      });\n  };\n\n  return (\n    <Container maxWidth=\"sm\" component=\"main\" className={\"MuiContainer--01\"}>\n      <Paper className={classes.paper}>\n        <form onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography\n                component=\"h1\"\n                variant=\"h5\"\n                align=\"center\"\n                color=\"textPrimary\"\n                gutterBottom\n              >\n                Please provide user-name and password\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth required>\n                <InputLabel htmlFor=\"username-input\">User Name</InputLabel>\n                <Input\n                  id=\"userid-input\"\n                  value={username}\n                  onChange={(e) => setUserName(e.target.value)}\n                  required\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth required>\n                <InputLabel htmlFor=\"password-input\">Password</InputLabel>\n                <Input\n                  id=\"firstname-input\"\n                  value={password}\n                  type=\"password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                  required\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <Button\n                type=\"submit\"\n                className={\"MuiButton-Full\"}\n                variant=\"contained\"\n                size=\"large\"\n                color=\"primary\"\n              >\n                Login\n              </Button>\n            </Grid>\n            <Grid item xs={12}>\n              <Button\n                className={\"MuiButton-Full\"}\n                href=\"/enroll/\"\n                size=\"large\"\n                color=\"primary\"\n              >\n                Not Registered? Register now!\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </Container>\n  );\n}\n","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/navBar/NavBar.js",["131"],"import AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { default as React, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n// import Popup from \"../popup-login/popup.js\";\nimport logo1 from '../../logo1.svg';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    borderTop: \"1px\",\n  },\n  toolbar: {\n    flexWrap: \"wrap\",\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n}));\n\nfunction NavBar(props) {\n  const classes = useStyles();\n  const [displayPopup, setDisplayPopup] = useState(false);\n\n  const handleLogout = () => {\n    props.setLogout();\n    props.history.push(\"/\");\n  };\n\n  return (\n    <div>\n      {displayPopup}\n      <AppBar\n        position=\"static\"\n        color=\"default\"\n        elevation={0}\n        className={classes.appBar}\n      >\n        <Toolbar className={classes.toolbar}>\n          <Typography\n            variant=\"h5\"\n            color=\"inherit\"\n            noWrap\n            className={classes.toolbarTitle}\n          >\n            <img height= '100px' width= '100px' src={logo1} alt=\"My logo\" />\n          </Typography>\n          <nav>\n            {props.loggedIn ? (\n              <Link\n                variant=\"button\"\n                color=\"textPrimary\"\n                href=\"/patients \"\n                className={classes.link}\n              >\n                Home\n              </Link>\n            ) : (\n              <Link\n                variant=\"button\"\n                color=\"textPrimary\"\n                href=\"/\"\n                className={classes.link}\n              >\n                Home\n              </Link>\n            )}\n            <Link\n              variant=\"button\"\n              color=\"textPrimary\"\n              href=\"/aboutus\"\n              className={classes.link}\n            >\n              About Us\n            </Link>\n          </nav>\n\n          {props.loggedIn ? (\n            <Button\n              color=\"primary\"\n              variant=\"outlined\"\n              onClick={handleLogout}\n              className={classes.link}\n            >\n              Logout\n            </Button>\n          ) : (\n            <a href=\"/login/admin\">\n              <Button\n                color=\"primary\"\n                variant=\"outlined\"\n                className={classes.link}\n              >\n                Login\n            </Button>\n            </a>\n\n          )}\n\n          {props.loggedIn ? (\n            null\n          ) : (\n            <a href=\"/enroll\">\n              <Button\n                color=\"primary\"\n                variant=\"outlined\"\n                className={classes.link}\n              >\n                SignUp\n            </Button>\n            </a>\n\n          )}\n\n          {props.loggedIn ? (\n            <a href=\"/profile\">\n              <Button\n                color=\"primary\"\n                variant=\"outlined\"\n                className={classes.link}\n              >\n                Profile\n            </Button>\n            </a>\n          ) : (\n            null\n\n          )}\n\n\n\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\nexport default withRouter(NavBar);\n","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/patients/Patients.js",["132","133","134","135","136","137"],"import { Container } from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from \"@material-ui/styles\";\nimport axios from \"axios\";\nimport React from \"react\";\n\nimport Create from '../create/Create'\nimport Buy from '../buy/Buy'\nimport Transfer from '../transfer/Transfer'\nimport Items from '../items/Items'\nimport { useHistory } from 'react-router'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nconst styles = (theme) => ({\n  box: {\n    margin: theme.spacing(1),\n  },\n});\n\n\nclass Patients extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      addingPatient: 0,\n      createDown: false,\n      buyDown: false,\n      itemsDown: false,\n    }\n    this.sayHello = this.sayHello.bind(this);\n    this.sayBuy = this.sayBuy.bind(this);\n    this.sayItems = this.sayItems.bind(this);\n    sessionStorage.setItem('patientsOn', true);\n  }\n\n\n  sayHello() {\n    this.setState({ buyDown: false });\n    this.setState({ itemsDown: false });\n    this.setState({ createDown: !this.state.createDown });\n  }\n\n  sayBuy() {\n    this.setState({ createDown: false });\n    this.setState({ itemsDown: false });\n    this.setState({ buyDown: !this.state.buyDown });\n    // alert(this.state.buyDown);\n  }\n\n  sayItems() {\n    this.setState({ createDown: false });\n    this.setState({ buyDown: false });\n    this.setState({ itemsDown: !this.state.itemsDown });\n    // alert(this.state.buyDown);\n  }\n\n\n\n  render() {\n\n    // console.log(sessionStorage.getItem('UserId'))\n    return (\n      <Router path=\"/patients\">\n\n\n        <Grid\n          container\n          spacing={0}\n          direction=\"row\"\n        >\n\n          <Link to=\"/create\">\n            <Button\n              type=\"submit\"\n              className={\"MuiButton-Full\"}\n              variant=\"contained\"\n              size=\"large\"\n              color=\"primary\"\n              onClick={this.sayHello}\n              style={{ fontFamily: 'Patrick Hand SC', margin: '15px 20px 20px 145px', height: '70px', width: '500px', fontSize: '30px' }}\n            >Create Token\n            </Button>\n\n          </Link>\n\n\n          <Link to=\"/buy\">\n            <Button\n              type=\"submit\"\n              className={\"MuiButton-Full\"}\n              variant=\"contained\"\n              size=\"large\"\n              color=\"primary\"\n              onClick={this.sayBuy}\n              style={{ fontFamily: 'Patrick Hand SC', margin: '15px', height: '70px', width: '500px', fontSize: '30px' }}\n            >Buy Token\n            </Button>\n          </Link>\n\n          <Link to=\"/items\">\n            <Button\n              type=\"submit\"\n              className={\"MuiButton-Full\"}\n              variant=\"contained\"\n              size=\"large\"\n              color=\"primary\"\n              onClick={this.sayItems}\n              style={{ fontFamily: 'Patrick Hand SC', margin: '15px', height: '70px', width: '500px', fontSize: '30px' }}\n            >My Items\n            </Button>\n          </Link>\n\n          <Switch>\n            <Route path=\"/create\">\n              {this.state.createDown ? (\n                <Create />\n              ) : (\n                null\n              )}\n            </Route>\n            <Route path=\"/buy\">\n              {this.state.buyDown ? (\n                <Buy />\n              ) : (\n                null\n              )}\n            </Route>\n            <Route path=\"/items\">\n              {this.state.itemsDown ? (\n                <Items />\n              ) : (\n                null\n              )}\n            </Route>\n          </Switch>\n        </Grid>\n\n      </Router>\n\n\n    );\n\n  }\n\n}\n\nexport default withStyles(styles, { withTheme: true })(Patients);","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/config.js",[],"/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/transfer/Transfer.js",["138"],"import Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { openSnackBar } from \"../snackBar/SnackBar\";\n\nimport { makeStyles } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: theme.spacing(4),\n    },\n}));\n\n\n\nconst TransferPage = () => {\n    const [userid, setUserid] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const classes = useStyles();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        axios\n            .post(`http://localhost:3001/loginAdmin/`, {\n                userid,\n                password,\n            })\n            .then((res) => {\n                if (\n                    res.status === 200 &&\n                    res.data.message !== \"Wrong UserID/Password\"\n                ) {\n                    const token = res.data.token;\n                    // props.setLogin(token);\n                    // props.history.push(\"/patients\");\n                    return;\n                } else {\n                    openSnackBar({ message: \"Authentication Error\", type: \"error\" });\n                }\n            })\n            .catch((error) => {\n                let errorMessage;\n                if (error.response) {\n                    errorMessage = error.response.data.message;\n                } else if (error.message) {\n                    errorMessage = error.message;\n                } else {\n                    errorMessage = \"Authentication Error\";\n                }\n                openSnackBar({ message: errorMessage, type: \"error\" });\n            });\n    };\n\n    return (\n        <Container maxWidth=\"sm\" component=\"main\" className={\"MuiContainer--01\"}>\n            <Paper className={classes.paper}>\n                <form onSubmit={handleSubmit}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <Typography\n                                component=\"h1\"\n                                variant=\"h5\"\n                                align=\"center\"\n                                color=\"textPrimary\"\n                                gutterBottom\n                            >\n                                Please provide userID and password\n                </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormControl fullWidth required>\n                                <InputLabel htmlFor=\"username-input\">User ID</InputLabel>\n                                <Input\n                                    id=\"userid-input\"\n                                    value={userid}\n                                    onChange={(e) => setUserid(e.target.value)}\n                                    required\n                                />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormControl fullWidth required>\n                                <InputLabel htmlFor=\"password-input\">Password</InputLabel>\n                                <Input\n                                    id=\"firstname-input\"\n                                    value={password}\n                                    type=\"password\"\n                                    onChange={(e) => setPassword(e.target.value)}\n                                    required\n                                />\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button\n                                type=\"submit\"\n                                className={\"MuiButton-Full\"}\n                                variant=\"contained\"\n                                size=\"large\"\n                                color=\"primary\"\n                            >\n                                Login\n                </Button>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button\n                                className={\"MuiButton-Full\"}\n                                href=\"/enroll/\"\n                                size=\"large\"\n                                color=\"primary\"\n                            >\n                                Not Registered? Register now!\n                </Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </Paper>\n        </Container>\n    );\n\n};\n\nexport default TransferPage;\n\n\n\n","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/items/Items.js",["139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156"],"import React, { useState, useEffect } from 'react';\n\nimport './App.css';\nimport Axios from 'axios';\n// import Web3 from 'web3';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Header from './Token'\nimport Homepage from './Homepage'\n\nimport TransferItem from './TransferItem'\n\nimport Web3 from 'web3'\nimport { TODO_LIST_ABI, TODO_LIST_ADDRESS } from '../../config'\n\nconst web3 = new Web3(Web3.givenProvider);\nconst NftContract = new web3.eth.Contract(TODO_LIST_ABI, TODO_LIST_ADDRESS);\n\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        height: 140,\n    },\n});\n\n\nfunction ItemsPage() {\n    const [value, setValue] = useState(null)\n    const [componentToRender, setComponentToRender] = useState(null)\n    const [movieReviewList, setReviewList] = useState([])\n    const [tokenUri, setTokenUri] = useState(\"\");\n\n    const handleEvent = (button, imagVal) => {\n        setValue(button);\n        setComponentToRender(value);\n        sessionStorage.setItem('userImage', imagVal);\n    };\n\n    useEffect(() => {\n\n        Axios.get(`http://localhost:3001/api/get${sessionStorage.getItem(\"Address\")}`).then((response) => {\n            setReviewList(response.data);\n        })\n    }, [])\n\n\n    function transfer() {\n        var receiverAddress = prompt(\"Enter public address of reciver.\");\n\n    }\n\n    const renderComponent = () => {\n        switch (componentToRender) {\n            case 1:\n                return <Homepage />;\n            case 2:\n                return <TransferItem />\n            default://replaced 'else' with 'default'\n                return (<div>\n                    <h1>Welcome to Basic Page</h1>\n\n                    {movieReviewList.map((val) => {\n\n                        return (\n                            <div class=\"card\">\n                                <div class=\"card-image\">\n                                    <img src={'http://localhost:3001/imgMy/' + val.token_id} alt=\"hey\" id=\"img\" onClick={() => handleEvent(1, val.token_id)}>\n                                    </img>\n                                </div>\n                                <div class=\"card-text\">\n                                    <span class=\"date\">Got on {val.date}</span>\n                                    <h2>Title : {val.title}</h2>\n                                    <h2>Price : {val.price}eth</h2>\n                                    <h2>Token ID: {val.token_id}</h2>\n                                </div>\n                                <div class=\"card-stat\">\n                                    <button class=\"transferbtn\" onClick={() => handleEvent(2, val.token_id)}>TRANSFER</button>\n                                </div>\n                            </div>\n                        )\n\n                    })}\n                </div>);\n        }\n    }\n\n    return (\n\n        <div>\n            {renderComponent()}\n        </div>\n\n    )\n}\n\nexport default ItemsPage;","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/buy/Buy.js",["157","158","159","160","161","162","163","164","165","166","167","168","169"],"import React, { useState, useEffect } from 'react';\n\nimport './App.css';\nimport Axios from 'axios';\n// import Web3 from 'web3';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n// import Header from './Token'\nimport Homepage from './Homepage'\n\nimport Web3 from 'web3'\nimport { TODO_LIST_ABI, TODO_LIST_ADDRESS } from '../../config'\n\nconst web3 = new Web3(Web3.givenProvider);\nconst NftContract = new web3.eth.Contract(TODO_LIST_ABI, TODO_LIST_ADDRESS);\n\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        height: 140,\n    },\n});\n\n\nfunction ItemsPage() {\n    const [value, setValue] = useState(null)\n    const [componentToRender, setComponentToRender] = useState(null)\n    const [movieReviewList, setReviewList] = useState([])\n\n    const handleEvent = (button, imagVal) => {\n        setValue(button);\n        setComponentToRender(value, imagVal);\n        sessionStorage.setItem('userImage', imagVal);\n    };\n\n\n    useEffect(() => {\n\n        Axios.get(`http://localhost:3001/api/buy${sessionStorage.getItem(\"Address\")}`).then((response) => {\n            setReviewList(response.data);\n        })\n    }, [])\n\n\n    const buyToken = async (e) => {\n        e.preventDefault()\n\n        const accounts = await window.ethereum.enable();\n        const account = accounts[0];\n\n        // const gas = await HelloContract.methods.sendBal('0x9c9e37934CC8Dd832E8C2406324Dd04D5CdE715f').estimateGas();\n\n        const gas = 7000000;\n\n        // call backend api and get owner or seller address of this token id\n        const formData = new FormData();\n        formData.append('token_id', e.target.value);\n\n        var owner;\n        var price;\n\n        Axios.post(\"http://localhost:3001/api/getBuyDetails\", formData).then(async (response) => {\n            // setReviewList(response.data);\n            owner = response.data.address;\n            price = response.data.price;\n\n            const result = await NftContract.methods\n                .buyNft(owner, e.target.value)\n                .send({ from: account, gas, value: web3.utils.toWei(price.toString(), \"ether\") });\n\n\n            const formData = new FormData();\n            formData.append('newOwner', account);\n            formData.append('action', \"bought\");\n            formData.append('txHash', result.transactionHash);\n\n            Axios.post(`http://localhost:3001/api/transferToken${e.target.value}`, formData).then(res => {\n                //Now do what you want with the response;\n            })\n        })\n    }\n\n    const renderComponent = () => {\n        switch (componentToRender) {\n            case 1:\n                return <Homepage />;\n            default://replaced 'else' with 'default'\n                return (<div>\n                    <h1>Welcome to Items Page</h1>\n\n\n                    {movieReviewList.map((val) => {\n\n                        return (\n                            <div class=\"card\">\n                                <div class=\"card-image\">\n                                    <img src={'http://localhost:3001/imgBuy/' + val.token_id} alt=\"hey\" id=\"img\" onClick={() => handleEvent(1, val.token_id)}>\n                                    </img>\n                                </div>\n                                <div class=\"card-text\">\n                                    <span class=\"date\">Got on {val.date}</span>\n                                    <h2>Title : {val.title}</h2>\n                                    <h2>Price : {val.price}eth</h2>\n                                    <h2>Token ID: {val.token_id}</h2>\n                                </div>\n                                <div class=\"card-stat\">\n                                    <button class=\"buybtn\" value={val.token_id} onClick={e => buyToken(e, \"value\")}>BUY</button>\n\n                                </div>\n                            </div>\n\n\n                        )\n\n\n                    })}\n                </div>);\n        }\n    }\n\n    return (\n\n        <div>\n            <div>\n\n            </div>\n            {renderComponent()}\n        </div>\n\n\n    )\n}\n\nexport default ItemsPage;","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/create/Create.js",["170","171","172","173"],"import { makeStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Axios from 'axios';\nimport React, { useState, useEffect } from \"react\";\n\nimport { useForm } from 'react-hook-form';\nimport { openSnackBar } from \"../snackBar/SnackBar\";\n// import sessionStorage from '/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/login/LoginAdmin.js';\n// import UserProfile from '../login/SessionDetails';\n\nimport Web3 from 'web3'\nimport { TODO_LIST_ABI, TODO_LIST_ADDRESS } from '../../config'\n\nconst web3 = new Web3(Web3.givenProvider);\nconst NftContract = new web3.eth.Contract(TODO_LIST_ABI, TODO_LIST_ADDRESS);\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(4),\n  },\n}));\n\nexport default function CreatePage(props) {\n  const [selectedFile, setSelectedFile] = useState();\n  const [isSelected, setIsSelected] = useState(false);\n\n  // baseuri\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [copiesCount, setCopiesCount] = useState(\"\");\n  const [royalties, setRoyalties] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [image, setImage] = useState(null);\n  // const [tokenArray, setTokenArray] = useState([]);\n\n  const changeHandler = (event) => {\n    setSelectedFile(event.target.files[0]);\n    setIsSelected(true);\n  };\n\n  const classes = useStyles();\n\n  // useEffect(() => {\n  //   console.log(\"====\");\n  // })\n\n  const { register, handleSubmit } = useForm()\n\n  const onSubmit = async (data, event) => {\n\n    event.preventDefault();\n\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n\n\n    // const gas = await HelloContract.methods.sendBal('0x9c9e37934CC8Dd832E8C2406324Dd04D5CdE715f').estimateGas();\n\n    const gas = 7000000;\n\n\n    // , value:web3.utils.toWei(\"0.5\", \"ether\")\n\n    var baseURI = '{'\n      + '\"title\" : ' + title + ','\n      + '\"description\"  : ' + description + ','\n      + '\"price\" : ' + price + ','\n      + '\"copiesCount\" : ' + copiesCount + ','\n      + '\"royalties\" : ' + royalties\n      + '}';\n\n      const result = await NftContract.methods\n      .mintNft(baseURI, copiesCount, price, royalties)\n      .send({ from: account, gas });\n\n      console.log(result.transactionHash)\n\n\n      var tokenArray = new Array(result.events.Transfer.length);\n      var i;\n      for (i = 0; i < result.events.Transfer.length; i++) {\n        console.log(result.events.Transfer[i].returnValues.tokenId);\n        tokenArray[i] = result.events.Transfer[i].returnValues.tokenId;\n      }\n\n\n    setImage(data.pic[0]);\n\n    const formData = new FormData();\n    formData.append('file', data.pic[0]);\n    formData.append('title', title); \n    // formData.append('description', description); \n    formData.append('price', price); \n    // formData.append('copiesCount', copiesCount); \n    // formData.append('royalties', royalties); \n    formData.append('owner', account);\n    formData.append('action', \"minted\");\n    formData.append('txHash',result.transactionHash);\n    formData.append('tokenArray', JSON.stringify(tokenArray));\n  \n\n    Axios.post(\"http://localhost:3001/api/createTokenImage\", formData).then(res => {\n      //Now do what you want with the response;\n    })\n  }\n\n  return (\n    <Container maxWidth=\"sm\" component=\"main\" className={\"MuiContainer--01\"}>\n      <Paper className={classes.paper}>\n        {/* <form onSubmit={handleSubmit}> */}\n        <form onSubmit={handleSubmit(onSubmit)}>\n\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography\n                component=\"h1\"\n                variant=\"h3\"\n                align=\"center\"\n                color=\"textPrimary\"\n                gutterBottom\n              >\n                Create and Mint NFT\n                        </Typography>\n            </Grid>\n\n            <Grid item xs={12}>\n              <FormControl fullWidth required>\n                <InputLabel htmlFor=\"title-input\">Title</InputLabel>\n                <Input\n                  id=\"title-input\"\n                  // value={title}\n                  name=\"title\"\n                  onChange={(e) => setTitle(e.target.value)}\n                  required\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth required>\n                <InputLabel htmlFor=\"description-input\">Description</InputLabel>\n                <Input\n                  id=\"description-input\"\n                  // value={description}\n                  name=\"description\"\n                  onChange={(e) => setDescription(e.target.value)}\n                  required\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth required>\n                <InputLabel htmlFor=\"price-input\">Price</InputLabel>\n                <Input\n                  id=\"price-input\"\n                  name=\"price\"\n                  onChange={(e) => setPrice(e.target.value)}\n                  // value={price}\n                  required\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth required>\n                <InputLabel htmlFor=\"copies-count-input\">Number of Copies</InputLabel>\n                <Input\n                  id=\"copies-count-input\"\n                  // value={copiesCount}\n                  name=\"copiesCount\"\n                  onChange={(e) => setCopiesCount(e.target.value)}\n                  type=\"text\"\n                  required\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth required>\n                <InputLabel htmlFor=\"royalties-input\">\n                  Royalties\n                          </InputLabel>\n                <Input\n                  id=\"royalties-input\"\n                  // value={royalties}\n                  name=\"royalties\"\n                  onChange={(e) => setRoyalties(e.target.value)}\n                  type=\"text\"\n                  required\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              {/* <form runat=\"server\"> */}\n              <input\n                // ref={register}\n                {...register('pic')}\n                type=\"file\"\n                id=\"pic\"\n                // name=\"pic\"\n              // onChange={(e) => setImage(e.target.files[0])}\n              // onChange={sayhey}\n              />\n\n              {isSelected ? (\n                <div>\n                  <p>Filename: {selectedFile.name}</p>\n                  <p>Filetype: {selectedFile.type}</p>\n                  <p>Size in bytes: {selectedFile.size}</p>\n                </div>\n              ) : (\n                <p>Select a file to show details</p>\n              )}\n              {/* </form> */}\n            </Grid>\n            <Grid item xs={12}>\n              <Button\n                type=\"submit\"\n                className={\"MuiButton-Full\"}\n                variant=\"contained\"\n                size=\"large\"\n                color=\"primary\"\n              // onClick={sendtoBlockchain}\n              >\n                Create Token\n                        </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </Container>\n  );\n}","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/buy/Homepage.js",[],"/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/items/TransferItem.js",["174","175"],"import { makeStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { openSnackBar } from \"../snackBar/SnackBar\";\nimport Axios from 'axios';\n\nimport Web3 from 'web3'\nimport { TODO_LIST_ABI, TODO_LIST_ADDRESS } from '../../config'\n\nconst web3 = new Web3(Web3.givenProvider);\nconst NftContract = new web3.eth.Contract(TODO_LIST_ABI, TODO_LIST_ADDRESS);\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(4),\n  },\n}));\n\nexport default function TransferItem(props) {  \n  const [recieverAddress, setRecieverAddress] = useState(\"\");\n  const classes = useStyles();\n\n  const handleTransfer = async (e) => {\n    e.preventDefault()\n\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = 7000000;\n\n\n    const result = await NftContract.methods\n    .transferToken(recieverAddress, sessionStorage.getItem(\"userImage\"))\n    .send({ from: account, gas });\n\n    const formData = new FormData();\n    formData.append('newOwner', recieverAddress); \n    formData.append('action', \"transferred\");\n    formData.append('txHash', result.transactionHash);\n\n    Axios.post(`http://localhost:3001/api/transferToken${sessionStorage.getItem(\"userImage\")}`, formData).then(res => {\n      //Now do what you want with the response;\n    })\n\n  }\n\n\n  return (\n    <Container maxWidth=\"sm\" component=\"main\" className={\"MuiContainer--01\"} id=\"container\">\n      <Paper className={classes.paper}>\n        <form>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography\n                component=\"h1\"\n                variant=\"h5\"\n                align=\"center\"\n                color=\"textPrimary\"\n                gutterBottom\n              >\n                Please provide address of the reciever\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth required>\n                <InputLabel>Reciever address</InputLabel>\n                <Input\n                  id=\"userid-input\"\n                  // value={userid}\n                  onChange={(e) => setRecieverAddress(e.target.value)}\n                  required\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n            </Grid>\n            <Grid item xs={12}>\n              <Button\n                type=\"submit\"\n                className={\"MuiButton-Full\"}\n                variant=\"contained\"\n                size=\"large\"\n                color=\"primary\"\n                onClick={handleTransfer}\n              >\n                Transfer\n              </Button>\n            </Grid>\n            <Grid item xs={12}>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </Container>\n  );\n}\n","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/items/Homepage.js",["176"],"import React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport TransferItem from './TransferItem'\n\nimport Web3 from 'web3'\nimport { TODO_LIST_ABI, TODO_LIST_ADDRESS } from '../../config'\n\nconst web3 = new Web3(Web3.givenProvider);\nconst NftContract = new web3.eth.Contract(TODO_LIST_ABI, TODO_LIST_ADDRESS);\n\nconst Homepage = () => {\n\n\tconst [movieReviewList, setReviewList] = useState([])\n\tconst [tokenUri, setTokenUri] = useState(\"\");\n\n\tuseEffect(async () => {\n\n\t\tconst accounts = await window.ethereum.enable();\n\t\tconst account = accounts[0];\n\t\tconst gas = 7000000;\n\t\n\t\tconst result = await NftContract.methods\n\t\t.tokenURI(1)\n\t\t.call({ from: account, gas });\n\n\t\tsetTokenUri(result);\n\n\n\n\t\tAxios.get(`http://localhost:3001/api/oneItem${sessionStorage.getItem(\"userImage\")}`).then((response) => {\n\t\t\tsetReviewList(response.data);\n\t\t})\n\t}, [])\n\n\tconst [value, setValue] = useState(null)\n    const [componentToRender, setComponentToRender] = useState(null)\n\n\n\tconst handleEvent = (button, imagVal) => {\n        setValue(button);\n        setComponentToRender(value);\n        sessionStorage.setItem('userImage', imagVal);\n    };\n\n\n\t\n    const renderComponent = () => {\n        switch (componentToRender) {\n            case 1:\n                return <TransferItem />\n            default://replaced 'else' with 'default'\n                \n\treturn (\n\t\t<div>\n\t\t\t{movieReviewList.map((val) => {\n\n\t\t\t\treturn (\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div id='parent_div_1'>\n\t\t\t\t\t\t\t<img src={'http://localhost:3001/imgMy/' + val.token_id} alt=\"hey\" id=\"imgItem\"></img>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div id='parent_div_2'>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<p id=\"tokenName\"><u>Name: {val.user_name}</u></p>\n\t\t\t\t\t\t\t\t<p>Price : {val.price}ETH</p>\n\t\t\t\t\t\t\t\t<p>498 of 500 available</p>\n\t\t\t\t\t\t\t\t<p>Creator : Shahid&nbsp;  &nbsp; &nbsp; &nbsp;<a href=\"https://etherscan.io/tx/0x454d70395bd6898c33f6a34eac4b17a4a5d30d46355144711d2b784d70bff1e1\">Transaction id</a></p>\n\t\t\t\t\t\t\t\t<p> Created on : 29:05:2021 </p>\n\t\t\t\t\t\t\t\t<p>10% of sales will go to creator</p>\n\t\t\t\t\t\t\t\t<hr></hr>\n\t\t\t\t\t\t\t\t<p id=\"description\">Description : Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n\t\t\t\t\t\t\t\tLorem Ipsum has been the industry's standard dummy text ever since the 1500s,\n\t\t\t\t\t\t\t\twhen an unknown printer took a galley of type and scrambled it to make a type\n\t\t\t\t\t\t\t\tspecimen book. It has survived not only five centuries, but also the leap into\n\t\t\t\t\t\t\t\telectronic typesetting, remaining essentially unchanged. It was popularised in\n\t\t\t\t\t\t\t\tthe 1960s with the release of Letraset sheets containing Lorem Ipsum passages,\n\t\t\t\t\t\t\t\tand more recently with desktop publishing software like Aldus PageMaker\n\t\t\t\t\t\t\tincluding versions of Lorem Ipsum.</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<hr></hr>\n\n\t\t\t\t\t\t\t<p><u>Owner Chain</u></p>\n\t\t\t\t\t\t\t<p>Vishal&nbsp; &nbsp; &nbsp;<a href=\"https://etherscan.io/tx/0x454d70395bd6898c33f6a34eac4b17a4a5d30d46355144711d2b784d70bff1e1\">Transaction id</a>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\tAmit&nbsp; &nbsp; &nbsp;<a href=\"https://etherscan.io/tx/0x454d70395bd6898c33f6a34eac4b17a4a5d30d46355144711d2b784d70bff1e1\">Transaction id</a>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\tAshutosh&nbsp; &nbsp; &nbsp;<a href=\"https://etherscan.io/tx/0x454d70395bd6898c33f6a34eac4b17a4a5d30d46355144711d2b784d70bff1e1\">Transaction id</a>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<hr></hr>\n\t\t\t\t\t\t\t<button class=\"transferbtn\" onClick={() => handleEvent(1, val.token_id)}>Transfer</button>\n\n\t\t\t\t\t\t\t{console.log(tokenUri.split(',')[0].split(':')[1])}\n\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t</div>\n\n\t\t\t\t)\n\n\n\t\t\t})}\n\n\t\t</div>\n\t);\n        }\n    }\n\n    return (\n\n        <div>\n            {renderComponent()}\n        </div>\n\n    )\t\n\n\n\n\n\n\n\n\n\n};\n\n\nexport default Homepage","/home/vishal/BITS Pilani/Sem2/NS/Project/Work/Work/NFTY/front-end/src/components/items/Token.jsx",["177"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n\treturn (\n\t\t<div>\n                <h1>WElcome to Header.</h1>\n\t\t\t\t{/* <p>Header</p> */}\n\t\t</div>\n\t)\n};\n\n\nexport default Header",{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":1,"column":10,"nodeType":"184","messageId":"185","endLine":1,"endColumn":19},{"ruleId":"182","severity":1,"message":"186","line":2,"column":8,"nodeType":"184","messageId":"185","endLine":2,"endColumn":11},{"ruleId":"182","severity":1,"message":"187","line":3,"column":8,"nodeType":"184","messageId":"185","endLine":3,"endColumn":14},{"ruleId":"182","severity":1,"message":"188","line":4,"column":8,"nodeType":"184","messageId":"185","endLine":4,"endColumn":18},{"ruleId":"182","severity":1,"message":"189","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":12},{"ruleId":"182","severity":1,"message":"190","line":7,"column":8,"nodeType":"184","messageId":"185","endLine":7,"endColumn":13},{"ruleId":"182","severity":1,"message":"191","line":14,"column":27,"nodeType":"184","messageId":"185","endLine":14,"endColumn":33},{"ruleId":"182","severity":1,"message":"192","line":14,"column":35,"nodeType":"184","messageId":"185","endLine":14,"endColumn":40},{"ruleId":"182","severity":1,"message":"193","line":14,"column":42,"nodeType":"184","messageId":"185","endLine":14,"endColumn":48},{"ruleId":"182","severity":1,"message":"194","line":14,"column":50,"nodeType":"184","messageId":"185","endLine":14,"endColumn":54},{"ruleId":"182","severity":1,"message":"195","line":14,"column":56,"nodeType":"184","messageId":"185","endLine":14,"endColumn":64},{"ruleId":"182","severity":1,"message":"196","line":14,"column":66,"nodeType":"184","messageId":"185","endLine":14,"endColumn":76},{"ruleId":"197","severity":1,"message":"198","line":63,"column":1,"nodeType":"199","messageId":"200","endLine":128,"endColumn":12},{"ruleId":"201","severity":1,"message":"202","line":27,"column":42,"nodeType":"203","endLine":27,"endColumn":61},{"ruleId":"182","severity":1,"message":"204","line":18,"column":7,"nodeType":"184","messageId":"185","endLine":18,"endColumn":18},{"ruleId":"205","severity":1,"message":"206","line":64,"column":26,"nodeType":"207","messageId":"208","endLine":64,"endColumn":28},{"ruleId":"182","severity":1,"message":"204","line":18,"column":7,"nodeType":"184","messageId":"185","endLine":18,"endColumn":18},{"ruleId":"182","severity":1,"message":"209","line":30,"column":24,"nodeType":"184","messageId":"185","endLine":30,"endColumn":39},{"ruleId":"182","severity":1,"message":"183","line":1,"column":10,"nodeType":"184","messageId":"185","endLine":1,"endColumn":19},{"ruleId":"182","severity":1,"message":"186","line":2,"column":8,"nodeType":"184","messageId":"185","endLine":2,"endColumn":11},{"ruleId":"182","severity":1,"message":"188","line":4,"column":8,"nodeType":"184","messageId":"185","endLine":4,"endColumn":18},{"ruleId":"182","severity":1,"message":"190","line":7,"column":8,"nodeType":"184","messageId":"185","endLine":7,"endColumn":13},{"ruleId":"182","severity":1,"message":"210","line":12,"column":8,"nodeType":"184","messageId":"185","endLine":12,"endColumn":16},{"ruleId":"182","severity":1,"message":"196","line":14,"column":10,"nodeType":"184","messageId":"185","endLine":14,"endColumn":20},{"ruleId":"182","severity":1,"message":"211","line":41,"column":27,"nodeType":"184","messageId":"185","endLine":41,"endColumn":32},{"ruleId":"182","severity":1,"message":"191","line":7,"column":22,"nodeType":"184","messageId":"185","endLine":7,"endColumn":28},{"ruleId":"182","severity":1,"message":"193","line":8,"column":5,"nodeType":"184","messageId":"185","endLine":8,"endColumn":11},{"ruleId":"182","severity":1,"message":"192","line":9,"column":5,"nodeType":"184","messageId":"185","endLine":9,"endColumn":10},{"ruleId":"182","severity":1,"message":"194","line":10,"column":5,"nodeType":"184","messageId":"185","endLine":10,"endColumn":9},{"ruleId":"182","severity":1,"message":"212","line":15,"column":8,"nodeType":"184","messageId":"185","endLine":15,"endColumn":12},{"ruleId":"182","severity":1,"message":"213","line":16,"column":8,"nodeType":"184","messageId":"185","endLine":16,"endColumn":22},{"ruleId":"182","severity":1,"message":"214","line":17,"column":8,"nodeType":"184","messageId":"185","endLine":17,"endColumn":19},{"ruleId":"182","severity":1,"message":"215","line":18,"column":8,"nodeType":"184","messageId":"185","endLine":18,"endColumn":19},{"ruleId":"182","severity":1,"message":"216","line":19,"column":8,"nodeType":"184","messageId":"185","endLine":19,"endColumn":17},{"ruleId":"182","severity":1,"message":"187","line":20,"column":8,"nodeType":"184","messageId":"185","endLine":20,"endColumn":14},{"ruleId":"182","severity":1,"message":"188","line":21,"column":8,"nodeType":"184","messageId":"185","endLine":21,"endColumn":18},{"ruleId":"182","severity":1,"message":"217","line":22,"column":8,"nodeType":"184","messageId":"185","endLine":22,"endColumn":14},{"ruleId":"182","severity":1,"message":"204","line":31,"column":7,"nodeType":"184","messageId":"185","endLine":31,"endColumn":18},{"ruleId":"182","severity":1,"message":"218","line":34,"column":7,"nodeType":"184","messageId":"185","endLine":34,"endColumn":16},{"ruleId":"182","severity":1,"message":"219","line":48,"column":12,"nodeType":"184","messageId":"185","endLine":48,"endColumn":20},{"ruleId":"182","severity":1,"message":"220","line":48,"column":22,"nodeType":"184","messageId":"185","endLine":48,"endColumn":33},{"ruleId":"182","severity":1,"message":"221","line":64,"column":14,"nodeType":"184","messageId":"185","endLine":64,"endColumn":22},{"ruleId":"182","severity":1,"message":"222","line":65,"column":13,"nodeType":"184","messageId":"185","endLine":65,"endColumn":28},{"ruleId":"182","severity":1,"message":"191","line":7,"column":22,"nodeType":"184","messageId":"185","endLine":7,"endColumn":28},{"ruleId":"182","severity":1,"message":"193","line":8,"column":5,"nodeType":"184","messageId":"185","endLine":8,"endColumn":11},{"ruleId":"182","severity":1,"message":"192","line":9,"column":5,"nodeType":"184","messageId":"185","endLine":9,"endColumn":10},{"ruleId":"182","severity":1,"message":"194","line":10,"column":5,"nodeType":"184","messageId":"185","endLine":10,"endColumn":9},{"ruleId":"182","severity":1,"message":"196","line":12,"column":10,"nodeType":"184","messageId":"185","endLine":12,"endColumn":20},{"ruleId":"182","severity":1,"message":"212","line":17,"column":8,"nodeType":"184","messageId":"185","endLine":17,"endColumn":12},{"ruleId":"182","severity":1,"message":"213","line":18,"column":8,"nodeType":"184","messageId":"185","endLine":18,"endColumn":22},{"ruleId":"182","severity":1,"message":"214","line":19,"column":8,"nodeType":"184","messageId":"185","endLine":19,"endColumn":19},{"ruleId":"182","severity":1,"message":"215","line":20,"column":8,"nodeType":"184","messageId":"185","endLine":20,"endColumn":19},{"ruleId":"182","severity":1,"message":"216","line":21,"column":8,"nodeType":"184","messageId":"185","endLine":21,"endColumn":17},{"ruleId":"182","severity":1,"message":"187","line":22,"column":8,"nodeType":"184","messageId":"185","endLine":22,"endColumn":14},{"ruleId":"182","severity":1,"message":"188","line":23,"column":8,"nodeType":"184","messageId":"185","endLine":23,"endColumn":18},{"ruleId":"182","severity":1,"message":"218","line":34,"column":7,"nodeType":"184","messageId":"185","endLine":34,"endColumn":16},{"ruleId":"182","severity":1,"message":"223","line":11,"column":27,"nodeType":"184","messageId":"185","endLine":11,"endColumn":36},{"ruleId":"182","severity":1,"message":"224","line":14,"column":10,"nodeType":"184","messageId":"185","endLine":14,"endColumn":22},{"ruleId":"182","severity":1,"message":"225","line":41,"column":10,"nodeType":"184","messageId":"185","endLine":41,"endColumn":15},{"ruleId":"182","severity":1,"message":"226","line":44,"column":9,"nodeType":"184","messageId":"185","endLine":44,"endColumn":22},{"ruleId":"182","severity":1,"message":"190","line":10,"column":8,"nodeType":"184","messageId":"185","endLine":10,"endColumn":13},{"ruleId":"182","severity":1,"message":"224","line":12,"column":10,"nodeType":"184","messageId":"185","endLine":12,"endColumn":22},{"ruleId":"227","severity":1,"message":"228","line":16,"column":12,"nodeType":"229","endLine":33,"endColumn":3},{"ruleId":"182","severity":1,"message":"194","line":2,"column":10,"nodeType":"184","messageId":"185","endLine":2,"endColumn":14},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Box' is defined but never used.","'Button' is defined but never used.","'Typography' is defined but never used.","'Grid' is defined but never used.","'axios' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'useHistory' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'NftContract' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setDisplayPopup' is assigned a value but never used.","'Transfer' is defined but never used.","'token' is assigned a value but never used.","'Card' is defined but never used.","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'CardMedia' is defined but never used.","'Header' is defined but never used.","'useStyles' is assigned a value but never used.","'tokenUri' is assigned a value but never used.","'setTokenUri' is assigned a value but never used.","'transfer' is defined but never used.","'receiverAddress' is assigned a value but never used.","'useEffect' is defined but never used.","'openSnackBar' is defined but never used.","'image' is assigned a value but never used.","'changeHandler' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]